Copyright 1994-1997, 2007 Frank C. Sergeant.                    See license20040130.txt or http://pygmy.utoh.org/license.html   I can be reached by email at frank@pygmy.utoh.org.                                                                              MOND0.SCR & D0.COM are designed to work with the MC68HC11D0.    MONE1.SCR & E1.COM are designed to work with the MC68HC11E1.    MONA1.SCR & A1.COM are designed to work with the MC68HC11A1.                                                                    MODE COM1:9600,8,N,1 may be necessary in your AUTOEXEC.BAT file.                                                                  Note, MONITOR is limited to downloading a routine 256 bytes   long.  Some adjustments will need to be made to download a      longer program, for example, into external RAM.  (Easily enough done with a short routine downloaded thru MONITOR, which then   downloads the longer code to external RAM.)                                                                                     ( Load block for 'HC11 "3-instruction Forth" MONITOR for 'A1 )  ( This assumes MONA1.SCR has been opened at unit 10 )                                                                                 xxxxx LOAD  ( serial port support)                              xxxxx LOAD  ( hc11 assembler)                             10002 10005 THRU  ( Note block 10005 must be loaded twice!)     10005 10012 THRU  ( General MONITOR related wordsa small monitor for 'hc11)                                                                                           $1000  CONSTANT 'REG        ( These values apply only)              0  CONSTANT 'RAM        ( to the 'E0 & 'A1 versions)                                                                                                                                                                                                        : REG: CREATE C, DOES> C@ 'REG +  ;                                                                                               ( above word used on next block to define registers)                                                                                                                                                                                                                                                                                                                                                                                                          ( Define various RAM-based registers)                                                                                           $28 REG: SPCR ( serial peripheral control register)             $2B REG: BAUD ( serial communications baud-rate register)       $2E REG: SCSR ( serial communications status register)          $2F REG: SCDR ( serial communications data register)            $39 REG: OPTION ( watchdog time-out period)                     $3A REG: COP  ( watchdog timer reset register)                  $3C REG: HPRIO  ( for selecting external RAM)                                                                                   $00 REG: PORTA      $26 REG: PACTL     $0E REG: TCNT            $04 REG: PORTB      $06 REG: DDRB      $18 REG: TOC2            $03 REG: PORTC      $07 REG: DDRC      $23 REG: TFLG1           $08 REG: PORTD      $09 REG: DDRD      $24 REG: TMSK2                                                                                                                                           ( MONITOR  'HC11 addresses )                                    VARIABLE 'RX       ( VARIABLE 'GET-ADDR )                       VARIABLE 'TX       ( VARIABLE 'C@       VARIABLE 'C! )          VARIABLE 'MONITOR    VARIABLE OFFSET    VARIABLE MONITOR-LENGTH VARIABLE 'CODE                                                                                                                  : >MON ( a - a') 'MONITOR @ - 'RAM +  ;                         : SET-OFFSET ( -) HERE OFFSET ! ;                               : >ABS ( a - a') OFFSET @ - 'CODE @ + ;                                                                                         : RX, ( macro) 'RX @ DIR JSR,  ;                                : TX, ( macro) 'TX @ DIR JSR,  ;                                : ADDR-IN, ( macro)  RX, TAB, RX,  ; ( leaves addr in regD)     : COP,  ( reset watchdog timer)                                   PSHB, $55 #, LDB, COP ,Y STB, $AA #, LDB, COP ,Y STB, PULB, ;                                                                 ( MONITOR   ** this block must be loaded twice **  )            CODE MONITOR                                    HERE 'MONITOR !  'REG #, LDY,  CLRA, SPCR #) STA,  ( un-wire-OR port D)           BEGIN,  RX, TAB, ( ie save count)  'CODE @ #, LDX,                      BEGIN, RX, 0 ,X STA, INX,  DECB, 0=, UNTIL,                    'CODE @ DIR JSR,  AGAIN, ( rx)                          ( rx)                                          HERE >MON 'RX !   BEGIN, ( COP,)  $20 #, LDA, SCSR #) BITA, <>, UNTIL,            SCDR ,Y LDA, ( read byte from PC)  RTS,                        ( tx)                                          HERE >MON 'TX !     HERE  $80 SCSR ,Y  BRCLR, ( wait for TDRE)                      SCDR ,Y  STA,  ( send byte to PC)  RTS,                      END-CODE                                                       HERE ' MONITOR - DUP MONITOR-LENGTH ! ( len)  'RAM + 'CODE !    ( 58 bytes with COP, and 46 without )                                                                                           ( download monitor to 'HC11 board )                                                                                             : .OUT ( a # -)  FOR C@+ SER-OUT  NEXT DROP ;                                                                                   : ?EMIT ( c -) DUP $20 $7F BETWEEN IF EMIT ELSE . THEN ;                                                                        : .OUTE ( a # -)                                                  FOR DUP C@ SER-OUT  SER-IN ?EMIT  1+ NEXT DROP ;                                                                              : ADDR-OUT ( a -)  BYTES ( lsb msb) SWAP SER-OUT SER-OUT ;                                                                                                                                                                                                                                                                                                                                                                                                      ( Compile 'HC11 code routines in PC's memory, which can be        downloaded later to 'HC11 and executed )                                                                                      : XCODE:  CREATE ( - a)                                                          HERE 0 C, ( save space for routine's length)             DOES> C@+  DUP  SER-OUT  .OUT  ;                                ( send length byte & machine code to 'hc11 board)                                                                     : XEND ( addr-of-length-byte -) HERE OVER - 1- SWAP C!  ;         ( this fills in the length byte, now that it is known)                                                                                                                                                                                                                                                                                                                                                                                                                                                                        XCODE: (X@  ADDR-IN, XGDX, 0 ,X LDA, TX, RTS, XEND              : 1/2-X@ ( a -) (X@ ADDR-OUT   ; ( used to verify connection)   : X@ ( a - c) 1/2-X@ SER-IN ;                                                                                                   XCODE: (X!   ADDR-IN, XGDX, RX, 0 ,X STA, RTS,   XEND           : X! ( c a -) (X!  ADDR-OUT SER-OUT  ;                                                                                          XCODE: (XCALL  ADDR-IN, XGDX,  0 ,X JSR, RTS,  XEND             : XCALL ( aa - a')  HEX CR DUP 4 U.R 2 SPACES                      DUP  2 FOR 8 FOR DUP X@ 3 U.R 1+ NEXT SPACE NEXT DROP 2 SPACES  ( a) 2 FOR 8 FOR DUP X@ DUP $20 $7F WITHIN NOT                          IF DROP $2E THEN EMIT 1+ NEXT SPACE NEXT ;                                                                            : XDU ( a # - a') FOR ?SCROLL XDUMP NEXT  DROP  ;                                                                               : X2@ ( u - v) DUP X@ $100 *  SWAP 1+ X@  +  ;                                                                                  : X2! ( u a -)  PUSH BYTES ( lsb msb) R@ X!  ( lsb) POP 1+ X! ;                                                                                                                                                                                                                                                                                                                                 ( Adjust baud rate on both PC and 'HC11, assumes 8 MHz crystal)                                                                 : 1200X ( -)  $33 BAUD X!  50 MS  1200 BPS  ;                   : 9600X ( -)  $30 BAUD X!  50 MS  9600 BPS   ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ( For 8 MHz xtal )                                                                                                              : RS ( -)  -DTR 100 MS +DTR 100 MS  1200 BPS  ;   ( reset)                                                                      : DL8 ( -)                                                        RS                                                              $FF SER-OUT  ['] MONITOR   ( a)                                 ( MONITOR-LENGTH @  ( a #)      ( use this for 'D0 & 'E1)                      256  ( a #)      ( use this for 'A1 )            ( a #) .OUT   150 MS   RESET-SER-IN   9600X  ;                                                                                                                                                  ( Note, for 'A1, we must download exactly 256 bytes,              regardless of actual length of program.)                                                                                                                                                    ( Some possibly useful macros)                                                                                                  : PSHD, ( macro)  PSHB, PSHA,  ;                                : PULD, ( macro)  PULA, PULB,  ;                                : DSTACK, ( macro) TSY, TXS,   ;                                : RSTACK, ( macro) TSX, TYS,   ;                                : LIT,    ( macro)  ( u