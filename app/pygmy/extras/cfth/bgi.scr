Experiments with co-ordinating C and Forth                                                                                      Copyright 1995 Frank Sergeant                                                                                                             frank@pygmy.utoh.org                                            http://pygmy.utoh.org                                                                                                 See license file license20040130.txt or                                   http://pygmy.utoh.org/license.html                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ( Load block)                                                   4002 4009 THRU                                                  SAVE PYGMYC.COM                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ( CTABLE holds the address of the table of addresses in C)                                                                      : 2VARIABLE ( -) ( - a)  VARIABLE 0 ,  ;                                                                                        2VARIABLE CTABLE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( Macros to make building a call to a C routine easy)                                                                           : PUSH-ARGS, ( #in -)                                             ( move parms to Forth's return stack, ie C's stack to be)       FOR   BX POP,  SWITCH,  BX PUSH, SWITCH,  NEXT ( off seg)  ;                                                                  : GET-RESULT, ( #out -)                                           DUP 0= IF  DROP  BX POP, ( will refill TOS) EXIT THEN           2 = IF DX PUSH, THEN AX BX MOV, ( result to TOS)      ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ( Use this to define a word which calls a C routine)                                                                            : CDECL:  ( index #in #out -)   CODE    SWAP                      BP AX MOV, ( save Forth's rstk ptr)                             BX PUSH,   ( put TOS on real stack)    PUSH-ARGS,               AX PUSH,  SI PUSH, DS PUSH,  ( save important registers)        SWITCH,  ( make return stack become C's stack)                  CTABLE #, DI MOV,  0 [DI] DI LDS,                               ( now DS:DI points to 1st table entry in the C program)         SWAP ( #out index) 2* 2* [DI] LCALL,  ( call via the table)     SWITCH,  ( give us back our real data stack pointer)            DS POP, SI POP, BP POP, ( & original return stack pointer)      ( #out) GET-RESULT,  NXT,   ;                                                                                                                                                                                                                                 ( Interface to a C data structure)                              ( Defines a word which returns address of a C data structure)                                                                   : CVAR: ( index -) ( - seg off)                                   CREATE 4 * ,                                                     DOES> @ CTABLE 2@ ROT + 2DUP 2 + L@ ROT ROT L@  ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ( Define the data structures and subroutines)                   ( index  #in #out)                                                    0               CVAR:  J              ( - seg off)              1    2    1    CDECL:  TST            ( a b - c)                2    6    0    CDECL:  initgraph      ( Ldrv Lmode Lstr -)      3    0    0    CDECL:  closegraph     ( -)                      4    0    1    CDECL:  getgraphmode   ( - mode)                 5    1    0    CDECL:  setgraphmode   ( mode -)                 6    0    0    CDECL:  restorecrtmode ( -)                      7    0    0    CDECL:  graphdefaults  ( -)                      8    0    1    CDECL:  graphresult    ( - result)               9    0    1    CDECL:  getmaxcolor    ( - u)                   10    1    0    CDECL:  setcolor       ( color -)               11    4    0    CDECL:  putpixel       ( x y color -)           12    4    0    CDECL:  line           ( x1 y1 x2 y2 -)    ( NOTE: "L" as in Ldrv, Lstr, etc means a 4byte address )       ( Define the data structures and subroutines)                   ( index  #in #out)                                                   13    2    0    CDECL:  linerel        ( dx dy -)               14    2    0    CDECL:  lineto         ( x y -)                 15    2    0    CDECL:  moverel        ( dx dy -)               16    2    0    CDECL:  moveto         ( x y -)                 17    3    0    CDECL:  circle         ( x y radius -)          18    3    0    CDECL:  settextstyle   ( font dir size -)       19    2    0    CDECL:  outtext        ( Lstr -)                20    4    0    CDECL:  outtextxy      ( x y Lstr -)            21               CVAR:  gdriver        ( - seg off)             22               CVAR:  gmode          ( - seg off)             23               CVAR:  textfont       ( - seg off)             24               CVAR:  textdir        ( - seg off)                                                                                                                                        : .ERR  ( -) graphresult .  ;                                   : Lnull ( - long-null-C-string)   "  "  2 +  CS@  ;             : MSG ( - off seg) " HELLO! " 1+  CS@  ;                        : INIT-GPH ( -)   gdriver SWAP  gmode SWAP                        " G:\BC45\BGI\" 1+ CS@  initgraph  ( .ERR ) ;                 : TXT ( -)  restorecrtmode ( .ERR ) ;                           : GPH ( -)  getgraphmode ( u) setgraphmode  ;                   : TXTSIZE ( # -) PUSH textfont L@ textdir L@ POP settextstyle ; : TST1 ( -)  INIT-GPH                                             20 30 moveto  " This is Pygmy! " 1+ CS@ outtext    2 TXTSIZE    20 40 moveto  " This is Pygmy! " 1+ CS@ outtext    4 TXTSIZE    20 60 moveto  " This is Pygmy! " 1+ CS@ outtext    8 TXTSIZE    20 80 moveto  " This is Pygmy! " 1+ CS@ outtext                 300 240 75 circle                                               KEY DROP  TXT   closegraph   ;                                                                                                ( draw various circles)                                                                                                         : END-GPH ( -)                                                    KEY DROP  TXT   closegraph   ;                                                                                                : CONCENTRIC ( -)                                                 INIT-GPH   300 240 ( center)                                    15 FOR ( x y) 2DUP  I 5 * ( ie radius)  circle  NEXT 2DROP      END-GPH  ;                                                                                                                    : CIRCLES ( -) INIT-GPH  400 200 ( center)                        10 FOR  ( x y) 2DUP 75 circle                                           ( x y) -2 I * +UNDER    3 I * +  ( x y)                 NEXT  2DROP  END-GPH  ;                                                                                                                                                                       