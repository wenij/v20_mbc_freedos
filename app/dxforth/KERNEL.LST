Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 1
kernel.asm



      1				     ;
      2				     ;			     DX-FORTH
      3				     ;
      4				     ; A direct-threaded 8086 Forth compiler for MSDOS 2.x
      5				     ;
      6				     ;
      7				     ; Assemble	to preliminary COM file	using MASM or TASM:
      8				     ;
      9				     ; for Borland TASM	3
     10				     ;
     11				     ;	     TASMX /l KERNEL.ASM
     12				     ;	     TLINK /t KERNEL
     13				     ;
     14				     ; for Microsoft MASM 5.1
     15				     ;
     16				     ;	     MASM /l KERNEL.ASM
     17				     ;	     LINK KERNEL.OBJ
     18				     ;	     EXE2BIN KERNEL.EXE	KERNEL.COM
     19				     ;
     20				     ; Make compressed EXE executable:
     21				     ;
     22				     ;	     KERNEL.COM	- SAVE KERNEL BYE
     23				     ;	     DEL KERNEL.COM
     24				     ;
     25
     26					     .8086
     27
     28	      =0000		     no	     equ     0
     29	      =FFFF		     yes     equ     not no
     30
     31				     ; Date last revised
     32
     33				     date     macro
     34					     db	     '2022-01-11'
     35					      endm
     36
     37				     ; Modification level
     38
     39	      =0004		     rel     equ     4	     ; release #
     40	      =002D		     rev     equ     45	     ; revision	#
     41				     beta    equ     no	     ; beta release
     42
     43				     ; Equates for conditional assembly
     44
     45				     debug   equ     no	     ; debugging messages
     46				     ucase   equ     yes     ; forth names case	insensitive
     47				     fpeng   equ     yes     ; engineering output functions
     48				     cfs     equ     yes     ; control flow stack extensions
     49				     wopt    equ     yes     ; warning options
     50				     ldp     equ     yes     ; allow leading decimal point on f/p input
     51				     fpx     equ     no	     ; extra f/p functions
     52				     ints    equ     yes     ; control interrupts
     53
     54				     ; Command-line assembly options
     55
     56	      =0000		     x	     =	     no	     ; show hidden words
     57	      =FFFF		     fstack  =	     yes     ; separate	floating point stack
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 2
kernel.asm



     58	      =FFFF		     float   =	     yes     ; include floating	point routines
     59	      =0006		     nfd     =	     6	     ; max open	source files (min = 2)
     60	      =0000		     retro   =	     no	     ; classic forth behaviours
     61
     62
     63
     64
     65
     66
     67				     ; Memory sizes
     68				     ;
     69				     ; Set memory used by the forth compiler (default is 96K).
     70				     ; Systems with limited memory may use reduced values e.g.
     71				     ; EM=9000h, SM=4000h, HM=2800h results in a 46k footprint.
     72				     ;
     73				     ; EM SM HM	must be	a multiple of 16 bytes!
     74
     75	      =FFF0		     em	     =	     0fff0h  ; end of memory + 1
     76	      =B000		     sm	     =	     0b000h  ; system dict. start
     77	      =8000		     hm	     =	     8000h   ; header memory size
     78
     79	      =0002		     cw	     equ     2	     ; cell size (bytes)
     80	      =0004		     fw	     equ     4	     ; float size (bytes)
     81
     82				     ; user-specified values from the command-line
     83
     84
     85
     86
     87				     ; Buffer sizes
     88
     89	      =0080		     us	     equ     128	     ; user variable space
     90	      =0100		     rts     equ     256	     ; return stack space
     91
     92	      =0050		     tibsiz  equ     80		     ; TIB buffer size
     93	      =0500		     bufsiz  equ     10*128	     ; max block size (multiple	of 128)
     94	      =0050		     pfsiz   equ     79+1	     ; max path/filename size
     95	      =0024		     wbsiz   equ     31+5	     ; min WORD	buffer size
     96	      =00FF		     pssiz   equ     255	     ; max parsed string buffer	size
     97	      =0058		     fdsiz   equ     pfsiz+(4*cw)    ; file descriptor size
     98	      =0044		     pno     equ     68		     ; pictured	numeric	buffer size
     99
    100				     ; DOS and memory equates
    101
    102	      =FECD		     psb     equ     em-wbsiz-pssiz  ; buffer WORD S"
    103	      =FE7D		     tib     equ     psb-tibsiz	     ; TIB
    104	      =F97D		     sfb     equ     tib-bufsiz	     ; screen block buffer
    105	      =F76D		     fdbs    equ     sfb-(fdsiz*nfd) ; source file descriptor blocks
    106
    107	      =005C		     dosfcb  equ     005ch	     ; default file control block
    108	      =0080		     dosbuf  equ     0080h	     ; default DTA and command-line buffer
    109	      =0100		     tpa     equ     0100h	     ; program start
    110
    111				     ; Equates
    112
    113	      =MAIN:01BA	     init    =	     noop    ; INIT
    114	      =MAIN:01BA	     ident   =	     noop    ; IDENT
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 3
kernel.asm



    115	      =MAIN:0F79	     fnu     =	     false   ; FNUMBER
    116	      =0000		     fnum    =	     0	     ; fp-stack	items
    117	      =0000		     fps     =	     0	     ; fp-stack	size
    118
    119	      =0000		     toppru  =	     0	     ; top prunes
    120
    121
    122	      =0007		     maxsig  =	     7	     ; max significant digits
    123
    124	      =MAIN:23C2	     init    =	     fpini
    125	      =MAIN:C418	     ident   =	     fiden
    126	      =MAIN:C44A	     fnu     =	     fnumb
    127	      =0006		     fnum    =	     6
    128	      =002C		     fps     =	     (fnum+5)*fw ; allow extra for fp display etc
    129
    130	      =MAIN:C48B	     toppru  =	     fprun1
    131
    132
    133				     ; ASCII characters
    134
    135	      =0007		     bel     equ     07h     ; bell
    136	      =0008		     bs	     equ     08h     ; backspace
    137	      =0009		     tab     equ     09h     ; tab
    138	      =000A		     lf	     equ     0ah     ; line feed
    139	      =000C		     ff	     equ     0ch     ; form feed
    140	      =000D		     cr	     equ     0dh     ; carriage	return
    141	      =0018		     can     equ     18h     ; ctl-x
    142	      =001A		     ctlz    equ     1ah     ; ctl-z
    143	      =001B		     escape  equ     1bh     ; escape
    144
    145				     ;
    146				     ; Forth Registers
    147				     ;
    148				     ;	     FORTH   8086    Forth preservation	rules
    149				     ;	     -----   ----    ------------------------
    150				     ;	     IP	     SI	     Interpretive pointer. Should be preserved across
    151				     ;			     forth words.
    152				     ;	     SP	     SP	     Data stack	pointer. Should	be used	only as	data
    153				     ;			     stack across forth	words. May be used within forth
    154				     ;			     words if restored before NEXT.
    155				     ;	     RP	     BP	     Return stack pointer. Should be preserved across
    156				     ;			     forth words.
    157				     ;		     AX	     Input only	when APUSH called.
    158				     ;		     DX	     Input only	when DPUSH called.
    159				     ;
    160				     ;	     comment conventions:
    161				     ;
    162				     ;	     a	     =	     address
    163				     ;	     c	     =	     8b	character
    164				     ;	     u	     =	     16b unsigned number
    165				     ;	     n	     =	     16b signed	number
    166				     ;	     x	     =	     16b signed	or unsigned number
    167				     ;	     d	     =	     32b signed	double number
    168				     ;	     ud	     =	     32b unsigned double number
    169				     ;	     xd	     =	     32b signed	or unsigned number
    170				     ;	     cfa,xt  =	     addr of code field	(execution token)
    171				     ;	     lfa     =	     addr of link field
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 4
kernel.asm



    172				     ;	     nfa     =	     addr of name field
    173				     ;	     pfa     =	     addr of parameter field (body)
    174				     ;
    175				     ;	     FIG     Fig-FORTH model
    176				     ;	     F79     Forth-79 Standard
    177				     ;	     F83     Forth-83 Standard
    178				     ;	     F94     Forth-94 ANS FORTH	Standard
    179
    180				     ;
    181				     ; Memory allocation
    182				     ;
    183				     ; The memory above	LIMIT is used only by the interpreter.	This space
    184				     ; is not wasted for turnkey applications as LIMIT,	user variables and
    185				     ; stacks are relocated to EM giving applications more free	ram (as
    186				     ; indicated by UNUSED).  Word headers have	their own segment.
    187				     ;
    188				     ; HM    |-------------
    189				     ;	     |
    190				     ; DPH   |-------------
    191				     ;	     |		     word headers
    192				     ; 0     |-------------
    193				     ;
    194				     ; EM    |-------------  end of memory
    195				     ;	     |		     parsed string buffer
    196				     ; PSB   |-------------
    197				     ;	     |		     terminal input buffer
    198				     ; TIB   |-------------
    199				     ;	     |		     block buffer
    200				     ; SFB   |-------------
    201				     ;	     |		     file descriptor blocks
    202				     ; ESM   |-------------  end of system memory
    203				     ;	     |
    204				     ; DPS   |-------------
    205				     ;	     |		     system dictionary
    206				     ; LIMIT |-------------
    207				     ;	     |		     user variables
    208				     ; R0    |-------------
    209				     ;	     |		     return stack
    210				     ; FS0   |-------------
    211				     ;	     |		     separate fp stack
    212				     ; S0    |-------------
    213				     ;	     |		     data stack
    214				     ; PAD   |-------------
    215				     ;	     |		     word and number conversion	area
    216				     ; DP    |-------------
    217				     ;	     |		     application dictionary
    218				     ; 0100h |-------------
    219
    220				     ;
    221				     ; Macro for generating word header
    222				     ;
    223
    224	      =0000		     lastl   =	     0		     ; initial link pointer (end of list)
    225
    226				     hdr      macro  en,str,im,fl,axt
    227					     local   a,b
    228								     ;;	en  = enable hdr  0=disable
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 5
kernel.asm



    229								     ;;	str = name string
    230								     ;;	im  = immediate
    231								     ;;	fl  = system
    232								     ;;	axt = xt
    233
    234					      if     en		     ;;	if header enable
    235
    236					     cseg
    237					      ifnb   <fl>
    238					     aseg
    239					      endif
    240
    241				     cfadr   =	     $		     ;;	code field address
    242
    243				     heads   segment public	     ;;	put heads in own segment
    244				     lnk     =	     $		     ;;	link address for next word
    245
    246				     bits    =	     0
    247
    248					      ifnb   <im>
    249				     bits    =	     bits+40h	     ;;	set immediate bit
    250					      endif
    251
    252					      ifnb   <axt>	     ;;	if xt
    253				     cfadr   =	     axt	     ;;	set cfa
    254					      ifb    <fl>	     ;;	if alias
    255				     bits    =	     bits+80h	     ;;	set bit
    256					      endif
    257					      endif
    258
    259					     db	     a		     ;;	generate count byte
    260				     b	     =	     $
    261					     db	     str	     ;;	generate name
    262				     a	     =	     $-b+bits
    263
    264					     dw	     lastl	     ;;	generate link field
    265					     dw	     cfadr	     ;;	generate pointer to code field
    266
    267				     lastl   =	     lnk-horig
    268
    269				     heads   ends
    270
    271					      endif
    272
    273					     cseg	     ;;	switch to system or application
    274					      ifnb   <fl>
    275					     aseg
    276					      endif
    277
    278					      endm
    279
    280				     ; Macro to	generate counted string
    281
    282				     dcs      macro  s1,s2,s3,s4     ;;	allow comma separated
    283					     local   a,b
    284					     db	     a		     ;;	generate count byte
    285				     b	     db	     s1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 6
kernel.asm



    286					      ifnb   <s2>
    287					     db	     s2
    288					      ifnb   <s3>
    289					     db	     s3
    290					      ifnb   <s4>
    291					     db	     s4
    292					      endif
    293					      endif
    294					      endif
    295				     a	     =	     $-b
    296					      endm
    297
    298				     ; Macro to	switch between application and system memory
    299
    300				     cseg     macro
    301				     loc     =	     $
    302					      if     loc ge (orig+sm)
    303				     pchi    =	     $
    304					     org     pclo
    305					      endif
    306					      endm
    307
    308				     aseg     macro
    309				     loc     =	     $
    310					      if     loc lt (orig+sm)
    311				     pclo    =	     $
    312					     org     pchi
    313					      endif
    314					      endm
    315
    316				     ; Macro for I/O delay to same peripheral
    317
    318				     iodelay  macro
    319					     jmp     short $+2
    320					      endm
    321
    322				     ; Macro for inline	NEXT
    323
    324				     nextt    macro
    325					     lodsw
    326					     jmp     ax
    327					      endm
    328
    329				     ; Macro to	ignore next 1 bytes
    330
    331				     ignore1  macro
    332					     db	     0a8h    ;;	test al,n
    333					      endm
    334
    335				     ; Macro to	ignore next 2 bytes
    336
    337				     ignore2  macro
    338					     db	     0a9h    ;;	test ax,n
    339					      endm
    340
    341				     ; Macro to	generate fdb table
    342
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 7
kernel.asm



    343				     gfdb     macro
    344					     local   a
    345				     a	     =	     fdbs
    346					      rept   nfd
    347					     dw	     a
    348				     a	     =	     a+fdsiz
    349					      endm
    350					      endm
    351
    352				     ; Assembly	initialisation
    353
    354				     dgroup  group   main,heads	     ; put in same segment for COM file
    355
    356	0000			     main    segment byte public 'CODE'
    357	0000			     main    ends
    358
    359	0000			     heads   segment byte public
    360	      =HEADS:0000	     horig   =	     $		     ; base of segment
    361	0000  00		     dnfa    db	     0		     ; dummy nfa - don't remove!
    362	0001			     heads   ends
    363
    364	0000			     main    segment
    365					     assume  cs:main,ds:main,ss:main,es:main
    366
    367					     org     0
    368	      =MAIN:0000	     orig    equ     $
    369
    370					     org     $+tpa
    371	      =MAIN:0100	     pclo    =	     $
    372
    373					     org     sm
    374	      =MAIN:B000	     pchi    =	     $
    375
    376				     ;
    377				     ; Code starts here
    378				     ;
    379					     cseg
    380
    381	0100  E9 11B9		     start:  jmp     cldd
    382
    383					     org     start+3
    384
    385				     ; Video parameters	- do not change
    386
    387	0103  ?? ??		     cattr   db	     ?,?	     ; current video attribute	     0103
    388	0105  ?? ??		     cmode   db	     ?,?	     ; current video mode, page	     0105
    389	0107  ?? ??		     wmin    db	     ?,?	     ; current window min (col,row)  0107
    390	0109  ?? ??		     wmax    db	     ?,?	     ; current window max (col,row)  0109
    391
    392	010B  05*(??)			     db	     5 dup (?)	     ; reserved			     010B
    393
    394				     ; Temporary filename buffers
    395
    396	      =0051		     zbsiz   equ     pfsiz+1	     ; allow for trailing null
    397
    398	0110  51*(00)		     zb1     db	     zbsiz dup (0)
    399	0161  51*(00)		     zb2     db	     zbsiz dup (0)
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 8
kernel.asm



    400
    401	      =MAIN:01B0	     tmpstk  equ     $-cw	     ; temp stack for startup &	EXE load
    402
    403				     ;	     DXFORTH  (	-- minor major )
    404
    405					     hdr     1,'DXFORTH'
1   406					     cseg
1   407	0001			     heads   segment public	     ;
1   408	0001  07			     db	     ??0000	     ;
1   409	0002  44 58 46 4F 52 54	48	     db	     'DXFORTH'		     ;
1   410	0009  0000			     dw	     lastl	     ;
1   411	000B  01B2r			     dw	     cfadr	     ;
1   412	000D			     heads   ends
1   413					     cseg	     ;
    414	01B2  B8 0004		     dxf:    mov     ax,rel
    415	01B5  BA 002D			     mov     dx,rev
    416
    417				     ; NEXT is forth's address interpreter.  For primitives, it	is usually
    418				     ; compiled	in-line	for maximum speed.
    419
    420	01B8  52		     dpush:  push    dx		     ; 2PUSH
    421	01B9  50		     apush:  push    ax		     ; 1PUSH
    422
    423				     ;	     NOOP  ( --	)
    424
    425					     hdr     1,'NOOP'	     ; FIG
1   426					     cseg
1   427	000D			     heads   segment public	     ;
1   428	000D  04			     db	     ??0002	     ;
1   429	000E  4E 4F 4F 50		     db	     'NOOP'	     ;
1   430	0012  0001			     dw	     lastl	     ;
1   431	0014  01BAr			     dw	     cfadr	     ;
1   432	0016			     heads   ends
1   433					     cseg	     ;
    434	      =MAIN:01BA	     noop    equ     $
    435
    436	01BA			     next:   nextt		     ; NEXT
1   437	01BA  AD			     lodsw
1   438	01BB  FF E0			     jmp     ax
    439
    440	01BD  ?? ??		     imode   db	     ?,?	     ; initial video mode, page
    441	01BF  ??		     iattr   db	     ?		     ; initial video attribute
    442	01C0  02*(??)			     db	     2 dup (?)	     ; spare
    443
    444				     ; Boot up variables used by COLD, must be in same order as	USER variables
    445
    446	      =MAIN:01C2	     initu   equ     $		     ; <<< beginning data
    447	01C2  03*(????)			     dw	     3 dup (?)	     ; reserved	for multitasking
    448	01C8  ????		     is0     dw	     ?		     ; s0
    449	01CA  ????		     ir0     dw	     ?		     ; r0
    450	01CC  23CFr		     idp     dw	     initdp	     ; dp
    451	01CE  C48Fr		     idps    dw	     initdps	     ; dps
    452	01D0  B8C7r		     ivoc    dw	     forth2	     ; voc-link
    453	01D2  ????		     ifs0    dw	     ?		     ; fs0
    454	01D4  1481		     idph    dw	     initdph	     ; dph
    455	      =MAIN:01D6	     initu2  equ     $		     ; <<< end data
    456
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 9
kernel.asm



    457	01D6  ????		     esm     dw	     ?		     ; end of system memory
    458	01D8  ????		     iboot   dw	     ?		     ; initial boot value
    459	01DA  0000 0000		     dosv    dw	     0,0	     ; DOS version (major,minor)
    460	01DE  ??		     defdrv  db	     ?		     ; default drive
    461	01DF  ??		     scaps   db	     ?		     ; COMPARE SEARCH case flag
    462	01E0  ??		     cmdf    db	     ?		     ; command line flag
    463	01E1  ?? ??		     kbfn    db	     ?,?	     ; keyboard	functions
    464	01E3  ??		     kbpend  db	     ?		     ; key pending (0 if none)
    465	01E4  ????		     fssav   dw	     ?		     ; forth stack save
    466	01E6  ???? ????		     ulimit  dw	     ?,?	     ; LIMIT for turnkey
    467	01EA  ????		     hstart  dw	     ?		     ; segment offset of heads in image
    468	01EC  ????			     dw	     ?		     ; spare
    469
    470				     ; Misc. subroutines
    471
    472				     ;	     set cursor	position
    473
    474	01EE  B4 02		     scurs:  mov     ah,2
    475					     ignore2
1   476	01F0  A9			     db	     0a9h    ;
    477
    478				     ;	     get cursor	position
    479
    480	01F1  B4 03		     gcurs:  mov     ah,3
    481
    482				     ;	     perform int 10h using current page	number
    483
    484	01F3  8A 3E 0106r	     videop: mov     bh,cmode+1
    485	01F7  EB 04			     jmp     short video
    486
    487				     ;	     perform INT 10h using current attribute
    488
    489	01F9  8A 3E 0103r	     videoa: mov     bh,cattr
    490
    491				     ;	     perform INT 10h saving SI,	BP
    492
    493	01FD  56		     video:  push    si
    494	01FE  55			     push    bp
    495	01FF  CD 10			     int     10h
    496	0201  5D			     pop     bp
    497	0202  5E			     pop     si
    498	0203  C3			     ret
    499
    500				     ;	     get video mode  AL=mode AH=page BH=cols
    501
    502	0204  B4 0F		     gmode:  mov     ah,0fh
    503	0206  E8 FFF4			     call    video
    504	0209  86 FC			     xchg    bh,ah
    505	020B  A3 0105r			     mov     word ptr cmode,ax	     ; save
    506	020E  C3			     ret
    507
    508				     ;	     read BIOS tick timer  AX:DX = ticks after midnight
    509				     ;
    510				     ;	     BIOS INT 1Ah AH=0 is not used as it may cause
    511				     ;	     DOS to fail to increment the system date
    512
    513
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 10
kernel.asm



    514	020F  1E		     tod:    push    ds
    515	0210  2B C0			     sub     ax,ax
    516	0212  8E D8			     mov     ds,ax
    517	0214  9C			     pushf
    518	0215  FA			     cli
    519	0216  8B 16 046C		     mov     dx,ds:[046ch]
    520	021A  A1 046E			     mov     ax,ds:[046eh]
    521	021D  9D			     popf
    522	021E  1F			     pop     ds
    523	021F  C3			     ret
    524
    525
    526				     ;	     wait for timer tick  AX:DX	= TOD
    527
    528	0220  53		     tsync:  push    bx
    529	0221  E8 FFEB			     call    tod
    530	0224  8B DA		     tsync1: mov     bx,dx
    531	0226  E8 FFE6			     call    tod
    532	0229  3B DA			     cmp     bx,dx
    533	022B  74 F7			     jz	     tsync1
    534	022D  5B			     pop     bx
    535	022E  C3			     ret
    536
    537				     ;	     make uppercase AL
    538
    539	022F  3C 61		     upc:    cmp     al,'a'
    540	0231  72 06			     jc	     upc1
    541	0233  3C 7B			     cmp     al,'z'+1
    542	0235  73 02			     jnc     upc1
    543	0237  34 20			     xor     al,20h
    544	0239  C3		     upc1:   ret
    545
    546				     ;	     move block	up/down	 AX = src, DI =	dest, CX = cnt,	DX = scratch
    547
    548	023A  8B D7		     bmove:  mov     dx,di
    549	023C  2B D0			     sub     dx,ax
    550	023E  74 F9			     jz	     upc1	     ; dest=src
    551	0240  3B D1			     cmp     dx,cx
    552	0242  72 17			     jc	     bmovu	     ; overlap and moving-up
    553				     ;	     jmp     movd
    554
    555				     ;	     move block	down  AX = src,	DI = dest, CX =	cnt
    556				     ;	     increment by word	NOTE: does not propagate
    557
    558	0244  1E		     movd:   push    ds
    559	0245  07			     pop     es
    560	0246  96		     movd1:  xchg    si,ax
    561	0247  E3 0F			     jcxz    movd3
    562	0249  F7 C7 0001		     test    di,1
    563	024D  73 02			     jnc     movd2
    564	024F  A4			     movsb
    565	0250  49			     dec     cx
    566	0251  D1 E9		     movd2:  shr     cx,1
    567	0253  F3> A5			     rep     movsw
    568	0255  73 01			     jnc     movd3
    569	0257  A4			     movsb
    570	0258  8B F0		     movd3:  mov     si,ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 11
kernel.asm



    571	025A  C3			     ret
    572
    573				     ;	     move block	up  AX = src, DI = dest, CX = cnt
    574
    575	025B  1E		     bmovu:  push    ds
    576	025C  07			     pop     es
    577	025D  96			     xchg    si,ax
    578	025E  03 F9			     add     di,cx
    579	0260  03 F1			     add     si,cx
    580	0262  4E			     dec     si
    581	0263  4F			     dec     di
    582	0264  FD			     std
    583	0265  F3> A4			     rep     movsb
    584	0267  FC			     cld
    585	0268  8B F0			     mov     si,ax
    586	026A  C3			     ret
    587
    588				     ;	     push inline string
    589
    590	026B  5A		     strr:   pop     dx
    591	026C  2B C0			     sub     ax,ax
    592	026E  AC			     lodsb
    593	026F  56			     push    si
    594	0270  50			     push    ax
    595	0271  03 F0			     add     si,ax
    596	0273  FF E2			     jmp     dx
    597
    598				     ;	     runtime for colon definitions
    599
    600	0275  83 ED 02		     docol:  sub     bp,cw	     ; push IP onto return stack
    601	0278  89 76 00			     mov     [bp],si
    602	027B  5E			     pop     si		     ; get new IP from 'call'
    603					     nextt
1   604	027C  AD			     lodsw
1   605	027D  FF E0			     jmp     ax
    606
    607				     ;	     runtime for user variables
    608
    609	027F  5B		     douse:  pop     bx
    610	0280  A1 0FBFr			     mov     ax,upp
    611	0283  03 07			     add     ax,[bx]
    612	0285  50			     push    ax
    613					     nextt
1   614	0286  AD			     lodsw
1   615	0287  FF E0			     jmp     ax
    616
    617				     ;	     EXIT  ( --	)	     exit colon	definition
    618
    619					     hdr     1,'EXIT'
1   620					     cseg
1   621	0016			     heads   segment public	     ;
1   622	0016  04			     db	     ??0004	     ;
1   623	0017  45 58 49 54		     db	     'EXIT'	     ;
1   624	001B  000D			     dw	     lastl	     ;
1   625	001D  0289r			     dw	     cfadr	     ;
1   626	001F			     heads   ends
1   627					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 12
kernel.asm



    628	0289  8B 76 00		     exit:   mov     si,[bp]	     ; pop IP from return stack
    629
    630				     ;	     UNNEST  ( -- )
    631
    632					     hdr     1,'UNNEST'
1   633					     cseg
1   634	001F			     heads   segment public	     ;
1   635	001F  06			     db	     ??0006	     ;
1   636	0020  55 4E 4E 45 53 54		     db	     'UNNEST'		     ;
1   637	0026  0016			     dw	     lastl	     ;
1   638	0028  028Cr			     dw	     cfadr	     ;
1   639	002A			     heads   ends
1   640					     cseg	     ;
    641	028C  83 C5 02		     unnest: add     bp,cw
    642	028F			     unnest1:nextt
1   643	028F  AD			     lodsw
1   644	0290  FF E0			     jmp     ax
    645
    646				     ;	     EXIT1		     exit colon	to code
    647
    648	0292  56		     exit1:  push    si
    649	0293  8B 76 00			     mov     si,[bp]
    650	0296  83 C5 02			     add     bp,cw
    651
    652				     ;	     EXECUTE  (	xt -- )
    653
    654					     hdr     1,'EXECUTE'
1   655					     cseg
1   656	002A			     heads   segment public	     ;
1   657	002A  07			     db	     ??0008	     ;
1   658	002B  45 58 45 43 55 54	45	     db	     'EXECUTE'		     ;
1   659	0032  001F			     dw	     lastl	     ;
1   660	0034  0299r			     dw	     cfadr	     ;
1   661	0036			     heads   ends
1   662					     cseg	     ;
    663	0299  C3		     exec:   ret
    664
    665				     ;	     @EXECUTE  ( a-addr	-- )
    666
    667					     hdr     1,'@EXECUTE'
1   668					     cseg
1   669	0036			     heads   segment public	     ;
1   670	0036  08			     db	     ??000A	     ;
1   671	0037  40 45 58 45 43 55	54+	     db	     '@EXECUTE'		     ;
    672	      45
1   673	003F  002A			     dw	     lastl	     ;
1   674	0041  029Ar			     dw	     cfadr	     ;
1   675	0043			     heads   ends
1   676					     cseg	     ;
    677	029A  5B		     aexec:  pop     bx
    678	029B  8B 0F			     mov     cx,[bx]
    679	029D  E3 F0			     jcxz    unnest1
    680	029F  FF E1			     jmp     cx
    681
    682				     ;	     clit  ( --	char )
    683
    684					     hdr     x,'CLIT'	     ; FIG
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 13
kernel.asm



1   685					     cseg	     ;
    686	02A1  2B C0		     clit:   sub     ax,ax
    687	02A3  AC			     lodsb
    688	02A4  50			     push    ax
    689					     nextt
1   690	02A5  AD			     lodsw
1   691	02A6  FF E0			     jmp     ax
    692
    693				     ;	     lit  ( -- n )
    694
    695					     hdr     x,'LIT'	     ; FIG
1   696					     cseg	     ;
    697	02A8  AD		     lit:    lodsw
    698	02A9  50			     push    ax
    699					     nextt
1   700	02AA  AD			     lodsw
1   701	02AB  FF E0			     jmp     ax
    702
    703				     ;	     2lit  ( --	x1 x2 )
    704
    705					     hdr     x,'2LIT'
1   706					     cseg	     ;
    707	02AD  AD		     tlit:   lodsw
    708	02AE  8B D0			     mov     dx,ax
    709	02B0  AD			     lodsw
    710	02B1  50			     push    ax
    711	02B2  52			     push    dx
    712					     nextt
1   713	02B3  AD			     lodsw
1   714	02B4  FF E0			     jmp     ax
    715
    716				     ;
    717				     ;	     Stack Manipulation
    718				     ;
    719				     ;	SP@  SP!  RP@  RP!  >R	R>  R@	2>R  2R>  2R@  RDROP  DROP  DUP
    720				     ;	?DUP  SWAP  OVER  ROT  -ROT  ROLL  -ROLL  PICK	NIP  TUCK  ><
    721				     ;	2DROP  2DUP  2SWAP  2OVER  2ROT	 2NIP  DEPTH
    722				     ;
    723
    724				     ;	     SP@  ( -- addr )
    725
    726					     hdr     1,'SP@'
1   727					     cseg
1   728	0043			     heads   segment public	     ;
1   729	0043  03			     db	     ??0012	     ;
1   730	0044  53 50 40			     db	     'SP@'	     ;
1   731	0047  0036			     dw	     lastl	     ;
1   732	0049  02B6r			     dw	     cfadr	     ;
1   733	004B			     heads   ends
1   734					     cseg	     ;
    735	02B6  8B C4		     spat:   mov     ax,sp	     ; 'push sp' won't work on 8086
    736	02B8  E9 FEFE			     jmp     apush
    737
    738				     ;	     SP!  ( addr -- )
    739
    740					     hdr     1,'SP!'
1   741					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 14
kernel.asm



1   742	004B			     heads   segment public	     ;
1   743	004B  03			     db	     ??0014	     ;
1   744	004C  53 50 21			     db	     'SP!'	     ;
1   745	004F  0043			     dw	     lastl	     ;
1   746	0051  02BBr			     dw	     cfadr	     ;
1   747	0053			     heads   ends
1   748					     cseg	     ;
    749	02BB  58		     spsto:  pop     ax
    750	02BC  8B E0			     mov     sp,ax
    751					     nextt
1   752	02BE  AD			     lodsw
1   753	02BF  FF E0			     jmp     ax
    754
    755				     ;	     RP@  ( -- addr )
    756
    757					     hdr     1,'RP@'
1   758					     cseg
1   759	0053			     heads   segment public	     ;
1   760	0053  03			     db	     ??0016	     ;
1   761	0054  52 50 40			     db	     'RP@'	     ;
1   762	0057  004B			     dw	     lastl	     ;
1   763	0059  02C1r			     dw	     cfadr	     ;
1   764	005B			     heads   ends
1   765					     cseg	     ;
    766	02C1  55		     rpat:   push    bp
    767					     nextt
1   768	02C2  AD			     lodsw
1   769	02C3  FF E0			     jmp     ax
    770
    771				     ;	     RP!  ( addr -- )
    772
    773					     hdr     1,'RP!'
1   774					     cseg
1   775	005B			     heads   segment public	     ;
1   776	005B  03			     db	     ??0018	     ;
1   777	005C  52 50 21			     db	     'RP!'	     ;
1   778	005F  0053			     dw	     lastl	     ;
1   779	0061  02C5r			     dw	     cfadr	     ;
1   780	0063			     heads   ends
1   781					     cseg	     ;
    782	02C5  5D		     rpsto:  pop     bp
    783					     nextt
1   784	02C6  AD			     lodsw
1   785	02C7  FF E0			     jmp     ax
    786
    787				     ;	     >R	 ( x --	)
    788
    789					     hdr     1,'>R'
1   790					     cseg
1   791	0063			     heads   segment public	     ;
1   792	0063  02			     db	     ??001A	     ;
1   793	0064  3E 52			     db	     '>R'	     ;
1   794	0066  005B			     dw	     lastl	     ;
1   795	0068  02C9r			     dw	     cfadr	     ;
1   796	006A			     heads   ends
1   797					     cseg	     ;
    798	02C9  83 ED 02		     tor:    sub     bp,cw
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 15
kernel.asm



    799	02CC  8F 46 00			     pop     [bp]
    800					     nextt
1   801	02CF  AD			     lodsw
1   802	02D0  FF E0			     jmp     ax
    803
    804				     ;	     R>	 ( -- x	)
    805
    806					     hdr     1,'R>'
1   807					     cseg
1   808	006A			     heads   segment public	     ;
1   809	006A  02			     db	     ??001C	     ;
1   810	006B  52 3E			     db	     'R>'	     ;
1   811	006D  0063			     dw	     lastl	     ;
1   812	006F  02D2r			     dw	     cfadr	     ;
1   813	0071			     heads   ends
1   814					     cseg	     ;
    815	02D2  FF 76 00		     fromr:  push    [bp]
    816	02D5  83 C5 02			     add     bp,cw
    817					     nextt
1   818	02D8  AD			     lodsw
1   819	02D9  FF E0			     jmp     ax
    820
    821				     ;	     R@	 ( -- x	)
    822
    823					     hdr     1,'R@'
1   824					     cseg
1   825	0071			     heads   segment public	     ;
1   826	0071  02			     db	     ??001E	     ;
1   827	0072  52 40			     db	     'R@'	     ;
1   828	0074  006A			     dw	     lastl	     ;
1   829	0076  02DBr			     dw	     cfadr	     ;
1   830	0078			     heads   ends
1   831					     cseg	     ;
    832	02DB  FF 76 00		     rat:    push    [bp]
    833					     nextt
1   834	02DE  AD			     lodsw
1   835	02DF  FF E0			     jmp     ax
    836
    837				     ;	     2>R  ( x1 x2 -- )
    838
    839					     hdr     1,'2>R'
1   840					     cseg
1   841	0078			     heads   segment public	     ;
1   842	0078  03			     db	     ??0020	     ;
1   843	0079  32 3E 52			     db	     '2>R'	     ;
1   844	007C  0071			     dw	     lastl	     ;
1   845	007E  02E1r			     dw	     cfadr	     ;
1   846	0080			     heads   ends
1   847					     cseg	     ;
    848	02E1  83 ED 04		     ttor:   sub     bp,cw*2
    849	02E4  8F 46 00			     pop     [bp]
    850	02E7  8F 46 02			     pop     [bp+cw]
    851					     nextt
1   852	02EA  AD			     lodsw
1   853	02EB  FF E0			     jmp     ax
    854
    855				     ;	     2R>  ( -- x1 x2 )
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 16
kernel.asm



    856
    857					     hdr     1,'2R>'
1   858					     cseg
1   859	0080			     heads   segment public	     ;
1   860	0080  03			     db	     ??0022	     ;
1   861	0081  32 52 3E			     db	     '2R>'	     ;
1   862	0084  0078			     dw	     lastl	     ;
1   863	0086  02EDr			     dw	     cfadr	     ;
1   864	0088			     heads   ends
1   865					     cseg	     ;
    866	02ED  FF 76 02		     tfrom:  push    [bp+cw]
    867	02F0  FF 76 00			     push    [bp]
    868	02F3  83 C5 04			     add     bp,cw*2
    869					     nextt
1   870	02F6  AD			     lodsw
1   871	02F7  FF E0			     jmp     ax
    872
    873				     ;	     2R@  ( -- x1 x2 )
    874
    875					     hdr     1,'2R@'
1   876					     cseg
1   877	0088			     heads   segment public	     ;
1   878	0088  03			     db	     ??0024	     ;
1   879	0089  32 52 40			     db	     '2R@'	     ;
1   880	008C  0080			     dw	     lastl	     ;
1   881	008E  02F9r			     dw	     cfadr	     ;
1   882	0090			     heads   ends
1   883					     cseg	     ;
    884	02F9  8B DD		     trat:   mov     bx,bp
    885	02FB  E9 00F1			     jmp     tat1
    886
    887				     ;	     RDROP			     aka unnest	rdrop
    888
    889					     hdr     1,'RDROP',,,unnest
1   890					     cseg
1   891	0090			     heads   segment public	     ;
1   892	0090  85			     db	     ??0026	     ;
1   893	0091  52 44 52 4F 50		     db	     'RDROP'	     ;
1   894	0096  0088			     dw	     lastl	     ;
1   895	0098  028Cr			     dw	     cfadr	     ;
1   896	009A			     heads   ends
1   897					     cseg	     ;
    898				     rdrop   equ     unnest
    899
    900				     ;	     DROP  ( x -- )
    901
    902					     hdr     1,'DROP'
1   903					     cseg
1   904	009A			     heads   segment public	     ;
1   905	009A  04			     db	     ??0028	     ;
1   906	009B  44 52 4F 50		     db	     'DROP'	     ;
1   907	009F  0090			     dw	     lastl	     ;
1   908	00A1  02FEr			     dw	     cfadr	     ;
1   909	00A3			     heads   ends
1   910					     cseg	     ;
    911	02FE  83 C4 02		     drop:   add     sp,cw
    912					     nextt
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 17
kernel.asm



1   913	0301  AD			     lodsw
1   914	0302  FF E0			     jmp     ax
    915
    916				     ;	     DUP  ( x -- x x )
    917
    918					     hdr     1,'DUP'
1   919					     cseg
1   920	00A3			     heads   segment public	     ;
1   921	00A3  03			     db	     ??002A	     ;
1   922	00A4  44 55 50			     db	     'DUP'	     ;
1   923	00A7  009A			     dw	     lastl	     ;
1   924	00A9  0304r			     dw	     cfadr	     ;
1   925	00AB			     heads   ends
1   926					     cseg	     ;
    927	0304  8B DC		     dupp:   mov     bx,sp
    928	0306  FF 37			     push    [bx]
    929					     nextt
1   930	0308  AD			     lodsw
1   931	0309  FF E0			     jmp     ax
    932
    933				     ;	     ?DUP  ( x -- 0 | x	x )
    934
    935					     hdr     1,'?DUP'
1   936					     cseg
1   937	00AB			     heads   segment public	     ;
1   938	00AB  04			     db	     ??002C	     ;
1   939	00AC  3F 44 55 50		     db	     '?DUP'	     ;
1   940	00B0  00A3			     dw	     lastl	     ;
1   941	00B2  030Br			     dw	     cfadr	     ;
1   942	00B4			     heads   ends
1   943					     cseg	     ;
    944	030B  8B DC		     qdup:   mov     bx,sp
    945	030D  8B 0F			     mov     cx,[bx]
    946	030F  E3 01			     jcxz    qdup1
    947	0311  51			     push    cx
    948	0312			     qdup1:  nextt
1   949	0312  AD			     lodsw
1   950	0313  FF E0			     jmp     ax
    951
    952				     ;	     SWAP  ( x1	x2 -- x2 x1 )
    953
    954					     hdr     1,'SWAP'
1   955					     cseg
1   956	00B4			     heads   segment public	     ;
1   957	00B4  04			     db	     ??002E	     ;
1   958	00B5  53 57 41 50		     db	     'SWAP'	     ;
1   959	00B9  00AB			     dw	     lastl	     ;
1   960	00BB  0315r			     dw	     cfadr	     ;
1   961	00BD			     heads   ends
1   962					     cseg	     ;
    963	0315  5A		     swap:   pop     dx
    964	0316  58			     pop     ax
    965	0317  52			     push    dx
    966	0318  50			     push    ax
    967					     nextt
1   968	0319  AD			     lodsw
1   969	031A  FF E0			     jmp     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 18
kernel.asm



    970
    971				     ;	     OVER  ( x1	x2 -- x1 x2 x1 )
    972
    973					     hdr     1,'OVER'
1   974					     cseg
1   975	00BD			     heads   segment public	     ;
1   976	00BD  04			     db	     ??0030	     ;
1   977	00BE  4F 56 45 52		     db	     'OVER'	     ;
1   978	00C2  00B4			     dw	     lastl	     ;
1   979	00C4  031Cr			     dw	     cfadr	     ;
1   980	00C6			     heads   ends
1   981					     cseg	     ;
    982	031C  8B DC		     over:   mov     bx,sp
    983	031E  FF 77 02			     push    [bx+cw]
    984					     nextt
1   985	0321  AD			     lodsw
1   986	0322  FF E0			     jmp     ax
    987
    988				     ;	     ROT  ( x1 x2 x3 --	x2 x3 x1 )
    989
    990					     hdr     1,'ROT'
1   991					     cseg
1   992	00C6			     heads   segment public	     ;
1   993	00C6  03			     db	     ??0032	     ;
1   994	00C7  52 4F 54			     db	     'ROT'	     ;
1   995	00CA  00BD			     dw	     lastl	     ;
1   996	00CC  0324r			     dw	     cfadr	     ;
1   997	00CE			     heads   ends
1   998					     cseg	     ;
    999	0324  5A		     rot:    pop     dx
   1000	0325  5B			     pop     bx
   1001	0326  58			     pop     ax
   1002	0327  53			     push    bx
   1003	0328  52			     push    dx
   1004	0329  50			     push    ax
   1005					     nextt
1  1006	032A  AD			     lodsw
1  1007	032B  FF E0			     jmp     ax
   1008
   1009				     ;	     -ROT  ( x1	x2 x3 -- x3 x1 x2 )
   1010
   1011					     hdr     1,'-ROT'
1  1012					     cseg
1  1013	00CE			     heads   segment public	     ;
1  1014	00CE  04			     db	     ??0034	     ;
1  1015	00CF  2D 52 4F 54		     db	     '-ROT'	     ;
1  1016	00D3  00C6			     dw	     lastl	     ;
1  1017	00D5  032Dr			     dw	     cfadr	     ;
1  1018	00D7			     heads   ends
1  1019					     cseg	     ;
   1020	032D  5B		     drot:   pop     bx
   1021	032E  58			     pop     ax
   1022	032F  5A			     pop     dx
   1023	0330  53			     push    bx
   1024	0331  52			     push    dx
   1025	0332  50			     push    ax
   1026					     nextt
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 19
kernel.asm



1  1027	0333  AD			     lodsw
1  1028	0334  FF E0			     jmp     ax
   1029
   1030				     ;	     ROLL  ( xu	xu-1 ..	x0 u --	xu-1 ..	x0 xu )
   1031
   1032					     hdr     1,'ROLL'
1  1033					     cseg
1  1034	00D7			     heads   segment public	     ;
1  1035	00D7  04			     db	     ??0036	     ;
1  1036	00D8  52 4F 4C 4C		     db	     'ROLL'	     ;
1  1037	00DC  00CE			     dw	     lastl	     ;
1  1038	00DE  0336r			     dw	     cfadr	     ;
1  1039	00E0			     heads   ends
1  1040					     cseg	     ;
   1041	0336  59		     roll:   pop     cx
   1042				     ;;	     jcxz    roll2
   1043	0337  8B F9			     mov     di,cx
   1044	0339  D1 E7			     shl     di,1
   1045	033B  03 FC			     add     di,sp
   1046	033D  56			     push    si
   1047	033E  8D 75 FE			     lea     si,[di-cw]
   1048	0341  FD			     std
   1049	0342  8B 05		     roll1:  mov     ax,[di]
   1050	0344  1E			     push    ds
   1051	0345  07			     pop     es
   1052	0346  F3> A5			     rep     movsw
   1053	0348  FC			     cld
   1054	0349  89 05			     mov     [di],ax
   1055	034B  5E			     pop     si
   1056	034C			     roll2:  nextt
1  1057	034C  AD			     lodsw
1  1058	034D  FF E0			     jmp     ax
   1059
   1060				     ;	     -ROLL  ( xu .. xu+1 x0 u -- x0 xu .. xu+1 )
   1061
   1062					     hdr     1,'-ROLL'
1  1063					     cseg
1  1064	00E0			     heads   segment public	     ;
1  1065	00E0  05			     db	     ??0038	     ;
1  1066	00E1  2D 52 4F 4C 4C		     db	     '-ROLL'	     ;
1  1067	00E6  00D7			     dw	     lastl	     ;
1  1068	00E8  034Fr			     dw	     cfadr	     ;
1  1069	00EA			     heads   ends
1  1070					     cseg	     ;
   1071	034F  59		     droll:  pop     cx
   1072				     ;;	     jcxz    roll2
   1073	0350  8B FC			     mov     di,sp
   1074	0352  56			     push    si
   1075	0353  8D 75 02			     lea     si,[di+cw]
   1076	0356  EB EA			     jmp     roll1
   1077
   1078				     ;	     PICK  ( xu	.. x1 x0 u -- xu .. x1 x0 xu )
   1079
   1080					     hdr     1,'PICK'
1  1081					     cseg
1  1082	00EA			     heads   segment public	     ;
1  1083	00EA  04			     db	     ??003A	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 20
kernel.asm



1  1084	00EB  50 49 43 4B		     db	     'PICK'	     ;
1  1085	00EF  00E0			     dw	     lastl	     ;
1  1086	00F1  0358r			     dw	     cfadr	     ;
1  1087	00F3			     heads   ends
1  1088					     cseg	     ;
   1089	0358  5B		     pick:   pop     bx
   1090	0359  D1 E3			     shl     bx,1
   1091	035B  03 DC			     add     bx,sp
   1092	035D  FF 37			     push    [bx]
   1093					     nextt
1  1094	035F  AD			     lodsw
1  1095	0360  FF E0			     jmp     ax
   1096
   1097				     ;	     NIP  ( x1 x2 -- x2	)
   1098
   1099					     hdr     1,'NIP'
1  1100					     cseg
1  1101	00F3			     heads   segment public	     ;
1  1102	00F3  03			     db	     ??003C	     ;
1  1103	00F4  4E 49 50			     db	     'NIP'	     ;
1  1104	00F7  00EA			     dw	     lastl	     ;
1  1105	00F9  0362r			     dw	     cfadr	     ;
1  1106	00FB			     heads   ends
1  1107					     cseg	     ;
   1108	0362  58		     nip:    pop     ax
   1109	0363  83 C4 02			     add     sp,cw
   1110	0366  50			     push    ax
   1111					     nextt
1  1112	0367  AD			     lodsw
1  1113	0368  FF E0			     jmp     ax
   1114
   1115				     ;	     TUCK  ( x1	x2 -- x2 x1 x2 )
   1116
   1117					     hdr     1,'TUCK'
1  1118					     cseg
1  1119	00FB			     heads   segment public	     ;
1  1120	00FB  04			     db	     ??003E	     ;
1  1121	00FC  54 55 43 4B		     db	     'TUCK'	     ;
1  1122	0100  00F3			     dw	     lastl	     ;
1  1123	0102  036Ar			     dw	     cfadr	     ;
1  1124	0104			     heads   ends
1  1125					     cseg	     ;
   1126	036A  58		     tuck:   pop     ax
   1127	036B  5A			     pop     dx
   1128	036C  50			     push    ax
   1129	036D  52			     push    dx
   1130	036E  50			     push    ax
   1131					     nextt
1  1132	036F  AD			     lodsw
1  1133	0370  FF E0			     jmp     ax
   1134
   1135				     ;	     ><	 ( x1 -- x2 )
   1136
   1137					     hdr     1,'><'
1  1138					     cseg
1  1139	0104			     heads   segment public	     ;
1  1140	0104  02			     db	     ??0040	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 21
kernel.asm



1  1141	0105  3E 3C			     db	     '><'	     ;
1  1142	0107  00FB			     dw	     lastl	     ;
1  1143	0109  0372r			     dw	     cfadr	     ;
1  1144	010B			     heads   ends
1  1145					     cseg	     ;
   1146	0372  58		     bswp:   pop     ax
   1147	0373  86 E0			     xchg    ah,al
   1148	0375  E9 FE41			     jmp     apush
   1149
   1150				     ;	     2DROP  ( x1 x2 -- )
   1151
   1152					     hdr     1,'2DROP'
1  1153					     cseg
1  1154	010B			     heads   segment public	     ;
1  1155	010B  05			     db	     ??0042	     ;
1  1156	010C  32 44 52 4F 50		     db	     '2DROP'	     ;
1  1157	0111  0104			     dw	     lastl	     ;
1  1158	0113  0378r			     dw	     cfadr	     ;
1  1159	0115			     heads   ends
1  1160					     cseg	     ;
   1161	0378  83 C4 04		     tdrop:  add     sp,cw*2
   1162					     nextt
1  1163	037B  AD			     lodsw
1  1164	037C  FF E0			     jmp     ax
   1165
   1166				     ;	     2DUP  ( x1	x2 -- x1 x2 x1 x2 )
   1167
   1168					     hdr     1,'2DUP'
1  1169					     cseg
1  1170	0115			     heads   segment public	     ;
1  1171	0115  04			     db	     ??0044	     ;
1  1172	0116  32 44 55 50		     db	     '2DUP'	     ;
1  1173	011A  010B			     dw	     lastl	     ;
1  1174	011C  037Er			     dw	     cfadr	     ;
1  1175	011E			     heads   ends
1  1176					     cseg	     ;
   1177	037E  8B DC		     tdup:   mov     bx,sp
   1178	0380  FF 77 02			     push    [bx+cw]
   1179	0383  FF 37			     push    [bx]
   1180					     nextt
1  1181	0385  AD			     lodsw
1  1182	0386  FF E0			     jmp     ax
   1183
   1184				     ;	     2SWAP  ( x1 x2 x3 x4 -- x3	x4 x1 x2 )
   1185
   1186					     hdr     1,'2SWAP'
1  1187					     cseg
1  1188	011E			     heads   segment public	     ;
1  1189	011E  05			     db	     ??0046	     ;
1  1190	011F  32 53 57 41 50		     db	     '2SWAP'	     ;
1  1191	0124  0115			     dw	     lastl	     ;
1  1192	0126  0388r			     dw	     cfadr	     ;
1  1193	0128			     heads   ends
1  1194					     cseg	     ;
   1195	0388  5B		     tswap:  pop     bx
   1196	0389  59			     pop     cx
   1197	038A  58			     pop     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 22
kernel.asm



   1198	038B  5A			     pop     dx
   1199	038C  51			     push    cx
   1200	038D  53			     push    bx
   1201	038E  52			     push    dx
   1202	038F  50			     push    ax
   1203					     nextt
1  1204	0390  AD			     lodsw
1  1205	0391  FF E0			     jmp     ax
   1206
   1207				     ;	     2OVER  ( x1 x2 x3 x4 -- x1	x2 x3 x4 x1 x2 )
   1208
   1209					     hdr     1,'2OVER'
1  1210					     cseg
1  1211	0128			     heads   segment public	     ;
1  1212	0128  05			     db	     ??0048	     ;
1  1213	0129  32 4F 56 45 52		     db	     '2OVER'	     ;
1  1214	012E  011E			     dw	     lastl	     ;
1  1215	0130  0393r			     dw	     cfadr	     ;
1  1216	0132			     heads   ends
1  1217					     cseg	     ;
   1218	0393  8B DC		     tover:  mov     bx,sp
   1219	0395  FF 77 06			     push    [bx+cw*3]
   1220	0398  FF 77 04			     push    [bx+cw*2]
   1221					     nextt
1  1222	039B  AD			     lodsw
1  1223	039C  FF E0			     jmp     ax
   1224
   1225				     ;	     2ROT  ( x1	x2 x3 x4 x5 x6 -- x3 x4	x5 x6 x1 x2 )  5 roll 5	roll
   1226
   1227					     hdr     1,'2ROT'
1  1228					     cseg
1  1229	0132			     heads   segment public	     ;
1  1230	0132  04			     db	     ??004A	     ;
1  1231	0133  32 52 4F 54		     db	     '2ROT'	     ;
1  1232	0137  0128			     dw	     lastl	     ;
1  1233	0139  039Er			     dw	     cfadr	     ;
1  1234	013B			     heads   ends
1  1235					     cseg	     ;
   1236	039E  E8 FED4		     trot:   call    docol
   1237	03A1  02A1r			     dw	     clit
   1238	03A3  05			     db	     5
   1239	03A4  0336r			     dw	     roll
   1240	03A6  02A1r			     dw	     clit
   1241	03A8  05			     db	     5
   1242	03A9  0336r			     dw	     roll
   1243	03AB  0289r			     dw	     exit
   1244
   1245				     ;	     2NIP  ( x1	x2 x3 x4 -- x3 x4 )
   1246
   1247					     hdr     1,'2NIP'
1  1248					     cseg
1  1249	013B			     heads   segment public	     ;
1  1250	013B  04			     db	     ??004C	     ;
1  1251	013C  32 4E 49 50		     db	     '2NIP'	     ;
1  1252	0140  0132			     dw	     lastl	     ;
1  1253	0142  03ADr			     dw	     cfadr	     ;
1  1254	0144			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 23
kernel.asm



1  1255					     cseg	     ;
   1256	03AD  58		     tnip:   pop     ax
   1257	03AE  5A			     pop     dx
   1258	03AF  83 C4 04			     add     sp,cw*2
   1259	03B2  E9 FE03			     jmp     dpush
   1260
   1261				     ;	     DEPTH  ( -- +n )	     sp@ s0 @ swap - 2/
   1262
   1263					     hdr     1,'DEPTH'
1  1264					     cseg
1  1265	0144			     heads   segment public	     ;
1  1266	0144  05			     db	     ??004E	     ;
1  1267	0145  44 45 50 54 48		     db	     'DEPTH'	     ;
1  1268	014A  013B			     dw	     lastl	     ;
1  1269	014C  03B5r			     dw	     cfadr	     ;
1  1270	014E			     heads   ends
1  1271					     cseg	     ;
   1272	03B5  8B 1E 0FBFr	     depth:  mov     bx,upp
   1273	03B9  8B 47 06			     mov     ax,[bx+6]	     ; S0
   1274	03BC  2B C4			     sub     ax,sp
   1275	03BE  D1 F8			     sar     ax,1
   1276	03C0  E9 FDF6			     jmp     apush
   1277
   1278				     ;
   1279				     ;	     Memory & String Operations
   1280				     ;
   1281				     ;	CSEG  SSEG  HSEG  @  !	C@  C!	2@  2!	@L  !L	C@L  C!L
   1282				     ;	2@L  2!L  +!  h@  h!  hc@  ON  OFF  BLANK  ERASE  FILL
   1283				     ;	LFILL  CMOVE  CMOVE>  CMOVEL  MOVE  COUNT  PACK	 PLACE
   1284				     ;	affix  SCAN  SKIP  -TRAILING  TRIM  -BLANKS  >BLANKS
   1285				     ;	/STRING	 C/STRING  COMPARE  SEARCH  +STRING  ZCOUNT
   1286				     ;	ZPLACE	S.R
   1287				     ;
   1288
   1289				     ;	     CSEG  ( --	seg )	     code segment
   1290
   1291					     hdr     1,'CSEG'
1  1292					     cseg
1  1293	014E			     heads   segment public	     ;
1  1294	014E  04			     db	     ??0050	     ;
1  1295	014F  43 53 45 47		     db	     'CSEG'	     ;
1  1296	0153  0144			     dw	     lastl	     ;
1  1297	0155  03C3r			     dw	     cfadr	     ;
1  1298	0157			     heads   ends
1  1299					     cseg	     ;
   1300	03C3  E8 000C		     csegg:  call    docon
   1301	03C6  ????		     cseg1   dw	     ?		     ; patched
   1302
   1303				     ;	     SSEG  ( --	a-addr )     search segment
   1304
   1305					     hdr     1,'SSEG'
1  1306					     cseg
1  1307	0157			     heads   segment public	     ;
1  1308	0157  04			     db	     ??0052	     ;
1  1309	0158  53 53 45 47		     db	     'SSEG'	     ;
1  1310	015C  014E			     dw	     lastl	     ;
1  1311	015E  03C8r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 24
kernel.asm



1  1312	0160			     heads   ends
1  1313					     cseg	     ;
   1314	03C8  E8 FDEF		     sseg:   call    docre
   1315	03CB  ????		     sseg1   dw	     ?
   1316
   1317				     ;	     HSEG  ( --	seg )	     heads segment
   1318
   1319					     hdr     1,'HSEG'
1  1320					     cseg
1  1321	0160			     heads   segment public	     ;
1  1322	0160  04			     db	     ??0054	     ;
1  1323	0161  48 53 45 47		     db	     'HSEG'	     ;
1  1324	0165  0157			     dw	     lastl	     ;
1  1325	0167  03CDr			     dw	     cfadr	     ;
1  1326	0169			     heads   ends
1  1327					     cseg	     ;
   1328	03CD  E8 0002		     hseg:   call    docon
   1329	03D0  ????		     hseg1   dw	     ?		     ; patched
   1330
   1331				     ;	     @	( a-addr -- x )
   1332
   1333					     hdr     1,'@'
1  1334					     cseg
1  1335	0169			     heads   segment public	     ;
1  1336	0169  01			     db	     ??0056	     ;
1  1337	016A  40			     db	     '@'	     ;
1  1338	016B  0160			     dw	     lastl	     ;
1  1339	016D  03D2r			     dw	     cfadr	     ;
1  1340	016F			     heads   ends
1  1341					     cseg	     ;
   1342	03D2  5B		     at:     pop     bx
   1343	03D3  FF 37			     push    [bx]
   1344					     nextt
1  1345	03D5  AD			     lodsw
1  1346	03D6  FF E0			     jmp     ax
   1347
   1348				     ;	     !	( x a-addr -- )
   1349
   1350					     hdr     1,'!'
1  1351					     cseg
1  1352	016F			     heads   segment public	     ;
1  1353	016F  01			     db	     ??0058	     ;
1  1354	0170  21			     db	     '!'	     ;
1  1355	0171  0169			     dw	     lastl	     ;
1  1356	0173  03D8r			     dw	     cfadr	     ;
1  1357	0175			     heads   ends
1  1358					     cseg	     ;
   1359	03D8  5B		     store:  pop     bx
   1360	03D9  8F 07			     pop     [bx]
   1361					     nextt
1  1362	03DB  AD			     lodsw
1  1363	03DC  FF E0			     jmp     ax
   1364
   1365				     ;	     C@	 ( c-addr -- char )
   1366
   1367					     hdr     1,'C@'
1  1368					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 25
kernel.asm



1  1369	0175			     heads   segment public	     ;
1  1370	0175  02			     db	     ??005A	     ;
1  1371	0176  43 40			     db	     'C@'	     ;
1  1372	0178  016F			     dw	     lastl	     ;
1  1373	017A  03DEr			     dw	     cfadr	     ;
1  1374	017C			     heads   ends
1  1375					     cseg	     ;
   1376	03DE  5B		     cat:    pop     bx
   1377	03DF  2B C0			     sub     ax,ax
   1378	03E1  8A 07			     mov     al,[bx]
   1379	03E3  50			     push    ax
   1380					     nextt
1  1381	03E4  AD			     lodsw
1  1382	03E5  FF E0			     jmp     ax
   1383
   1384				     ;	     C!	 ( char	c-addr -- )
   1385
   1386					     hdr     1,'C!'
1  1387					     cseg
1  1388	017C			     heads   segment public	     ;
1  1389	017C  02			     db	     ??005C	     ;
1  1390	017D  43 21			     db	     'C!'	     ;
1  1391	017F  0175			     dw	     lastl	     ;
1  1392	0181  03E7r			     dw	     cfadr	     ;
1  1393	0183			     heads   ends
1  1394					     cseg	     ;
   1395	03E7  5B		     cstor:  pop     bx
   1396	03E8  58			     pop     ax
   1397	03E9  88 07			     mov     [bx],al
   1398					     nextt
1  1399	03EB  AD			     lodsw
1  1400	03EC  FF E0			     jmp     ax
   1401
   1402				     ;	     2@	 ( a-addr -- x1	x2 )
   1403
   1404					     hdr     1,'2@'
1  1405					     cseg
1  1406	0183			     heads   segment public	     ;
1  1407	0183  02			     db	     ??005E	     ;
1  1408	0184  32 40			     db	     '2@'	     ;
1  1409	0186  017C			     dw	     lastl	     ;
1  1410	0188  03EEr			     dw	     cfadr	     ;
1  1411	018A			     heads   ends
1  1412					     cseg	     ;
   1413	03EE  5B		     tat:    pop     bx
   1414	03EF  FF 77 02		     tat1:   push    [bx+cw]
   1415	03F2  FF 37			     push    [bx]
   1416					     nextt
1  1417	03F4  AD			     lodsw
1  1418	03F5  FF E0			     jmp     ax
   1419
   1420				     ;	     2!	 ( x1 x2 a-addr	-- )
   1421
   1422					     hdr     1,'2!'
1  1423					     cseg
1  1424	018A			     heads   segment public	     ;
1  1425	018A  02			     db	     ??0060	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 26
kernel.asm



1  1426	018B  32 21			     db	     '2!'	     ;
1  1427	018D  0183			     dw	     lastl	     ;
1  1428	018F  03F7r			     dw	     cfadr	     ;
1  1429	0191			     heads   ends
1  1430					     cseg	     ;
   1431	03F7  5B		     tstor:  pop     bx
   1432	03F8  8F 07			     pop     [bx]
   1433	03FA  8F 47 02			     pop     [bx+cw]
   1434					     nextt
1  1435	03FD  AD			     lodsw
1  1436	03FE  FF E0			     jmp     ax
   1437
   1438				     ;	     @L	 ( seg offs -- x )
   1439
   1440					     hdr     1,'@L'
1  1441					     cseg
1  1442	0191			     heads   segment public	     ;
1  1443	0191  02			     db	     ??0062	     ;
1  1444	0192  40 4C			     db	     '@L'	     ;
1  1445	0194  018A			     dw	     lastl	     ;
1  1446	0196  0400r			     dw	     cfadr	     ;
1  1447	0198			     heads   ends
1  1448					     cseg	     ;
   1449	0400  5B		     atl:    pop     bx
   1450	0401  1F			     pop     ds
   1451	0402  FF 37			     push    [bx]
   1452	0404  8C CB			     mov     bx,cs
   1453	0406  8E DB			     mov     ds,bx
   1454					     nextt
1  1455	0408  AD			     lodsw
1  1456	0409  FF E0			     jmp     ax
   1457
   1458				     ;	     !L	 ( x seg offs -- )
   1459
   1460					     hdr     1,'!L'
1  1461					     cseg
1  1462	0198			     heads   segment public	     ;
1  1463	0198  02			     db	     ??0064	     ;
1  1464	0199  21 4C			     db	     '!L'	     ;
1  1465	019B  0191			     dw	     lastl	     ;
1  1466	019D  040Br			     dw	     cfadr	     ;
1  1467	019F			     heads   ends
1  1468					     cseg	     ;
   1469	040B  5B		     storl:  pop     bx
   1470	040C  1F			     pop     ds
   1471	040D  8F 07			     pop     [bx]
   1472	040F  8C CB			     mov     bx,cs
   1473	0411  8E DB			     mov     ds,bx
   1474					     nextt
1  1475	0413  AD			     lodsw
1  1476	0414  FF E0			     jmp     ax
   1477
   1478				     ;	     C@L  ( seg	offs --	char )
   1479
   1480					     hdr     1,'C@L'
1  1481					     cseg
1  1482	019F			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 27
kernel.asm



1  1483	019F  03			     db	     ??0066	     ;
1  1484	01A0  43 40 4C			     db	     'C@L'	     ;
1  1485	01A3  0198			     dw	     lastl	     ;
1  1486	01A5  0416r			     dw	     cfadr	     ;
1  1487	01A7			     heads   ends
1  1488					     cseg	     ;
   1489	0416  5B		     catl:   pop     bx
   1490	0417  1F			     pop     ds
   1491	0418  2B C0			     sub     ax,ax
   1492	041A  8A 07			     mov     al,[bx]
   1493	041C  8C CB			     mov     bx,cs
   1494	041E  8E DB			     mov     ds,bx
   1495	0420  50			     push    ax
   1496					     nextt
1  1497	0421  AD			     lodsw
1  1498	0422  FF E0			     jmp     ax
   1499
   1500				     ;	     C!L  ( char seg offs -- )
   1501
   1502					     hdr     1,'C!L'
1  1503					     cseg
1  1504	01A7			     heads   segment public	     ;
1  1505	01A7  03			     db	     ??0068	     ;
1  1506	01A8  43 21 4C			     db	     'C!L'	     ;
1  1507	01AB  019F			     dw	     lastl	     ;
1  1508	01AD  0424r			     dw	     cfadr	     ;
1  1509	01AF			     heads   ends
1  1510					     cseg	     ;
   1511	0424  5B		     cstorl: pop     bx
   1512	0425  1F			     pop     ds
   1513	0426  58			     pop     ax
   1514	0427  88 07			     mov     [bx],al
   1515	0429  8C CB			     mov     bx,cs
   1516	042B  8E DB			     mov     ds,bx
   1517					     nextt
1  1518	042D  AD			     lodsw
1  1519	042E  FF E0			     jmp     ax
   1520
   1521				     ;	     2@L  ( seg	offs --	x1 x2 )
   1522
   1523					     hdr     1,'2@L'
1  1524					     cseg
1  1525	01AF			     heads   segment public	     ;
1  1526	01AF  03			     db	     ??006A	     ;
1  1527	01B0  32 40 4C			     db	     '2@L'	     ;
1  1528	01B3  01A7			     dw	     lastl	     ;
1  1529	01B5  0430r			     dw	     cfadr	     ;
1  1530	01B7			     heads   ends
1  1531					     cseg	     ;
   1532	0430  5B		     tatl:   pop     bx
   1533	0431  1F			     pop     ds
   1534	0432  FF 77 02			     push    [bx+cw]
   1535	0435  FF 37			     push    [bx]
   1536	0437  8C CB			     mov     bx,cs
   1537	0439  8E DB			     mov     ds,bx
   1538					     nextt
1  1539	043B  AD			     lodsw
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 28
kernel.asm



1  1540	043C  FF E0			     jmp     ax
   1541
   1542				     ;	     2!L  ( x1 x2 seg offs -- )
   1543
   1544					     hdr     1,'2!L'
1  1545					     cseg
1  1546	01B7			     heads   segment public	     ;
1  1547	01B7  03			     db	     ??006C	     ;
1  1548	01B8  32 21 4C			     db	     '2!L'	     ;
1  1549	01BB  01AF			     dw	     lastl	     ;
1  1550	01BD  043Er			     dw	     cfadr	     ;
1  1551	01BF			     heads   ends
1  1552					     cseg	     ;
   1553	043E  5B		     tstorl: pop     bx
   1554	043F  1F			     pop     ds
   1555	0440  8F 07			     pop     [bx]
   1556	0442  8F 47 02			     pop     [bx+cw]
   1557	0445  8C CB			     mov     bx,cs
   1558	0447  8E DB			     mov     ds,bx
   1559					     nextt
1  1560	0449  AD			     lodsw
1  1561	044A  FF E0			     jmp     ax
   1562
   1563				     ;	     +!	 ( x a-addr -- )
   1564
   1565					     hdr     1,'+!'
1  1566					     cseg
1  1567	01BF			     heads   segment public	     ;
1  1568	01BF  02			     db	     ??006E	     ;
1  1569	01C0  2B 21			     db	     '+!'	     ;
1  1570	01C2  01B7			     dw	     lastl	     ;
1  1571	01C4  044Cr			     dw	     cfadr	     ;
1  1572	01C6			     heads   ends
1  1573					     cseg	     ;
   1574	044C  5B		     pstor:  pop     bx
   1575	044D  58			     pop     ax
   1576	044E  01 07			     add     [bx],ax
   1577					     nextt
1  1578	0450  AD			     lodsw
1  1579	0451  FF E0			     jmp     ax
   1580
   1581				     ;	     h@	 ( h-addr -- x )
   1582
   1583					     hdr     x,'H@',,1
1  1584					     cseg	     ;
1  1585					     aseg
   1586	B000  5B		     hat:    pop     bx
   1587	B001  FF 36 03D0r		     push    word ptr hseg1
   1588	B005  53			     push    bx
   1589	B006  E9 53F7			     jmp     atl
   1590
   1591				     ;	     h!	 ( x h-addr -- )
   1592
   1593					     hdr     x,'H!',,1
1  1594					     cseg	     ;
1  1595					     aseg
   1596	B009  5B		     hstor:  pop     bx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 29
kernel.asm



   1597	B00A  FF 36 03D0r		     push    word ptr hseg1
   1598	B00E  53			     push    bx
   1599	B00F  E9 53F9			     jmp     storl
   1600
   1601				     ;	     hc@  ( h-addr -- char )
   1602
   1603					     hdr     x,'HC@',,1
1  1604					     cseg	     ;
1  1605					     aseg
   1606	B012  5B		     hcat:   pop     bx
   1607	B013  FF 36 03D0r		     push    word ptr hseg1
   1608	B017  53			     push    bx
   1609	B018  E9 53FB			     jmp     catl
   1610
   1611				     ;	     ON	 ( addr	-- )	     -1	swap !
   1612
   1613					     hdr     1,'ON'
1  1614					     cseg
1  1615	01C6			     heads   segment public	     ;
1  1616	01C6  02			     db	     ??0076	     ;
1  1617	01C7  4F 4E			     db	     'ON'	     ;
1  1618	01C9  01BF			     dw	     lastl	     ;
1  1619	01CB  0453r			     dw	     cfadr	     ;
1  1620	01CD			     heads   ends
1  1621					     cseg	     ;
   1622	0453  5B		     on:     pop     bx
   1623	0454  C7 07 FFFF	     on1:    mov     word ptr [bx],-1
   1624					     nextt
1  1625	0458  AD			     lodsw
1  1626	0459  FF E0			     jmp     ax
   1627
   1628				     ;	     OFF  ( addr -- )	     0 swap !
   1629
   1630					     hdr     1,'OFF'
1  1631					     cseg
1  1632	01CD			     heads   segment public	     ;
1  1633	01CD  03			     db	     ??0078	     ;
1  1634	01CE  4F 46 46			     db	     'OFF'	     ;
1  1635	01D1  01C6			     dw	     lastl	     ;
1  1636	01D3  045Br			     dw	     cfadr	     ;
1  1637	01D5			     heads   ends
1  1638					     cseg	     ;
   1639	045B  5B		     off:    pop     bx
   1640	045C  C7 07 0000	     off1:   mov     word ptr [bx],0
   1641					     nextt
1  1642	0460  AD			     lodsw
1  1643	0461  FF E0			     jmp     ax
   1644
   1645				     ;	     BLANK  ( c-addr u -- )  bl	fill
   1646
   1647					     hdr     1,'BLANK'
1  1648					     cseg
1  1649	01D5			     heads   segment public	     ;
1  1650	01D5  05			     db	     ??007A	     ;
1  1651	01D6  42 4C 41 4E 4B		     db	     'BLANK'	     ;
1  1652	01DB  01CD			     dw	     lastl	     ;
1  1653	01DD  0463r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 30
kernel.asm



1  1654	01DF			     heads   ends
1  1655					     cseg	     ;
   1656	0463  B0 20		     blank:  mov     al,20h
   1657					     ignore2
1  1658	0465  A9			     db	     0a9h    ;
   1659
   1660				     ;	     ERASE  ( addr u --	)    0 fill
   1661
   1662					     hdr     1,'ERASE'
1  1663					     cseg
1  1664	01DF			     heads   segment public	     ;
1  1665	01DF  05			     db	     ??007C	     ;
1  1666	01E0  45 52 41 53 45		     db	     'ERASE'	     ;
1  1667	01E5  01D5			     dw	     lastl	     ;
1  1668	01E7  0466r			     dw	     cfadr	     ;
1  1669	01E9			     heads   ends
1  1670					     cseg	     ;
   1671	0466  B0 00		     erase:  mov     al,0
   1672					     ignore1
1  1673	0468  A8			     db	     0a8h    ;
   1674
   1675				     ;	     FILL  ( c-addr u char -- )
   1676
   1677					     hdr     1,'FILL'
1  1678					     cseg
1  1679	01E9			     heads   segment public	     ;
1  1680	01E9  04			     db	     ??007E	     ;
1  1681	01EA  46 49 4C 4C		     db	     'FILL'	     ;
1  1682	01EE  01DF			     dw	     lastl	     ;
1  1683	01F0  0469r			     dw	     cfadr	     ;
1  1684	01F2			     heads   ends
1  1685					     cseg	     ;
   1686	0469  58		     fill:   pop     ax
   1687	046A  8C D9			     mov     cx,ds
   1688	046C  8E C1			     mov     es,cx
   1689	046E  59			     pop     cx
   1690	046F  5F			     pop     di
   1691	0470  F3> AA		     fill1:  rep     stosb
   1692					     nextt
1  1693	0472  AD			     lodsw
1  1694	0473  FF E0			     jmp     ax
   1695
   1696				     ;	     LFILL  ( seg offs u char -- )
   1697
   1698					     hdr     1,'LFILL'
1  1699					     cseg
1  1700	01F2			     heads   segment public	     ;
1  1701	01F2  05			     db	     ??0080	     ;
1  1702	01F3  4C 46 49 4C 4C		     db	     'LFILL'	     ;
1  1703	01F8  01E9			     dw	     lastl	     ;
1  1704	01FA  0475r			     dw	     cfadr	     ;
1  1705	01FC			     heads   ends
1  1706					     cseg	     ;
   1707	0475  58		     lfill:  pop     ax
   1708	0476  59			     pop     cx
   1709	0477  5F			     pop     di
   1710	0478  07			     pop     es
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 31
kernel.asm



   1711	0479  EB F5			     jmp     fill1
   1712
   1713				     ;	     CMOVE  ( c-addr1 c-addr2 u	-- )
   1714
   1715					     hdr     1,'CMOVE'
1  1716					     cseg
1  1717	01FC			     heads   segment public	     ;
1  1718	01FC  05			     db	     ??0082	     ;
1  1719	01FD  43 4D 4F 56 45		     db	     'CMOVE'	     ;
1  1720	0202  01F2			     dw	     lastl	     ;
1  1721	0204  047Br			     dw	     cfadr	     ;
1  1722	0206			     heads   ends
1  1723					     cseg	     ;
   1724	047B  59		     cmove:  pop     cx
   1725	047C  5F			     pop     di
   1726	047D  58			     pop     ax
   1727	047E  E8 FDC3		     cmove1: call    movd
   1728					     nextt
1  1729	0481  AD			     lodsw
1  1730	0482  FF E0			     jmp     ax
   1731
   1732				     ;	     CMOVE>  ( c-addr1 c-addr2 u -- )
   1733
   1734					     hdr     1,'CMOVE>'
1  1735					     cseg
1  1736	0206			     heads   segment public	     ;
1  1737	0206  06			     db	     ??0084	     ;
1  1738	0207  43 4D 4F 56 45 3E		     db	     'CMOVE>'		     ;
1  1739	020D  01FC			     dw	     lastl	     ;
1  1740	020F  0484r			     dw	     cfadr	     ;
1  1741	0211			     heads   ends
1  1742					     cseg	     ;
   1743	0484  59		     cmovu:  pop     cx
   1744	0485  5F			     pop     di
   1745	0486  58			     pop     ax
   1746	0487  E8 FDD1			     call    bmovu
   1747					     nextt
1  1748	048A  AD			     lodsw
1  1749	048B  FF E0			     jmp     ax
   1750
   1751				     ;	     CMOVEL  ( seg1 offs1 seg2 offs2 u -- )
   1752
   1753					     hdr     1,'CMOVEL'
1  1754					     cseg
1  1755	0211			     heads   segment public	     ;
1  1756	0211  06			     db	     ??0086	     ;
1  1757	0212  43 4D 4F 56 45 4C		     db	     'CMOVEL'		     ;
1  1758	0218  0206			     dw	     lastl	     ;
1  1759	021A  048Dr			     dw	     cfadr	     ;
1  1760	021C			     heads   ends
1  1761					     cseg	     ;
   1762	048D  8C DB		     cmovl:  mov     bx,ds
   1763	048F  59			     pop     cx
   1764	0490  5F			     pop     di
   1765	0491  07			     pop     es
   1766	0492  58			     pop     ax
   1767	0493  1F			     pop     ds
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 32
kernel.asm



   1768	0494  E8 FDAF			     call    movd1
   1769	0497  8E DB			     mov     ds,bx
   1770					     nextt
1  1771	0499  AD			     lodsw
1  1772	049A  FF E0			     jmp     ax
   1773
   1774				     ;	     MOVE  ( a-addr1 a-addr2 u -- )  >r	2dup u<	if r> cmove> end r> cmove
   1775
   1776					     hdr     1,'MOVE'
1  1777					     cseg
1  1778	021C			     heads   segment public	     ;
1  1779	021C  04			     db	     ??0088	     ;
1  1780	021D  4D 4F 56 45		     db	     'MOVE'	     ;
1  1781	0221  0211			     dw	     lastl	     ;
1  1782	0223  049Cr			     dw	     cfadr	     ;
1  1783	0225			     heads   ends
1  1784					     cseg	     ;
   1785	049C  59		     move:   pop     cx
   1786	049D  5F			     pop     di
   1787	049E  58			     pop     ax
   1788	049F  E8 FD98			     call    bmove
   1789					     nextt
1  1790	04A2  AD			     lodsw
1  1791	04A3  FF E0			     jmp     ax
   1792
   1793				     ;	     COUNT  ( c-addr1 -- c-addr2 u )  dup 1+ swap c@
   1794
   1795					     hdr     1,'COUNT'
1  1796					     cseg
1  1797	0225			     heads   segment public	     ;
1  1798	0225  05			     db	     ??008A	     ;
1  1799	0226  43 4F 55 4E 54		     db	     'COUNT'	     ;
1  1800	022B  021C			     dw	     lastl	     ;
1  1801	022D  04A5r			     dw	     cfadr	     ;
1  1802	022F			     heads   ends
1  1803					     cseg	     ;
   1804	04A5  5B		     count:  pop     bx
   1805	04A6  2B C0			     sub     ax,ax
   1806	04A8  8A 07			     mov     al,[bx]
   1807	04AA  43			     inc     bx
   1808	04AB  53			     push    bx
   1809	04AC  E9 FD0A			     jmp     apush
   1810
   1811				     ;	     PACK  ( c-addr1 u c-addr2 -- c-addr2 )
   1812				     ;					       2dup 2>r	1+ swap	move 2r> tuck c!
   1813
   1814					     hdr     1,'PACK'
1  1815					     cseg
1  1816	022F			     heads   segment public	     ;
1  1817	022F  04			     db	     ??008C	     ;
1  1818	0230  50 41 43 4B		     db	     'PACK'	     ;
1  1819	0234  0225			     dw	     lastl	     ;
1  1820	0236  04AFr			     dw	     cfadr	     ;
1  1821	0238			     heads   ends
1  1822					     cseg	     ;
   1823	04AF  5F		     pack:   pop     di
   1824	04B0  59			     pop     cx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 33
kernel.asm



   1825	04B1  58			     pop     ax
   1826	04B2  57			     push    di
   1827	04B3  51			     push    cx
   1828	04B4  57			     push    di
   1829	04B5  47			     inc     di
   1830	04B6  E8 FD81			     call    bmove
   1831	04B9  E9 FF2B			     jmp     cstor
   1832
   1833				     ;	     PLACE  ( c-addr1 u	c-addr2	-- )  pack drop
   1834
   1835					     hdr     1,'PLACE'
1  1836					     cseg
1  1837	0238			     heads   segment public	     ;
1  1838	0238  05			     db	     ??008E	     ;
1  1839	0239  50 4C 41 43 45		     db	     'PLACE'	     ;
1  1840	023E  022F			     dw	     lastl	     ;
1  1841	0240  04BCr			     dw	     cfadr	     ;
1  1842	0242			     heads   ends
1  1843					     cseg	     ;
   1844	04BC  E8 FDB6		     place:  call    docol
   1845	04BF  04AFr 02FEr		     dw	     pack,drop
   1846	04C3  0289r			     dw	     exit
   1847
   1848				     ;	     affix  ( c-addr char -- c-addr )  over count + c!
   1849
   1850					     hdr     x,'AFFIX'	     ; append char to counted string
1  1851					     cseg	     ;
   1852	04C5  E8 FDAD		     affix:  call    docol	     ; count unchanged
   1853	04C8  031Cr			     dw	     over
   1854	04CA  04A5r 076Dr		     dw	     count,plus
   1855	04CE  03E7r			     dw	     cstor
   1856	04D0  0289r			     dw	     exit
   1857
   1858				     ;	     SCAN  ( c-addr1 u1	char --	c-addr2	u2 )
   1859
   1860					     hdr     1,'SCAN'
1  1861					     cseg
1  1862	0242			     heads   segment public	     ;
1  1863	0242  04			     db	     ??0092	     ;
1  1864	0243  53 43 41 4E		     db	     'SCAN'	     ;
1  1865	0247  0238			     dw	     lastl	     ;
1  1866	0249  04D2r			     dw	     cfadr	     ;
1  1867	024B			     heads   ends
1  1868					     cseg	     ;
   1869	04D2  58		     scan:   pop     ax
   1870	04D3  59			     pop     cx
   1871	04D4  5F			     pop     di
   1872	04D5  E3 0A			     jcxz    scan1
   1873	04D7  8E 06 03CBr		     mov     es,sseg1
   1874	04DB  F2> AE			     repnz   scasb
   1875	04DD  75 02			     jnz     scan1
   1876	04DF  41			     inc     cx
   1877	04E0  4F			     dec     di
   1878	04E1  57		     scan1:  push    di
   1879	04E2  51			     push    cx
   1880					     nextt
1  1881	04E3  AD			     lodsw
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 34
kernel.asm



1  1882	04E4  FF E0			     jmp     ax
   1883
   1884				     ;	     SKIP  ( c-addr1 u1	char --	c-addr2	u2 )
   1885
   1886					     hdr     1,'SKIP'
1  1887					     cseg
1  1888	024B			     heads   segment public	     ;
1  1889	024B  04			     db	     ??0094	     ;
1  1890	024C  53 4B 49 50		     db	     'SKIP'	     ;
1  1891	0250  0242			     dw	     lastl	     ;
1  1892	0252  04E6r			     dw	     cfadr	     ;
1  1893	0254			     heads   ends
1  1894					     cseg	     ;
   1895	04E6  58		     skip:   pop     ax
   1896	04E7  59			     pop     cx
   1897	04E8  5F			     pop     di
   1898	04E9  E3 0A			     jcxz    skip1
   1899	04EB  8E 06 03CBr		     mov     es,sseg1
   1900	04EF  F3> AE			     rep     scasb
   1901	04F1  74 02			     jz	     skip1
   1902	04F3  41			     inc     cx
   1903	04F4  4F			     dec     di
   1904	04F5  57		     skip1:  push    di
   1905	04F6  51			     push    cx
   1906					     nextt
1  1907	04F7  AD			     lodsw
1  1908	04F8  FF E0			     jmp     ax
   1909
   1910				     ;	     -TRAILING	( c-addr u1 -- c-addr u2 )   bl	trim
   1911
   1912					     hdr     1,'-TRAILING'
1  1913					     cseg
1  1914	0254			     heads   segment public	     ;
1  1915	0254  09			     db	     ??0096	     ;
1  1916	0255  2D 54 52 41 49 4C	49+	     db	     '-TRAILING'	     ;
   1917	      4E 47
1  1918	025E  024B			     dw	     lastl	     ;
1  1919	0260  04FAr			     dw	     cfadr	     ;
1  1920	0262			     heads   ends
1  1921					     cseg	     ;
   1922	04FA  B0 20		     dtrai:  mov     al,20h
   1923					     ignore1
1  1924	04FC  A8			     db	     0a8h    ;
   1925
   1926				     ;	     TRIM  ( c-addr u1 char -- c-addr u2 )
   1927
   1928					     hdr     1,'TRIM'
1  1929					     cseg
1  1930	0262			     heads   segment public	     ;
1  1931	0262  04			     db	     ??0098	     ;
1  1932	0263  54 52 49 4D		     db	     'TRIM'	     ;
1  1933	0267  0254			     dw	     lastl	     ;
1  1934	0269  04FDr			     dw	     cfadr	     ;
1  1935	026B			     heads   ends
1  1936					     cseg	     ;
   1937	04FD  58		     trim:   pop     ax
   1938	04FE  59			     pop     cx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 35
kernel.asm



   1939	04FF  5F			     pop     di
   1940	0500  57			     push    di
   1941	0501  E3 0E			     jcxz    trim1
   1942	0503  8E 06 03CBr		     mov     es,sseg1
   1943	0507  03 F9			     add     di,cx
   1944	0509  4F			     dec     di
   1945	050A  FD			     std
   1946	050B  F3> AE			     repz    scasb
   1947	050D  FC			     cld
   1948	050E  74 01			     jz	     trim1
   1949	0510  41			     inc     cx
   1950	0511  51		     trim1:  push    cx
   1951					     nextt
1  1952	0512  AD			     lodsw
1  1953	0513  FF E0			     jmp     ax
   1954
   1955				     ;	     -BLANKS ( c-addr u1 -- c-addr u2 )	     bl	skip -trailing
   1956
   1957					     hdr     1,'-BLANKS'
1  1958					     cseg
1  1959	026B			     heads   segment public	     ;
1  1960	026B  07			     db	     ??009A	     ;
1  1961	026C  2D 42 4C 41 4E 4B	53	     db	     '-BLANKS'		     ;
1  1962	0273  0262			     dw	     lastl	     ;
1  1963	0275  0515r			     dw	     cfadr	     ;
1  1964	0277			     heads   ends
1  1965					     cseg	     ;
   1966	0515  E8 FD5D		     dblan:  call    docol
   1967	0518  0F8Br 04E6r		     dw	     bll,skip
   1968	051C  04FAr			     dw	     dtrai
   1969	051E  0289r			     dw	     exit
   1970
   1971				     ;	     >BLANKS ( c-addr u	-- )
   1972
   1973					     hdr     1,'>BLANKS'     ; cvt ctrls in string to blanks
1  1974					     cseg
1  1975	0277			     heads   segment public	     ;
1  1976	0277  07			     db	     ??009C	     ;
1  1977	0278  3E 42 4C 41 4E 4B	53	     db	     '>BLANKS'		     ;
1  1978	027F  026B			     dw	     lastl	     ;
1  1979	0281  0520r			     dw	     cfadr	     ;
1  1980	0283			     heads   ends
1  1981					     cseg	     ;
   1982	0520  59		     tblan:  pop     cx
   1983	0521  5B			     pop     bx
   1984	0522  E3 11			     jcxz    tblan3
   1985	0524  8E 06 03CBr		     mov     es,sseg1
   1986	0528  B0 20			     mov     al,20h
   1987	052A  26: 38 07		     tblan1: cmp     es:[bx],al
   1988	052D  73 03			     jnc     tblan2
   1989	052F  26: 88 07			     mov     es:[bx],al
   1990	0532  43		     tblan2: inc     bx
   1991	0533  E2 F5			     loop    tblan1
   1992	0535			     tblan3: nextt
1  1993	0535  AD			     lodsw
1  1994	0536  FF E0			     jmp     ax
   1995
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 36
kernel.asm



   1996				     ;	     /STRING  (	c-addr1	u1 n --	c-addr2	u2 )  rot over + -rot -
   1997
   1998					     hdr     1,'/STRING'
1  1999					     cseg
1  2000	0283			     heads   segment public	     ;
1  2001	0283  07			     db	     ??009E	     ;
1  2002	0284  2F 53 54 52 49 4E	47	     db	     '/STRING'		     ;
1  2003	028B  0277			     dw	     lastl	     ;
1  2004	028D  0538r			     dw	     cfadr	     ;
1  2005	028F			     heads   ends
1  2006					     cseg	     ;
   2007	0538  58		     sstr:   pop     ax
   2008	0539  8B DC			     mov     bx,sp
   2009	053B  29 07			     sub     [bx],ax
   2010	053D  01 47 02			     add     [bx+cw],ax
   2011					     nextt
1  2012	0540  AD			     lodsw
1  2013	0541  FF E0			     jmp     ax
   2014
   2015				     ;	     C/STRING  ( c-addr1 u1 -- c-addr2 u2 c )  1 /string over 1- c@
   2016
   2017					     hdr     1,'C/STRING'
1  2018					     cseg
1  2019	028F			     heads   segment public	     ;
1  2020	028F  08			     db	     ??00A0	     ;
1  2021	0290  43 2F 53 54 52 49	4E+	     db	     'C/STRING'		     ;
   2022	      47
1  2023	0298  0283			     dw	     lastl	     ;
1  2024	029A  0543r			     dw	     cfadr	     ;
1  2025	029C			     heads   ends
1  2026					     cseg	     ;
   2027	0543  5A		     csst:   pop     dx
   2028	0544  5B			     pop     bx
   2029	0545  2B C0			     sub     ax,ax
   2030	0547  8A 07			     mov     al,[bx]
   2031	0549  43			     inc     bx
   2032	054A  53			     push    bx
   2033	054B  4A			     dec     dx
   2034	054C  E9 FC69			     jmp     dpush
   2035
   2036				     ;	     -caps  ( -- )	     disable caps COMPARE/SEARCH
   2037
   2038					     hdr     x,'-CAPS'
1  2039					     cseg	     ;
   2040	054F  B0 00		     dcaps:  mov     al,0
   2041					     ignore2
1  2042	0551  A9			     db	     0a9h    ;
   2043
   2044				     ;	     CAPS  ( --	)	     enable caps COMPARE/SEARCH
   2045
   2046					     hdr     1,'CAPS'
1  2047					     cseg
1  2048	029C			     heads   segment public	     ;
1  2049	029C  04			     db	     ??00A4	     ;
1  2050	029D  43 41 50 53		     db	     'CAPS'	     ;
1  2051	02A1  028F			     dw	     lastl	     ;
1  2052	02A3  0552r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 37
kernel.asm



1  2053	02A5			     heads   ends
1  2054					     cseg	     ;
   2055	0552  B0 01		     caps:   mov     al,1
   2056	0554  A2 01DFr			     mov     scaps,al
   2057					     nextt
1  2058	0557  AD			     lodsw
1  2059	0558  FF E0			     jmp     ax
   2060
   2061				     ;	     string compare
   2062
   2063					     cseg
   2064
   2065	055A  80 3E 01DFr 00	     cmpss:  cmp     byte ptr scaps,0
   2066	055F  75 03			     jnz     cmpnc
   2067	0561  F3> A6			     rep     cmpsb
   2068	0563  C3			     ret
   2069
   2070	0564  50		     cmpnc:  push    ax
   2071	0565  3B C9			     cmp     cx,cx   ; clear S Z flags
   2072	0567  E3 13			     jcxz    cmpnc2
   2073	0569  AC		     cmpnc1: lodsb
   2074	056A  E8 FCC2			     call    upc
   2075	056D  8A E0			     mov     ah,al
   2076	056F  26: 8A 05			     mov     al,es:[di]
   2077	0572  47			     inc     di
   2078	0573  E8 FCB9			     call    upc
   2079	0576  3A E0			     cmp     ah,al
   2080	0578  75 02			     jnz     cmpnc2
   2081	057A  E2 ED			     loop    cmpnc1
   2082	057C  58		     cmpnc2: pop     ax
   2083	057D  C3			     ret
   2084
   2085				     ;	     COMPARE  (	c-addr1	u1 c-addr2 u2 -- -1 | 0	| 1 )
   2086
   2087					     hdr     1,'COMPARE'
1  2088					     cseg
1  2089	02A5			     heads   segment public	     ;
1  2090	02A5  07			     db	     ??00A6	     ;
1  2091	02A6  43 4F 4D 50 41 52	45	     db	     'COMPARE'		     ;
1  2092	02AD  029C			     dw	     lastl	     ;
1  2093	02AF  057Er			     dw	     cfadr	     ;
1  2094	02B1			     heads   ends
1  2095					     cseg	     ;
   2096	057E  8B D6		     cmpp:   mov     dx,si
   2097	0580  59			     pop     cx
   2098	0581  5E			     pop     si
   2099	0582  5B			     pop     bx
   2100	0583  5F			     pop     di
   2101	0584  8E 06 03CBr		     mov     es,sseg1
   2102	0588  2B C0			     sub     ax,ax
   2103	058A  3B CB			     cmp     cx,bx
   2104	058C  74 08			     jz	     cmpp2
   2105	058E  77 03			     ja	     cmpp1
   2106	0590  40			     inc     ax
   2107	0591  EB 03			     jmp     short cmpp2
   2108
   2109	0593  48		     cmpp1:  dec     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 38
kernel.asm



   2110	0594  8B CB			     mov     cx,bx
   2111	0596  E8 FFC1		     cmpp2:  call    cmpss
   2112	0599  74 07			     jz	     cmpp3
   2113	059B  B8 FFFF			     mov     ax,-1
   2114	059E  73 02			     jnc     cmpp3
   2115	05A0  F7 D8			     neg     ax
   2116	05A2  8B F2		     cmpp3:  mov     si,dx
   2117	05A4  50			     push    ax
   2118	05A5  EB A8			     jmp     dcaps
   2119
   2120				     ;	     SEARCH  ( c-addr1 u1 c-addr2 u2 --	c-addr3	u3 -1 |	c-addr1	u1 0 )
   2121
   2122					     hdr     1,'SEARCH'
1  2123					     cseg
1  2124	02B1			     heads   segment public	     ;
1  2125	02B1  06			     db	     ??00A8	     ;
1  2126	02B2  53 45 41 52 43 48		     db	     'SEARCH'		     ;
1  2127	02B8  02A5			     dw	     lastl	     ;
1  2128	02BA  05A7r			     dw	     cfadr	     ;
1  2129	02BC			     heads   ends
1  2130					     cseg	     ;
   2131	05A7  5B		     sear:   pop     bx
   2132	05A8  58			     pop     ax
   2133	05A9  0B DB			     or	     bx,bx   ; u2=0
   2134	05AB  74 28			     jz	     sear3   ; match
   2135	05AD  5A			     pop     dx
   2136	05AE  5F			     pop     di
   2137	05AF  57			     push    di
   2138	05B0  52			     push    dx
   2139	05B1  56			     push    si
   2140	05B2  96			     xchg    si,ax
   2141	05B3  8E 06 03CBr		     mov     es,sseg1
   2142	05B7  2B D3			     sub     dx,bx
   2143	05B9  78 21			     js	     sear5   ; u2<u1
   2144	05BB  56		     sear1:  push    si
   2145	05BC  57			     push    di
   2146	05BD  8B CB			     mov     cx,bx
   2147	05BF  E8 FF98			     call    cmpss
   2148	05C2  5F			     pop     di
   2149	05C3  5E			     pop     si
   2150	05C4  74 08			     jz	     sear2
   2151	05C6  0B D2			     or	     dx,dx
   2152	05C8  74 12			     jz	     sear5
   2153	05CA  47			     inc     di
   2154	05CB  4A			     dec     dx
   2155	05CC  EB ED			     jmp     sear1
   2156
   2157	05CE  5E		     sear2:  pop     si
   2158	05CF  58			     pop     ax
   2159	05D0  58			     pop     ax
   2160	05D1  03 D3			     add     dx,bx
   2161	05D3  57			     push    di
   2162	05D4  52			     push    dx
   2163	05D5  B8 FFFF		     sear3:  mov     ax,-1
   2164	05D8  50		     sear4:  push    ax
   2165	05D9  E9 FF73			     jmp     dcaps
   2166
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 39
kernel.asm



   2167	05DC  5E		     sear5:  pop     si
   2168	05DD  2B C0			     sub     ax,ax
   2169	05DF  EB F7			     jmp     sear4
   2170
   2171				     ;	     +STRING  (	c-addr1	u1 c-addr2 u2 -- c-addr2 u3 )
   2172				     ;					     2swap swap	2over +	2 pick move +
   2173
   2174					     hdr     1,'+STRING'
1  2175					     cseg
1  2176	02BC			     heads   segment public	     ;
1  2177	02BC  07			     db	     ??00AA	     ;
1  2178	02BD  2B 53 54 52 49 4E	47	     db	     '+STRING'		     ;
1  2179	02C4  02B1			     dw	     lastl	     ;
1  2180	02C6  05E1r			     dw	     cfadr	     ;
1  2181	02C8			     heads   ends
1  2182					     cseg	     ;
   2183	05E1  5A		     pstr:   pop     dx
   2184	05E2  5F			     pop     di
   2185	05E3  59			     pop     cx
   2186	05E4  58			     pop     ax
   2187	05E5  57			     push    di
   2188	05E6  03 FA			     add     di,dx
   2189	05E8  03 D1			     add     dx,cx
   2190	05EA  52			     push    dx
   2191	05EB  E8 FC4C			     call    bmove
   2192					     nextt
1  2193	05EE  AD			     lodsw
1  2194	05EF  FF E0			     jmp     ax
   2195
   2196				     ;	     ZCOUNT  ( c-addr -- c-addr	u )  dup begin count 0=	until over - 1-
   2197
   2198					     hdr     1,'ZCOUNT'
1  2199					     cseg
1  2200	02C8			     heads   segment public	     ;
1  2201	02C8  06			     db	     ??00AC	     ;
1  2202	02C9  5A 43 4F 55 4E 54		     db	     'ZCOUNT'		     ;
1  2203	02CF  02BC			     dw	     lastl	     ;
1  2204	02D1  05F1r			     dw	     cfadr	     ;
1  2205	02D3			     heads   ends
1  2206					     cseg	     ;
   2207	05F1  5B		     zcnt:   pop     bx
   2208	05F2  53			     push    bx
   2209	05F3  E8 0003			     call    zcnt1
   2210	05F6  E9 FBC0			     jmp     apush
   2211
   2212				     ;	     BX=addr AX=cnt
   2213
   2214	05F9  8E 06 03CBr	     zcnt1:  mov     es,sseg1
   2215	05FD  2B C0		     zcnt2:  sub     ax,ax
   2216	05FF  26: 80 3F	00	     zcnt3:  cmp     byte ptr es:[bx],0
   2217	0603  74 04			     jz	     zcnt4
   2218	0605  43			     inc     bx
   2219	0606  40			     inc     ax
   2220	0607  75 F6			     jnz     zcnt3
   2221	0609  C3		     zcnt4:  ret
   2222
   2223				     ;	     ZPLACE  ( c-addr1 u c-addr2 -- )  2dup + >r swap cmove 0 r> c!
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 40
kernel.asm



   2224
   2225					     hdr     1,'ZPLACE'
1  2226					     cseg
1  2227	02D3			     heads   segment public	     ;
1  2228	02D3  06			     db	     ??00AE	     ;
1  2229	02D4  5A 50 4C 41 43 45		     db	     'ZPLACE'		     ;
1  2230	02DA  02C8			     dw	     lastl	     ;
1  2231	02DC  060Ar			     dw	     cfadr	     ;
1  2232	02DE			     heads   ends
1  2233					     cseg	     ;
   2234	060A  5F		     zplace: pop     di
   2235	060B  59			     pop     cx
   2236	060C  58			     pop     ax
   2237	060D  E8 FC34			     call    movd
   2238	0610  C6 05 00			     mov     byte ptr [di],0
   2239					     nextt
1  2240	0613  AD			     lodsw
1  2241	0614  FF E0			     jmp     ax
   2242
   2243				     ;	     S.R  ( c-addr u w -- )  over - ( 0	max) spaces type
   2244
   2245					     hdr     1,'S.R'	     ; type string right-justified
1  2246					     cseg
1  2247	02DE			     heads   segment public	     ;
1  2248	02DE  03			     db	     ??00B0	     ;
1  2249	02DF  53 2E 52			     db	     'S.R'	     ;
1  2250	02E2  02D3			     dw	     lastl	     ;
1  2251	02E4  0616r			     dw	     cfadr	     ;
1  2252	02E6			     heads   ends
1  2253					     cseg	     ;
   2254	0616  E8 FC5C		     sdotr:  call    docol
   2255	0619  031Cr 0775r		     dw	     over,subb
   2256				     ;	     dw	     zmax	     ; currently performed by SPACES
   2257	061D  0EF9r			     dw	     spacs
   2258	061F  0EE4r			     dw	     typee
   2259	0621  0289r			     dw	     exit
   2260
   2261				     ;
   2262				     ;	     Comparison	Functions
   2263				     ;
   2264				     ;	D0=  0=	 0<>  =	 <>  0<	 0>  <	>  U<  U>  0max	 MIN  MAX  UMIN
   2265				     ;	UMAX  WITHIN  BETWEEN  D=  D0<	D<  DU<	 DMIN  DMAX
   2266				     ;
   2267
   2268				     ;	     D0=  ( d -- flag )	     or	0=
   2269
   2270					     hdr     1,'D0='
1  2271					     cseg
1  2272	02E6			     heads   segment public	     ;
1  2273	02E6  03			     db	     ??00B2	     ;
1  2274	02E7  44 30 3D			     db	     'D0='	     ;
1  2275	02EA  02DE			     dw	     lastl	     ;
1  2276	02EC  0623r			     dw	     cfadr	     ;
1  2277	02EE			     heads   ends
1  2278					     cseg	     ;
   2279	0623  58		     dzequ:  pop     ax
   2280	0624  5B			     pop     bx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 41
kernel.asm



   2281	0625  0B C3			     or	     ax,bx
   2282					     ignore1
1  2283	0627  A8			     db	     0a8h    ;
   2284
   2285				     ;	     0=	 ( x --	flag )
   2286
   2287					     hdr     1,'0='
1  2288					     cseg
1  2289	02EE			     heads   segment public	     ;
1  2290	02EE  02			     db	     ??00B4	     ;
1  2291	02EF  30 3D			     db	     '0='	     ;
1  2292	02F1  02E6			     dw	     lastl	     ;
1  2293	02F3  0628r			     dw	     cfadr	     ;
1  2294	02F5			     heads   ends
1  2295					     cseg	     ;
   2296	0628  58		     zequ:   pop     ax
   2297	0629  2D 0001		     zequ1:  sub     ax,1
   2298	062C  1B C0			     sbb     ax,ax
   2299	062E  50			     push    ax
   2300					     nextt
1  2301	062F  AD			     lodsw
1  2302	0630  FF E0			     jmp     ax
   2303
   2304				     ;	     0<>  ( x -- flag )
   2305
   2306					     hdr     1,'0<>'
1  2307					     cseg
1  2308	02F5			     heads   segment public	     ;
1  2309	02F5  03			     db	     ??00B6	     ;
1  2310	02F6  30 3C 3E			     db	     '0<>'	     ;
1  2311	02F9  02EE			     dw	     lastl	     ;
1  2312	02FB  0632r			     dw	     cfadr	     ;
1  2313	02FD			     heads   ends
1  2314					     cseg	     ;
   2315	0632  58		     zneq:   pop     ax
   2316	0633  F7 D8		     zneq1:  neg     ax
   2317	0635  1B C0			     sbb     ax,ax
   2318	0637  50			     push    ax
   2319					     nextt
1  2320	0638  AD			     lodsw
1  2321	0639  FF E0			     jmp     ax
   2322
   2323				     ;	     =	( x1 x2	-- flag	)
   2324
   2325					     hdr     1,'='
1  2326					     cseg
1  2327	02FD			     heads   segment public	     ;
1  2328	02FD  01			     db	     ??00B8	     ;
1  2329	02FE  3D			     db	     '='	     ;
1  2330	02FF  02F5			     dw	     lastl	     ;
1  2331	0301  063Br			     dw	     cfadr	     ;
1  2332	0303			     heads   ends
1  2333					     cseg	     ;
   2334	063B  58		     equal:  pop     ax
   2335	063C  5B			     pop     bx
   2336	063D  2B C3			     sub     ax,bx
   2337	063F  2D 0001			     sub     ax,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 42
kernel.asm



   2338	0642  1B C0			     sbb     ax,ax
   2339	0644  50			     push    ax
   2340					     nextt
1  2341	0645  AD			     lodsw
1  2342	0646  FF E0			     jmp     ax
   2343
   2344				     ;	     <>	 ( x1 x2 -- flag )
   2345
   2346					     hdr     1,'<>'
1  2347					     cseg
1  2348	0303			     heads   segment public	     ;
1  2349	0303  02			     db	     ??00BA	     ;
1  2350	0304  3C 3E			     db	     '<>'	     ;
1  2351	0306  02FD			     dw	     lastl	     ;
1  2352	0308  0648r			     dw	     cfadr	     ;
1  2353	030A			     heads   ends
1  2354					     cseg	     ;
   2355	0648  58		     nequ:   pop     ax
   2356	0649  5B			     pop     bx
   2357	064A  2B C3			     sub     ax,bx
   2358	064C  F7 D8			     neg     ax
   2359	064E  1B C0			     sbb     ax,ax
   2360	0650  50			     push    ax
   2361					     nextt
1  2362	0651  AD			     lodsw
1  2363	0652  FF E0			     jmp     ax
   2364
   2365				     ;	     0<	 ( n --	flag )
   2366
   2367					     hdr     1,'0<'
1  2368					     cseg
1  2369	030A			     heads   segment public	     ;
1  2370	030A  02			     db	     ??00BC	     ;
1  2371	030B  30 3C			     db	     '0<'	     ;
1  2372	030D  0303			     dw	     lastl	     ;
1  2373	030F  0654r			     dw	     cfadr	     ;
1  2374	0311			     heads   ends
1  2375					     cseg	     ;
   2376	0654  58		     zless:  pop     ax
   2377	0655  99			     cwd
   2378	0656  52			     push    dx
   2379					     nextt
1  2380	0657  AD			     lodsw
1  2381	0658  FF E0			     jmp     ax
   2382
   2383				     ;	     0>	 ( n --	flag )
   2384
   2385					     hdr     1,'0>'
1  2386					     cseg
1  2387	0311			     heads   segment public	     ;
1  2388	0311  02			     db	     ??00BE	     ;
1  2389	0312  30 3E			     db	     '0>'	     ;
1  2390	0314  030A			     dw	     lastl	     ;
1  2391	0316  065Ar			     dw	     cfadr	     ;
1  2392	0318			     heads   ends
1  2393					     cseg	     ;
   2394	065A  5B		     zgrea:  pop     bx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 43
kernel.asm



   2395	065B  2B C9			     sub     cx,cx
   2396	065D  2B C0		     zgrea1: sub     ax,ax
   2397	065F  3B D9			     cmp     bx,cx
   2398	0661  7E 01			     jng     zgrea2
   2399	0663  48			     dec     ax
   2400	0664  50		     zgrea2: push    ax
   2401					     nextt
1  2402	0665  AD			     lodsw
1  2403	0666  FF E0			     jmp     ax
   2404
   2405				     ;	     <	( n1 n2	-- flag	)
   2406
   2407					     hdr     1,'<'
1  2408					     cseg
1  2409	0318			     heads   segment public	     ;
1  2410	0318  01			     db	     ??00C0	     ;
1  2411	0319  3C			     db	     '<'	     ;
1  2412	031A  0311			     dw	     lastl	     ;
1  2413	031C  0668r			     dw	     cfadr	     ;
1  2414	031E			     heads   ends
1  2415					     cseg	     ;
   2416	0668  5B		     less:   pop     bx
   2417	0669  59			     pop     cx
   2418	066A  EB F1			     jmp     short zgrea1
   2419
   2420				     ;	     >	( n1 n2	-- flag	)
   2421
   2422					     hdr     1,'>'
1  2423					     cseg
1  2424	031E			     heads   segment public	     ;
1  2425	031E  01			     db	     ??00C2	     ;
1  2426	031F  3E			     db	     '>'	     ;
1  2427	0320  0318			     dw	     lastl	     ;
1  2428	0322  066Cr			     dw	     cfadr	     ;
1  2429	0324			     heads   ends
1  2430					     cseg	     ;
   2431	066C  59		     great:  pop     cx
   2432	066D  5B			     pop     bx
   2433	066E  EB ED			     jmp     short zgrea1
   2434
   2435				     ;	     U<	 ( u1 u2 -- flag )
   2436
   2437					     hdr     1,'U<'
1  2438					     cseg
1  2439	0324			     heads   segment public	     ;
1  2440	0324  02			     db	     ??00C4	     ;
1  2441	0325  55 3C			     db	     'U<'	     ;
1  2442	0327  031E			     dw	     lastl	     ;
1  2443	0329  0670r			     dw	     cfadr	     ;
1  2444	032B			     heads   ends
1  2445					     cseg	     ;
   2446	0670  58		     uless:  pop     ax
   2447	0671  5B			     pop     bx
   2448	0672  2B D8			     sub     bx,ax
   2449	0674  1B C0			     sbb     ax,ax
   2450	0676  50			     push    ax
   2451					     nextt
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 44
kernel.asm



1  2452	0677  AD			     lodsw
1  2453	0678  FF E0			     jmp     ax
   2454
   2455				     ;	     U>	 ( u1 u2 -- flag )
   2456
   2457					     hdr     1,'U>'
1  2458					     cseg
1  2459	032B			     heads   segment public	     ;
1  2460	032B  02			     db	     ??00C6	     ;
1  2461	032C  55 3E			     db	     'U>'	     ;
1  2462	032E  0324			     dw	     lastl	     ;
1  2463	0330  067Ar			     dw	     cfadr	     ;
1  2464	0332			     heads   ends
1  2465					     cseg	     ;
   2466	067A  58		     ugrea:  pop     ax
   2467	067B  5B			     pop     bx
   2468	067C  2B C3			     sub     ax,bx
   2469	067E  1B C0			     sbb     ax,ax
   2470	0680  50			     push    ax
   2471					     nextt
1  2472	0681  AD			     lodsw
1  2473	0682  FF E0			     jmp     ax
   2474
   2475				     ;	     MIN  ( n1 n2 -- n1	| n2 )	2dup > if swap then drop
   2476
   2477					     hdr     1,'MIN'
1  2478					     cseg
1  2479	0332			     heads   segment public	     ;
1  2480	0332  03			     db	     ??00C8	     ;
1  2481	0333  4D 49 4E			     db	     'MIN'	     ;
1  2482	0336  032B			     dw	     lastl	     ;
1  2483	0338  0684r			     dw	     cfadr	     ;
1  2484	033A			     heads   ends
1  2485					     cseg	     ;
   2486	0684  58		     min:    pop     ax
   2487	0685  5B			     pop     bx
   2488	0686  3B C3			     cmp     ax,bx
   2489	0688  7C 02			     jl	     min1
   2490	068A  8B C3			     mov     ax,bx
   2491	068C  50		     min1:   push    ax
   2492					     nextt
1  2493	068D  AD			     lodsw
1  2494	068E  FF E0			     jmp     ax
   2495
   2496				     ;	     0max  ( n1	-- n2 )	     0 max
   2497
   2498					     hdr     x,'0MAX'
1  2499					     cseg	     ;
   2500	0690  2B C0		     zmax:   sub     ax,ax
   2501					     ignore1
1  2502	0692  A8			     db	     0a8h    ;
   2503
   2504				     ;	     MAX  ( n1 n2 -- n1	| n2 )	2dup < if swap then drop
   2505
   2506					     hdr     1,'MAX'
1  2507					     cseg
1  2508	033A			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 45
kernel.asm



1  2509	033A  03			     db	     ??00CC	     ;
1  2510	033B  4D 41 58			     db	     'MAX'	     ;
1  2511	033E  0332			     dw	     lastl	     ;
1  2512	0340  0693r			     dw	     cfadr	     ;
1  2513	0342			     heads   ends
1  2514					     cseg	     ;
   2515	0693  58		     max:    pop     ax
   2516	0694  5B			     pop     bx
   2517	0695  3B C3			     cmp     ax,bx
   2518	0697  7F 02			     jg	     max1
   2519	0699  8B C3			     mov     ax,bx
   2520	069B  50		     max1:   push    ax
   2521					     nextt
1  2522	069C  AD			     lodsw
1  2523	069D  FF E0			     jmp     ax
   2524
   2525				     ;	     UMIN  ( u1	u2 -- u1 | u2 )	 2dup u> if swap then drop
   2526
   2527					     hdr     1,'UMIN'
1  2528					     cseg
1  2529	0342			     heads   segment public	     ;
1  2530	0342  04			     db	     ??00CE	     ;
1  2531	0343  55 4D 49 4E		     db	     'UMIN'	     ;
1  2532	0347  033A			     dw	     lastl	     ;
1  2533	0349  069Fr			     dw	     cfadr	     ;
1  2534	034B			     heads   ends
1  2535					     cseg	     ;
   2536	069F  58		     umin:   pop     ax
   2537	06A0  5B			     pop     bx
   2538	06A1  3B C3			     cmp     ax,bx
   2539	06A3  72 02			     jc	     umin1
   2540	06A5  8B C3			     mov     ax,bx
   2541	06A7  50		     umin1:  push    ax
   2542					     nextt
1  2543	06A8  AD			     lodsw
1  2544	06A9  FF E0			     jmp     ax
   2545
   2546				     ;	     UMAX  ( u1	u2 -- u1 | u2 )	 2dup u< if swap then drop
   2547
   2548					     hdr     1,'UMAX'
1  2549					     cseg
1  2550	034B			     heads   segment public	     ;
1  2551	034B  04			     db	     ??00D0	     ;
1  2552	034C  55 4D 41 58		     db	     'UMAX'	     ;
1  2553	0350  0342			     dw	     lastl	     ;
1  2554	0352  06ABr			     dw	     cfadr	     ;
1  2555	0354			     heads   ends
1  2556					     cseg	     ;
   2557	06AB  58		     umax:   pop     ax
   2558	06AC  5B			     pop     bx
   2559	06AD  3B C3			     cmp     ax,bx
   2560	06AF  77 02			     ja	     umax1
   2561	06B1  8B C3			     mov     ax,bx
   2562	06B3  50		     umax1:  push    ax
   2563					     nextt
1  2564	06B4  AD			     lodsw
1  2565	06B5  FF E0			     jmp     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 46
kernel.asm



   2566
   2567				     ;	     WITHIN  ( x1 x2 x3	-- flag	)  over	- -rot - swap u<
   2568
   2569					     hdr     1,'WITHIN'
1  2570					     cseg
1  2571	0354			     heads   segment public	     ;
1  2572	0354  06			     db	     ??00D2	     ;
1  2573	0355  57 49 54 48 49 4E		     db	     'WITHIN'		     ;
1  2574	035B  034B			     dw	     lastl	     ;
1  2575	035D  06B7r			     dw	     cfadr	     ;
1  2576	035F			     heads   ends
1  2577					     cseg	     ;
   2578	06B7  5B		     within: pop     bx
   2579	06B8  58			     pop     ax
   2580	06B9  59			     pop     cx
   2581	06BA  2B C8			     sub     cx,ax
   2582	06BC  2B D8			     sub     bx,ax
   2583	06BE  3B CB			     cmp     cx,bx
   2584	06C0  1B C0			     sbb     ax,ax
   2585	06C2  E9 FAF4			     jmp     apush
   2586
   2587
   2588				     ;	     BETWEEN  (	x1 x2 x3 -- flag )  over - -rot	- u< 0=
   2589
   2590					     hdr     1,'BETWEEN'
1  2591					     cseg
1  2592	035F			     heads   segment public	     ;
1  2593	035F  07			     db	     ??00D4	     ;
1  2594	0360  42 45 54 57 45 45	4E	     db	     'BETWEEN'		     ;
1  2595	0367  0354			     dw	     lastl	     ;
1  2596	0369  06C5r			     dw	     cfadr	     ;
1  2597	036B			     heads   ends
1  2598					     cseg	     ;
   2599	06C5  5B		     betw:   pop     bx
   2600	06C6  58			     pop     ax
   2601	06C7  59			     pop     cx
   2602	06C8  2B D8			     sub     bx,ax
   2603	06CA  2B C8			     sub     cx,ax
   2604	06CC  3B D9			     cmp     bx,cx
   2605	06CE  F5			     cmc
   2606	06CF  1B C0			     sbb     ax,ax
   2607	06D1  E9 FAE5			     jmp     apush
   2608
   2609
   2610				     ;	     D=	 ( d1 d2 -- flag )   d-	d0=
   2611
   2612					     hdr     1,'D='
1  2613					     cseg
1  2614	036B			     heads   segment public	     ;
1  2615	036B  02			     db	     ??00D6	     ;
1  2616	036C  44 3D			     db	     'D='	     ;
1  2617	036E  035F			     dw	     lastl	     ;
1  2618	0370  06D4r			     dw	     cfadr	     ;
1  2619	0372			     heads   ends
1  2620					     cseg	     ;
   2621	06D4  E8 FB9E		     dequ:   call    docol
   2622	06D7  078Cr			     dw	     dsub
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 47
kernel.asm



   2623	06D9  0623r			     dw	     dzequ
   2624	06DB  0289r			     dw	     exit
   2625
   2626				     ;	     D0<  ( d -- flag )	     nip 0<
   2627
   2628					     hdr     1,'D0<'
1  2629					     cseg
1  2630	0372			     heads   segment public	     ;
1  2631	0372  03			     db	     ??00D8	     ;
1  2632	0373  44 30 3C			     db	     'D0<'	     ;
1  2633	0376  036B			     dw	     lastl	     ;
1  2634	0378  06DDr			     dw	     cfadr	     ;
1  2635	037A			     heads   ends
1  2636					     cseg	     ;
   2637	06DD  58		     dzle:   pop     ax
   2638	06DE  5B			     pop     bx
   2639	06DF  99			     cwd
   2640	06E0  52			     push    dx
   2641					     nextt
1  2642	06E1  AD			     lodsw
1  2643	06E2  FF E0			     jmp     ax
   2644
   2645				     ;	     D<	 ( d1 d2 -- flag )
   2646
   2647					     hdr     1,'D<'
1  2648					     cseg
1  2649	037A			     heads   segment public	     ;
1  2650	037A  02			     db	     ??00DA	     ;
1  2651	037B  44 3C			     db	     'D<'	     ;
1  2652	037D  0372			     dw	     lastl	     ;
1  2653	037F  06E4r			     dw	     cfadr	     ;
1  2654	0381			     heads   ends
1  2655					     cseg	     ;
   2656	06E4  5A		     dless:  pop     dx
   2657	06E5  5B			     pop     bx
   2658	06E6  59			     pop     cx
   2659	06E7  58			     pop     ax
   2660	06E8  2B C3			     sub     ax,bx
   2661	06EA  1B CA			     sbb     cx,dx
   2662	06EC  7C 03			     jl	     dless1
   2663	06EE  E9 0888			     jmp     false
   2664
   2665	06F1  E9 087E		     dless1: jmp     true
   2666
   2667				     ;	     DU<  ( ud1	ud2 -- flag )
   2668
   2669					     hdr     1,'DU<'
1  2670					     cseg
1  2671	0381			     heads   segment public	     ;
1  2672	0381  03			     db	     ??00DC	     ;
1  2673	0382  44 55 3C			     db	     'DU<'	     ;
1  2674	0385  037A			     dw	     lastl	     ;
1  2675	0387  06F4r			     dw	     cfadr	     ;
1  2676	0389			     heads   ends
1  2677					     cseg	     ;
   2678	06F4  5A		     dules:  pop     dx
   2679	06F5  5B			     pop     bx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 48
kernel.asm



   2680	06F6  59			     pop     cx
   2681	06F7  58			     pop     ax
   2682	06F8  2B C3			     sub     ax,bx
   2683	06FA  1B CA			     sbb     cx,dx
   2684	06FC  1B C0			     sbb     ax,ax
   2685	06FE  E9 FAB8			     jmp     apush
   2686
   2687				     ;	     DMIN  ( d1	d2 -- d1 | d2 )	 2over 2over d<	0= if 2swap then 2drop
   2688
   2689					     hdr     1,'DMIN'
1  2690					     cseg
1  2691	0389			     heads   segment public	     ;
1  2692	0389  04			     db	     ??00DE	     ;
1  2693	038A  44 4D 49 4E		     db	     'DMIN'	     ;
1  2694	038E  0381			     dw	     lastl	     ;
1  2695	0390  0701r			     dw	     cfadr	     ;
1  2696	0392			     heads   ends
1  2697					     cseg	     ;
   2698	0701  E8 FB71		     dmin:   call    docol
   2699	0704  0393r 0393r		     dw	     tover,tover
   2700	0708  06E4r 0628r		     dw	     dless,zequ
   2701	070C  0A92r 0712r	     dmin1   dw	     zbran,dmin2
   2702	0710  0388r			     dw	     tswap
   2703	0712  0378r		     dmin2   dw	     tdrop
   2704	0714  0289r			     dw	     exit
   2705
   2706				     ;	     DMAX  ( d1	d2 -- d1 | d2 )	 2over 2over d<	if 2swap then 2drop
   2707
   2708					     hdr     1,'DMAX'
1  2709					     cseg
1  2710	0392			     heads   segment public	     ;
1  2711	0392  04			     db	     ??00E0	     ;
1  2712	0393  44 4D 41 58		     db	     'DMAX'	     ;
1  2713	0397  0389			     dw	     lastl	     ;
1  2714	0399  0716r			     dw	     cfadr	     ;
1  2715	039B			     heads   ends
1  2716					     cseg	     ;
   2717	0716  E8 FB5C		     dmax:   call    docol
   2718	0719  0393r 0393r		     dw	     tover,tover
   2719	071D  06E4r			     dw	     dless
   2720	071F  0A8Dr 070Cr		     dw	     bran,dmin1
   2721
   2722				     ;
   2723				     ;	     Arithmetic	and Logical Functions
   2724				     ;
   2725				     ;	AND  OR	 XOR INVERT  NOT  S>D  D>S  NEGATE  ABS	 DNEGATE  DABS	+
   2726				     ;	-  M+  D+  D-  1+  2+  1-  2-  UM*  M*	UM/MOD	SM/REM	FM/MOD
   2727				     ;	*/MOD  */  /MOD	 /  MOD	 M*/  2*  2/  U2/  D2*	D2/  LSHIFT  RSHIFT
   2728				     ;
   2729
   2730				     ;	     AND  ( x1 x2 -- x3	)
   2731
   2732					     hdr     1,'AND'
1  2733					     cseg
1  2734	039B			     heads   segment public	     ;
1  2735	039B  03			     db	     ??00E2	     ;
1  2736	039C  41 4E 44			     db	     'AND'	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 49
kernel.asm



1  2737	039F  0392			     dw	     lastl	     ;
1  2738	03A1  0723r			     dw	     cfadr	     ;
1  2739	03A3			     heads   ends
1  2740					     cseg	     ;
   2741	0723  58		     andd:   pop     ax
   2742	0724  5B			     pop     bx
   2743	0725  23 C3			     and     ax,bx
   2744	0727  50			     push    ax
   2745					     nextt
1  2746	0728  AD			     lodsw
1  2747	0729  FF E0			     jmp     ax
   2748
   2749				     ;	     OR	 ( x1 x2 -- x3 )
   2750
   2751					     hdr     1,'OR'
1  2752					     cseg
1  2753	03A3			     heads   segment public	     ;
1  2754	03A3  02			     db	     ??00E4	     ;
1  2755	03A4  4F 52			     db	     'OR'	     ;
1  2756	03A6  039B			     dw	     lastl	     ;
1  2757	03A8  072Br			     dw	     cfadr	     ;
1  2758	03AA			     heads   ends
1  2759					     cseg	     ;
   2760	072B  58		     orr:    pop     ax
   2761	072C  5B			     pop     bx
   2762	072D  0B C3			     or	     ax,bx
   2763	072F  50			     push    ax
   2764					     nextt
1  2765	0730  AD			     lodsw
1  2766	0731  FF E0			     jmp     ax
   2767
   2768				     ;	     XOR  ( x1 x2 -- x3	)
   2769
   2770					     hdr     1,'XOR'
1  2771					     cseg
1  2772	03AA			     heads   segment public	     ;
1  2773	03AA  03			     db	     ??00E6	     ;
1  2774	03AB  58 4F 52			     db	     'XOR'	     ;
1  2775	03AE  03A3			     dw	     lastl	     ;
1  2776	03B0  0733r			     dw	     cfadr	     ;
1  2777	03B2			     heads   ends
1  2778					     cseg	     ;
   2779	0733  58		     xorr:   pop     ax
   2780	0734  5B			     pop     bx
   2781	0735  33 C3			     xor     ax,bx
   2782	0737  50			     push    ax
   2783					     nextt
1  2784	0738  AD			     lodsw
1  2785	0739  FF E0			     jmp     ax
   2786
   2787				     ;	     INVERT  ( x1 -- x2	)    one's complement
   2788
   2789					     hdr     1,'INVERT'
1  2790					     cseg
1  2791	03B2			     heads   segment public	     ;
1  2792	03B2  06			     db	     ??00E8	     ;
1  2793	03B3  49 4E 56 45 52 54		     db	     'INVERT'		     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 50
kernel.asm



1  2794	03B9  03AA			     dw	     lastl	     ;
1  2795	03BB  073Br			     dw	     cfadr	     ;
1  2796	03BD			     heads   ends
1  2797					     cseg	     ;
   2798	073B  58		     invert: pop     ax
   2799	073C  F7 D0			     not     ax
   2800	073E  50			     push    ax
   2801					     nextt
1  2802	073F  AD			     lodsw
1  2803	0740  FF E0			     jmp     ax
   2804
   2805				     ;	     NOT  ( x1 -- x2 )		     aka 0= not
   2806
   2807					     hdr     1,'NOT',,,zequ	     ; F79 NOT
1  2808					     cseg
1  2809	03BD			     heads   segment public	     ;
1  2810	03BD  83			     db	     ??00EA	     ;
1  2811	03BE  4E 4F 54			     db	     'NOT'	     ;
1  2812	03C1  03B2			     dw	     lastl	     ;
1  2813	03C3  0628r			     dw	     cfadr	     ;
1  2814	03C5			     heads   ends
1  2815					     cseg	     ;
   2816				     nott    equ     zequ
   2817
   2818				     ;	     S>D  ( n -- d )
   2819
   2820					     hdr     1,'S>D'
1  2821					     cseg
1  2822	03C5			     heads   segment public	     ;
1  2823	03C5  03			     db	     ??00EC	     ;
1  2824	03C6  53 3E 44			     db	     'S>D'	     ;
1  2825	03C9  03BD			     dw	     lastl	     ;
1  2826	03CB  0742r			     dw	     cfadr	     ;
1  2827	03CD			     heads   ends
1  2828					     cseg	     ;
   2829	0742  58		     stod:   pop     ax
   2830	0743  99			     cwd
   2831	0744  50			     push    ax
   2832	0745  52			     push    dx
   2833					     nextt
1  2834	0746  AD			     lodsw
1  2835	0747  FF E0			     jmp     ax
   2836
   2837				     ;	     D>S  ( d -- n )		     aka drop d>s
   2838
   2839					     hdr     1,'D>S',,,drop
1  2840					     cseg
1  2841	03CD			     heads   segment public	     ;
1  2842	03CD  83			     db	     ??00EE	     ;
1  2843	03CE  44 3E 53			     db	     'D>S'	     ;
1  2844	03D1  03C5			     dw	     lastl	     ;
1  2845	03D3  02FEr			     dw	     cfadr	     ;
1  2846	03D5			     heads   ends
1  2847					     cseg	     ;
   2848				     dtos    equ     drop
   2849
   2850				     ;	     NEGATE  ( n1 -- n2	)
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 51
kernel.asm



   2851
   2852					     hdr     1,'NEGATE'
1  2853					     cseg
1  2854	03D5			     heads   segment public	     ;
1  2855	03D5  06			     db	     ??00F0	     ;
1  2856	03D6  4E 45 47 41 54 45		     db	     'NEGATE'		     ;
1  2857	03DC  03CD			     dw	     lastl	     ;
1  2858	03DE  0749r			     dw	     cfadr	     ;
1  2859	03E0			     heads   ends
1  2860					     cseg	     ;
   2861	0749  58		     negat:  pop     ax
   2862	074A  F7 D8			     neg     ax
   2863	074C  50			     push    ax
   2864					     nextt
1  2865	074D  AD			     lodsw
1  2866	074E  FF E0			     jmp     ax
   2867
   2868				     ;	     ABS  ( n -- +n )
   2869
   2870					     hdr     1,'ABS'
1  2871					     cseg
1  2872	03E0			     heads   segment public	     ;
1  2873	03E0  03			     db	     ??00F2	     ;
1  2874	03E1  41 42 53			     db	     'ABS'	     ;
1  2875	03E4  03D5			     dw	     lastl	     ;
1  2876	03E6  0750r			     dw	     cfadr	     ;
1  2877	03E8			     heads   ends
1  2878					     cseg	     ;
   2879	0750  58		     abss:   pop     ax
   2880	0751  99			     cwd
   2881	0752  33 C2			     xor     ax,dx
   2882	0754  2B C2			     sub     ax,dx
   2883	0756  E9 FA60			     jmp     apush
   2884
   2885				     ;	     DNEGATE  (	d1 -- d2 )
   2886
   2887					     hdr     1,'DNEGATE'
1  2888					     cseg
1  2889	03E8			     heads   segment public	     ;
1  2890	03E8  07			     db	     ??00F4	     ;
1  2891	03E9  44 4E 45 47 41 54	45	     db	     'DNEGATE'		     ;
1  2892	03F0  03E0			     dw	     lastl	     ;
1  2893	03F2  0759r			     dw	     cfadr	     ;
1  2894	03F4			     heads   ends
1  2895					     cseg	     ;
   2896	0759  58		     dneg:   pop     ax
   2897	075A  5A		     dneg1:  pop     dx
   2898	075B  F7 D8			     neg     ax
   2899	075D  F7 DA			     neg     dx
   2900	075F  1D 0000			     sbb     ax,0
   2901	0762  E9 FA53			     jmp     dpush
   2902
   2903				     ;	     DABS  ( d -- +d )
   2904
   2905					     hdr     1,'DABS'
1  2906					     cseg
1  2907	03F4			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 52
kernel.asm



1  2908	03F4  04			     db	     ??00F6	     ;
1  2909	03F5  44 41 42 53		     db	     'DABS'	     ;
1  2910	03F9  03E8			     dw	     lastl	     ;
1  2911	03FB  0765r			     dw	     cfadr	     ;
1  2912	03FD			     heads   ends
1  2913					     cseg	     ;
   2914	0765  58		     dabs:   pop     ax
   2915	0766  0B C0			     or	     ax,ax
   2916	0768  78 F0			     js	     dneg1
   2917	076A  E9 FA4C			     jmp     apush
   2918
   2919				     ;	     +	( x1 x2	-- x3 )
   2920
   2921					     hdr     1,'+'
1  2922					     cseg
1  2923	03FD			     heads   segment public	     ;
1  2924	03FD  01			     db	     ??00F8	     ;
1  2925	03FE  2B			     db	     '+'	     ;
1  2926	03FF  03F4			     dw	     lastl	     ;
1  2927	0401  076Dr			     dw	     cfadr	     ;
1  2928	0403			     heads   ends
1  2929					     cseg	     ;
   2930	076D  58		     plus:   pop     ax
   2931	076E  5B			     pop     bx
   2932	076F  03 C3			     add     ax,bx
   2933	0771  50			     push    ax
   2934					     nextt
1  2935	0772  AD			     lodsw
1  2936	0773  FF E0			     jmp     ax
   2937
   2938				     ;	     -	( x1 x2	-- x3 )
   2939
   2940					     hdr     1,'-'
1  2941					     cseg
1  2942	0403			     heads   segment public	     ;
1  2943	0403  01			     db	     ??00FA	     ;
1  2944	0404  2D			     db	     '-'	     ;
1  2945	0405  03FD			     dw	     lastl	     ;
1  2946	0407  0775r			     dw	     cfadr	     ;
1  2947	0409			     heads   ends
1  2948					     cseg	     ;
   2949	0775  5A		     subb:   pop     dx
   2950	0776  58			     pop     ax
   2951	0777  2B C2			     sub     ax,dx
   2952	0779  50			     push    ax
   2953					     nextt
1  2954	077A  AD			     lodsw
1  2955	077B  FF E0			     jmp     ax
   2956
   2957				     ;	     M+	 ( xd1 n -- xd2	)    s>d d+
   2958
   2959					     hdr     1,'M+'
1  2960					     cseg
1  2961	0409			     heads   segment public	     ;
1  2962	0409  02			     db	     ??00FC	     ;
1  2963	040A  4D 2B			     db	     'M+'	     ;
1  2964	040C  0403			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 53
kernel.asm



1  2965	040E  077Dr			     dw	     cfadr	     ;
1  2966	0410			     heads   ends
1  2967					     cseg	     ;
   2968	077D  58		     mplus:  pop     ax
   2969	077E  99			     cwd
   2970					     ignore2
1  2971	077F  A9			     db	     0a9h    ;
   2972
   2973				     ;	     D+	 ( xd1 xd2 -- xd3 )
   2974
   2975					     hdr     1,'D+'
1  2976					     cseg
1  2977	0410			     heads   segment public	     ;
1  2978	0410  02			     db	     ??00FE	     ;
1  2979	0411  44 2B			     db	     'D+'	     ;
1  2980	0413  0409			     dw	     lastl	     ;
1  2981	0415  0780r			     dw	     cfadr	     ;
1  2982	0417			     heads   ends
1  2983					     cseg	     ;
   2984	0780  5A		     dplus:  pop     dx
   2985	0781  58			     pop     ax
   2986	0782  8B DC			     mov     bx,sp
   2987	0784  01 47 02			     add     [bx+cw],ax
   2988	0787  11 17			     adc     [bx],dx
   2989					     nextt
1  2990	0789  AD			     lodsw
1  2991	078A  FF E0			     jmp     ax
   2992
   2993				     ;	     D-	 ( xd1 xd2 -- xd3 )  dnegate d+
   2994
   2995					     hdr     1,'D-'
1  2996					     cseg
1  2997	0417			     heads   segment public	     ;
1  2998	0417  02			     db	     ??0100	     ;
1  2999	0418  44 2D			     db	     'D-'	     ;
1  3000	041A  0410			     dw	     lastl	     ;
1  3001	041C  078Cr			     dw	     cfadr	     ;
1  3002	041E			     heads   ends
1  3003					     cseg	     ;
   3004	078C  5A		     dsub:   pop     dx
   3005	078D  58			     pop     ax
   3006	078E  8B DC			     mov     bx,sp
   3007	0790  29 47 02			     sub     [bx+cw],ax
   3008	0793  19 17			     sbb     [bx],dx
   3009					     nextt
1  3010	0795  AD			     lodsw
1  3011	0796  FF E0			     jmp     ax
   3012
   3013				     ;	     1+	 ( x1 -- x2 )
   3014
   3015					     hdr     1,'1+'
1  3016					     cseg
1  3017	041E			     heads   segment public	     ;
1  3018	041E  02			     db	     ??0102	     ;
1  3019	041F  31 2B			     db	     '1+'	     ;
1  3020	0421  0417			     dw	     lastl	     ;
1  3021	0423  0798r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 54
kernel.asm



1  3022	0425			     heads   ends
1  3023					     cseg	     ;
   3024	0798  58		     onep:   pop     ax
   3025	0799  40			     inc     ax
   3026	079A  50			     push    ax
   3027					     nextt
1  3028	079B  AD			     lodsw
1  3029	079C  FF E0			     jmp     ax
   3030
   3031				     ;	     2+	 ( x1 -- x2 )
   3032
   3033					     hdr     1,'2+'
1  3034					     cseg
1  3035	0425			     heads   segment public	     ;
1  3036	0425  02			     db	     ??0104	     ;
1  3037	0426  32 2B			     db	     '2+'	     ;
1  3038	0428  041E			     dw	     lastl	     ;
1  3039	042A  079Er			     dw	     cfadr	     ;
1  3040	042C			     heads   ends
1  3041					     cseg	     ;
   3042	079E  58		     twop:   pop     ax
   3043	079F  05 0002			     add     ax,2
   3044	07A2  50			     push    ax
   3045					     nextt
1  3046	07A3  AD			     lodsw
1  3047	07A4  FF E0			     jmp     ax
   3048
   3049				     ;	     1-	 ( x1 -- x2 )
   3050
   3051					     hdr     1,'1-'
1  3052					     cseg
1  3053	042C			     heads   segment public	     ;
1  3054	042C  02			     db	     ??0106	     ;
1  3055	042D  31 2D			     db	     '1-'	     ;
1  3056	042F  0425			     dw	     lastl	     ;
1  3057	0431  07A6r			     dw	     cfadr	     ;
1  3058	0433			     heads   ends
1  3059					     cseg	     ;
   3060	07A6  58		     onem:   pop     ax
   3061	07A7  48			     dec     ax
   3062	07A8  50			     push    ax
   3063					     nextt
1  3064	07A9  AD			     lodsw
1  3065	07AA  FF E0			     jmp     ax
   3066
   3067				     ;	     2-	 ( x1 -- x2 )
   3068
   3069					     hdr     1,'2-'
1  3070					     cseg
1  3071	0433			     heads   segment public	     ;
1  3072	0433  02			     db	     ??0108	     ;
1  3073	0434  32 2D			     db	     '2-'	     ;
1  3074	0436  042C			     dw	     lastl	     ;
1  3075	0438  07ACr			     dw	     cfadr	     ;
1  3076	043A			     heads   ends
1  3077					     cseg	     ;
   3078	07AC  58		     twom:   pop     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 55
kernel.asm



   3079	07AD  2D 0002			     sub     ax,2
   3080	07B0  50			     push    ax
   3081					     nextt
1  3082	07B1  AD			     lodsw
1  3083	07B2  FF E0			     jmp     ax
   3084
   3085				     ;	     UM*  ( u1 u2 -- ud	)
   3086
   3087					     hdr     1,'UM*'
1  3088					     cseg
1  3089	043A			     heads   segment public	     ;
1  3090	043A  03			     db	     ??010A	     ;
1  3091	043B  55 4D 2A			     db	     'UM*'	     ;
1  3092	043E  0433			     dw	     lastl	     ;
1  3093	0440  07B4r			     dw	     cfadr	     ;
1  3094	0442			     heads   ends
1  3095					     cseg	     ;
   3096	07B4  58		     umstr:  pop     ax
   3097	07B5  5B			     pop     bx
   3098	07B6  F7 E3			     mul     bx
   3099	07B8  50			     push    ax
   3100	07B9  52			     push    dx
   3101					     nextt
1  3102	07BA  AD			     lodsw
1  3103	07BB  FF E0			     jmp     ax
   3104
   3105				     ;	     M*	 ( n1 n2 -- d )
   3106
   3107					     hdr     1,'M*'
1  3108					     cseg
1  3109	0442			     heads   segment public	     ;
1  3110	0442  02			     db	     ??010C	     ;
1  3111	0443  4D 2A			     db	     'M*'	     ;
1  3112	0445  043A			     dw	     lastl	     ;
1  3113	0447  07BDr			     dw	     cfadr	     ;
1  3114	0449			     heads   ends
1  3115					     cseg	     ;
   3116	07BD  58		     mstar:  pop     ax
   3117	07BE  5B			     pop     bx
   3118	07BF  F7 EB			     imul    bx
   3119	07C1  50			     push    ax
   3120	07C2  52			     push    dx
   3121					     nextt
1  3122	07C3  AD			     lodsw
1  3123	07C4  FF E0			     jmp     ax
   3124
   3125				     ;	     *	( x1 x2	-- x3 )	     um* drop
   3126
   3127					     hdr     1,'*'
1  3128					     cseg
1  3129	0449			     heads   segment public	     ;
1  3130	0449  01			     db	     ??010E	     ;
1  3131	044A  2A			     db	     '*'	     ;
1  3132	044B  0442			     dw	     lastl	     ;
1  3133	044D  07C6r			     dw	     cfadr	     ;
1  3134	044F			     heads   ends
1  3135					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 56
kernel.asm



   3136	07C6  58		     star:   pop     ax
   3137	07C7  5B			     pop     bx
   3138	07C8  F7 E3			     mul     bx
   3139	07CA  50			     push    ax
   3140					     nextt
1  3141	07CB  AD			     lodsw
1  3142	07CC  FF E0			     jmp     ax
   3143
   3144				     ;	     UM/MOD  ( ud u1 --	u2 u3 )
   3145
   3146					     hdr     1,'UM/MOD'
1  3147					     cseg
1  3148	044F			     heads   segment public	     ;
1  3149	044F  06			     db	     ??0110	     ;
1  3150	0450  55 4D 2F 4D 4F 44		     db	     'UM/MOD'		     ;
1  3151	0456  0449			     dw	     lastl	     ;
1  3152	0458  07CEr			     dw	     cfadr	     ;
1  3153	045A			     heads   ends
1  3154					     cseg	     ;
   3155	07CE  5B		     umslm:  pop     bx
   3156	07CF  5A			     pop     dx
   3157	07D0  58			     pop     ax
   3158	07D1  3B D3			     cmp     dx,bx	     ; divide zero or overflow
   3159	07D3  73 33			     jnc     cverr
   3160	07D5  F7 F3			     div     bx
   3161	07D7  52			     push    dx
   3162	07D8  50			     push    ax
   3163					     nextt
1  3164	07D9  AD			     lodsw
1  3165	07DA  FF E0			     jmp     ax
   3166
   3167				     ;	     Signed 32/16 divide
   3168				     ;
   3169				     ;	     entry   DX:AX = dividend, BX = divisor
   3170				     ;	     exit    AX	= quotient, DX = remainder
   3171
   3172					     cseg
   3173
   3174	07DC  8B FA		     msm:    mov     di,dx
   3175	07DE  8B CB			     mov     cx,bx
   3176	07E0  0B D2			     or	     dx,dx
   3177	07E2  79 06			     jns     msm1
   3178	07E4  2B D2			     sub     dx,dx
   3179	07E6  F7 D8			     neg     ax
   3180	07E8  1B D7			     sbb     dx,di
   3181	07EA  0B DB		     msm1:   or	     bx,bx
   3182	07EC  79 02			     jns     msm2
   3183	07EE  F7 DB			     neg     bx
   3184	07F0  3B D3		     msm2:   cmp     dx,bx	     ; overflow?
   3185	07F2  73 13			     jnc     cverr0
   3186	07F4  F7 F3			     div     bx
   3187	07F6  0B FF			     or	     di,di	     ; sign remainder
   3188	07F8  79 02			     jns     msm3
   3189	07FA  F7 DA			     neg     dx
   3190	07FC  33 F9		     msm3:   xor     di,cx	     ; sign quotient
   3191	07FE  79 03			     jns     msm4
   3192	0800  F7 D8			     neg     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 57
kernel.asm



   3193	0802  C3			     ret
   3194
   3195	0803  5F		     msm4:   pop     di		     ; discard return
   3196	0804  E9 F9B1			     jmp     dpush
   3197
   3198				     ;	     math or conversion	error -	set regs to -1
   3199
   3200	0807  58		     cverr0: pop     ax
   3201	0808  B8 FFFF		     cverr:  mov     ax,-1
   3202	080B  99			     cwd
   3203	080C  E9 F9A9			     jmp     dpush
   3204
   3205				     ;	     SM/REM  ( d n1 -- n2 n3 )
   3206
   3207					     hdr     1,'SM/REM'
1  3208					     cseg
1  3209	045A			     heads   segment public	     ;
1  3210	045A  06			     db	     ??0112	     ;
1  3211	045B  53 4D 2F 52 45 4D		     db	     'SM/REM'		     ;
1  3212	0461  044F			     dw	     lastl	     ;
1  3213	0463  080Fr			     dw	     cfadr	     ;
1  3214	0465			     heads   ends
1  3215					     cseg	     ;
   3216	080F  5B		     smrem:  pop     bx
   3217	0810  5A			     pop     dx
   3218	0811  58			     pop     ax
   3219	0812  E8 FFC7		     smrem1: call    msm
   3220	0815  E9 F9A0			     jmp     dpush
   3221
   3222				     ;	     FM/MOD  ( d n1 -- n2 n3 )
   3223
   3224					     hdr     1,'FM/MOD'
1  3225					     cseg
1  3226	0465			     heads   segment public	     ;
1  3227	0465  06			     db	     ??0114	     ;
1  3228	0466  46 4D 2F 4D 4F 44		     db	     'FM/MOD'		     ;
1  3229	046C  045A			     dw	     lastl	     ;
1  3230	046E  0818r			     dw	     cfadr	     ;
1  3231	0470			     heads   ends
1  3232					     cseg	     ;
   3233	0818  5B		     fmmod:  pop     bx
   3234	0819  5A			     pop     dx
   3235	081A  58			     pop     ax
   3236	081B  E8 FFBE		     fmmod1: call    msm
   3237	081E  0B D2			     or	     dx,dx	     ; floor
   3238	0820  74 07			     jz	     fmmod2
   3239	0822  48			     dec     ax
   3240	0823  03 D1			     add     dx,cx
   3241	0825  33 F8			     xor     di,ax	     ; overflow?
   3242	0827  78 DF			     js	     cverr
   3243	0829  E9 F98C		     fmmod2: jmp     dpush
   3244
   3245				     ;	     */MOD  ( n1 n2 n3 -- n4 n5	)    >r	m* r> sm/rem
   3246
   3247					     hdr     1,'*/MOD'
1  3248					     cseg
1  3249	0470			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 58
kernel.asm



1  3250	0470  05			     db	     ??0116	     ;
1  3251	0471  2A 2F 4D 4F 44		     db	     '*/MOD'	     ;
1  3252	0476  0465			     dw	     lastl	     ;
1  3253	0478  082Cr			     dw	     cfadr	     ;
1  3254	047A			     heads   ends
1  3255					     cseg	     ;
   3256	082C  5B		     ssmod:  pop     bx
   3257	082D  58			     pop     ax
   3258	082E  59			     pop     cx
   3259	082F  F7 E9			     imul    cx
   3260	0831  EB DF			     jmp     smrem1
   3261
   3262				     ;	     */	 ( n1 n2 n3 -- n4 )	     */mod nip
   3263
   3264					     hdr     1,'*/'
1  3265					     cseg
1  3266	047A			     heads   segment public	     ;
1  3267	047A  02			     db	     ??0118	     ;
1  3268	047B  2A 2F			     db	     '*/'	     ;
1  3269	047D  0470			     dw	     lastl	     ;
1  3270	047F  0833r			     dw	     cfadr	     ;
1  3271	0481			     heads   ends
1  3272					     cseg	     ;
   3273	0833  E8 FA3F		     ssla:   call    docol
   3274	0836  082Cr 0362r		     dw	     ssmod,nip
   3275	083A  0289r			     dw	     exit
   3276
   3277				     ;	     /MOD  ( n1	n2 -- n3 n4 )	     >r	s>d r> sm/rem
   3278
   3279					     hdr     1,'/MOD'
1  3280					     cseg
1  3281	0481			     heads   segment public	     ;
1  3282	0481  04			     db	     ??011A	     ;
1  3283	0482  2F 4D 4F 44		     db	     '/MOD'	     ;
1  3284	0486  047A			     dw	     lastl	     ;
1  3285	0488  083Cr			     dw	     cfadr	     ;
1  3286	048A			     heads   ends
1  3287					     cseg	     ;
   3288	083C  5B		     slmod:  pop     bx
   3289	083D  58			     pop     ax
   3290	083E  99			     cwd
   3291	083F  EB D1			     jmp     smrem1
   3292
   3293				     ;	     /	( n1 n2	-- n3 )		     /mod nip
   3294
   3295					     hdr     1,'/'
1  3296					     cseg
1  3297	048A			     heads   segment public	     ;
1  3298	048A  01			     db	     ??011C	     ;
1  3299	048B  2F			     db	     '/'	     ;
1  3300	048C  0481			     dw	     lastl	     ;
1  3301	048E  0841r			     dw	     cfadr	     ;
1  3302	0490			     heads   ends
1  3303					     cseg	     ;
   3304	0841  E8 FA31		     slash:  call    docol
   3305	0844  083Cr 0362r		     dw	     slmod,nip
   3306	0848  0289r			     dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 59
kernel.asm



   3307
   3308				     ;	     MOD  ( n1 n2 -- n3	)	     /mod drop
   3309
   3310					     hdr     1,'MOD'
1  3311					     cseg
1  3312	0490			     heads   segment public	     ;
1  3313	0490  03			     db	     ??011E	     ;
1  3314	0491  4D 4F 44			     db	     'MOD'	     ;
1  3315	0494  048A			     dw	     lastl	     ;
1  3316	0496  084Ar			     dw	     cfadr	     ;
1  3317	0498			     heads   ends
1  3318					     cseg	     ;
   3319	084A  E8 FA28		     modd:   call    docol
   3320	084D  083Cr 02FEr		     dw	     slmod,drop
   3321	0851  0289r			     dw	     exit
   3322
   3323				     ;	     M*/  ( d1 n1 +n2 -- d2 )	     >r	2dup xor swap abs >r -rot dabs
   3324				     ;					     swap r@ um* rot r>	um* rot	0 d+ r@
   3325				     ;					     um/mod -rot r> um/mod nip swap rot
   3326				     ;					     0<	if dnegate then
   3327
   3328					     hdr     1,'M*/'	     ; ANS
1  3329					     cseg
1  3330	0498			     heads   segment public	     ;
1  3331	0498  03			     db	     ??0120	     ;
1  3332	0499  4D 2A 2F			     db	     'M*/'	     ;
1  3333	049C  0490			     dw	     lastl	     ;
1  3334	049E  0853r			     dw	     cfadr	     ;
1  3335	04A0			     heads   ends
1  3336					     cseg	     ;
   3337	0853  E8 FA1F		     mssl:   call    docol
   3338	0856  02C9r			     dw	     tor
   3339	0858  037Er 0733r		     dw	     tdup,xorr
   3340	085C  0315r 0750r 02C9r		     dw	     swap,abss,tor
   3341	0862  032Dr 0765r		     dw	     drot,dabs
   3342	0866  0315r 02DBr 07B4r		     dw	     swap,rat,umstr
   3343	086C  0324r 02D2r 07B4r		     dw	     rot,fromr,umstr
   3344	0872  0324r 0F79r 0780r		     dw	     rot,zero,dplus
   3345	0878  02DBr 07CEr		     dw	     rat,umslm
   3346	087C  032Dr 02D2r		     dw	     drot,fromr
   3347	0880  07CEr 0362r		     dw	     umslm,nip
   3348	0884  0315r 0324r 0654r		     dw	     swap,rot,zless
   3349	088A  0A92r 0890r		     dw	     zbran,mssl1
   3350	088E  0759r			     dw	     dneg
   3351	0890  0289r		     mssl1   dw	     exit
   3352
   3353				     ;	     2*	 ( x1 -- x2 )
   3354
   3355					     hdr     1,'2*'
1  3356					     cseg
1  3357	04A0			     heads   segment public	     ;
1  3358	04A0  02			     db	     ??0122	     ;
1  3359	04A1  32 2A			     db	     '2*'	     ;
1  3360	04A3  0498			     dw	     lastl	     ;
1  3361	04A5  0892r			     dw	     cfadr	     ;
1  3362	04A7			     heads   ends
1  3363					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 60
kernel.asm



   3364	0892  58		     tstar:  pop     ax
   3365	0893  D1 E0			     shl     ax,1
   3366	0895  50			     push    ax
   3367					     nextt
1  3368	0896  AD			     lodsw
1  3369	0897  FF E0			     jmp     ax
   3370
   3371				     ;	     2/	 ( n1 -- n2 )
   3372
   3373					     hdr     1,'2/'
1  3374					     cseg
1  3375	04A7			     heads   segment public	     ;
1  3376	04A7  02			     db	     ??0124	     ;
1  3377	04A8  32 2F			     db	     '2/'	     ;
1  3378	04AA  04A0			     dw	     lastl	     ;
1  3379	04AC  0899r			     dw	     cfadr	     ;
1  3380	04AE			     heads   ends
1  3381					     cseg	     ;
   3382	0899  58		     twodiv: pop     ax
   3383	089A  D1 F8			     sar     ax,1
   3384	089C  50			     push    ax
   3385					     nextt
1  3386	089D  AD			     lodsw
1  3387	089E  FF E0			     jmp     ax
   3388
   3389				     ;	     U2/  ( u1 -- u2 )
   3390
   3391					     hdr     1,'U2/'
1  3392					     cseg
1  3393	04AE			     heads   segment public	     ;
1  3394	04AE  03			     db	     ??0126	     ;
1  3395	04AF  55 32 2F			     db	     'U2/'	     ;
1  3396	04B2  04A7			     dw	     lastl	     ;
1  3397	04B4  08A0r			     dw	     cfadr	     ;
1  3398	04B6			     heads   ends
1  3399					     cseg	     ;
   3400	08A0  58		     utdiv:  pop     ax
   3401	08A1  D1 E8			     shr     ax,1
   3402	08A3  50			     push    ax
   3403					     nextt
1  3404	08A4  AD			     lodsw
1  3405	08A5  FF E0			     jmp     ax
   3406
   3407				     ;	     D2*  ( xd1	-- xd2 )
   3408
   3409					     hdr     1,'D2*'
1  3410					     cseg
1  3411	04B6			     heads   segment public	     ;
1  3412	04B6  03			     db	     ??0128	     ;
1  3413	04B7  44 32 2A			     db	     'D2*'	     ;
1  3414	04BA  04AE			     dw	     lastl	     ;
1  3415	04BC  08A7r			     dw	     cfadr	     ;
1  3416	04BE			     heads   ends
1  3417					     cseg	     ;
   3418	08A7  58		     dtstr:  pop     ax
   3419	08A8  5A			     pop     dx
   3420	08A9  D1 E2			     shl     dx,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 61
kernel.asm



   3421	08AB  D1 D0			     rcl     ax,1
   3422	08AD  E9 F908			     jmp     dpush
   3423
   3424				     ;	     D2/  ( d1 -- d2 )
   3425
   3426					     hdr     1,'D2/'
1  3427					     cseg
1  3428	04BE			     heads   segment public	     ;
1  3429	04BE  03			     db	     ??012A	     ;
1  3430	04BF  44 32 2F			     db	     'D2/'	     ;
1  3431	04C2  04B6			     dw	     lastl	     ;
1  3432	04C4  08B0r			     dw	     cfadr	     ;
1  3433	04C6			     heads   ends
1  3434					     cseg	     ;
   3435	08B0  58		     dtdiv:  pop     ax
   3436	08B1  5A			     pop     dx
   3437	08B2  D1 F8			     sar     ax,1
   3438	08B4  D1 DA			     rcr     dx,1
   3439	08B6  E9 F8FF			     jmp     dpush
   3440
   3441				     ;	     LSHIFT  ( x1 u -- x2 )
   3442
   3443					     hdr     1,'LSHIFT'
1  3444					     cseg
1  3445	04C6			     heads   segment public	     ;
1  3446	04C6  06			     db	     ??012C	     ;
1  3447	04C7  4C 53 48 49 46 54		     db	     'LSHIFT'		     ;
1  3448	04CD  04BE			     dw	     lastl	     ;
1  3449	04CF  08B9r			     dw	     cfadr	     ;
1  3450	04D1			     heads   ends
1  3451					     cseg	     ;
   3452	08B9  59		     lsh:    pop     cx
   3453	08BA  58			     pop     ax
   3454	08BB  D3 E0			     shl     ax,cl
   3455	08BD  50			     push    ax
   3456					     nextt
1  3457	08BE  AD			     lodsw
1  3458	08BF  FF E0			     jmp     ax
   3459
   3460				     ;	     RSHIFT  ( x1 u -- x2 )
   3461
   3462					     hdr     1,'RSHIFT'
1  3463					     cseg
1  3464	04D1			     heads   segment public	     ;
1  3465	04D1  06			     db	     ??012E	     ;
1  3466	04D2  52 53 48 49 46 54		     db	     'RSHIFT'		     ;
1  3467	04D8  04C6			     dw	     lastl	     ;
1  3468	04DA  08C1r			     dw	     cfadr	     ;
1  3469	04DC			     heads   ends
1  3470					     cseg	     ;
   3471	08C1  59		     rsh:    pop     cx
   3472	08C2  58			     pop     ax
   3473	08C3  D3 E8			     shr     ax,cl
   3474	08C5  50			     push    ax
   3475					     nextt
1  3476	08C6  AD			     lodsw
1  3477	08C7  FF E0			     jmp     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 62
kernel.asm



   3478
   3479				     ;
   3480				     ;	     Numeric Conversion
   3481				     ;
   3482				     ;	!base  DECIMAL	HEX  BINARY  digit  >NUMBER  /SIGN  /NUMBER
   3483				     ;	NUMBER?	 <#  #>	 +hold	#  HOLD	 SIGN  #S  SHOLD  NHOLD
   3484				     ;	decimal?
   3485				     ;
   3486
   3487				     ;	     !base  ( adr -- )	     c@	base !
   3488
   3489					     hdr     x,'!BASE'
1  3490					     cseg	     ;
   3491	08C9  E8 F9A9		     stobas: call    docol
   3492	08CC  03DEr			     dw	     cat
   3493	08CE  0FF9r 03D8r		     dw	     base,store
   3494	08D2  0289r			     dw	     exit
   3495
   3496				     ;	     DECIMAL  (	-- )	     ' !base build DECIMAL 10 c,
   3497
   3498					     hdr     1,'DECIMAL'
1  3499					     cseg
1  3500	04DC			     heads   segment public	     ;
1  3501	04DC  07			     db	     ??0132	     ;
1  3502	04DD  44 45 43 49 4D 41	4C	     db	     'DECIMAL'		     ;
1  3503	04E4  04D1			     dw	     lastl	     ;
1  3504	04E6  08D4r			     dw	     cfadr	     ;
1  3505	04E8			     heads   ends
1  3506					     cseg	     ;
   3507	08D4  E8 FFF2		     decim:  call    stobas
   3508	08D7  0A			     db	     10
   3509
   3510				     ;	     HEX  ( -- )	     ' !base build HEX 16 c,
   3511
   3512					     hdr     1,'HEX'
1  3513					     cseg
1  3514	04E8			     heads   segment public	     ;
1  3515	04E8  03			     db	     ??0134	     ;
1  3516	04E9  48 45 58			     db	     'HEX'	     ;
1  3517	04EC  04DC			     dw	     lastl	     ;
1  3518	04EE  08D8r			     dw	     cfadr	     ;
1  3519	04F0			     heads   ends
1  3520					     cseg	     ;
   3521	08D8  E8 FFEE		     hex:    call    stobas
   3522	08DB  10			     db	     16
   3523
   3524				     ;	     BINARY  ( -- )	     ' !base build BINARY 2 c,
   3525
   3526					     hdr     1,'BINARY'
1  3527					     cseg
1  3528	04F0			     heads   segment public	     ;
1  3529	04F0  06			     db	     ??0136	     ;
1  3530	04F1  42 49 4E 41 52 59		     db	     'BINARY'		     ;
1  3531	04F7  04E8			     dw	     lastl	     ;
1  3532	04F9  08DCr			     dw	     cfadr	     ;
1  3533	04FB			     heads   ends
1  3534					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 63
kernel.asm



   3535	08DC  E8 FFEA		     bin:    call    stobas
   3536	08DF  02			     db	     2
   3537
   3538				     ;	     digit  ( char base	-- u true | false )
   3539
   3540					     hdr     x,'DIGIT'
1  3541					     cseg	     ;
   3542	08E0  5A		     digit:  pop     dx
   3543	08E1  58			     pop     ax
   3544	08E2  E8 F94A			     call    upc	     ; make uppercase
   3545	08E5  2C 30			     sub     al,'0'
   3546	08E7  72 14			     jc	     digit2
   3547	08E9  3C 0A			     cmp     al,10
   3548	08EB  72 06			     jc	     digit1
   3549	08ED  2C 07			     sub     al,7
   3550	08EF  3C 0A			     cmp     al,10
   3551	08F1  72 0A			     jc	     digit2
   3552	08F3  3A C2		     digit1: cmp     al,dl
   3553	08F5  73 06			     jnc     digit2
   3554	08F7  2A E4			     sub     ah,ah
   3555	08F9  50			     push    ax
   3556	08FA  E9 0675			     jmp     true
   3557
   3558	08FD  E9 0679		     digit2: jmp     false
   3559
   3560				     ;	     >NUMBER  (	ud1 addr1 u1 --	ud2 addr2 u2 )
   3561				     ;				     begin dup while c/string base @ digit while
   3562				     ;				     >r	2swap r> swap base @ um* drop rot base @
   3563				     ;				     um* d+ 2swap 1 dpl	+! repeat -1 /string then
   3564
   3565					     hdr     1,'>NUMBER'
1  3566					     cseg
1  3567	04FB			     heads   segment public	     ;
1  3568	04FB  07			     db	     ??013A	     ;
1  3569	04FC  3E 4E 55 4D 42 45	52	     db	     '>NUMBER'		     ;
1  3570	0503  04F0			     dw	     lastl	     ;
1  3571	0505  0900r			     dw	     cfadr	     ;
1  3572	0507			     heads   ends
1  3573					     cseg	     ;
   3574	0900  E8 F972		     tonum:  call    docol
   3575	0903  0304r		     tonum1  dw	     dupp	     ; begin
   3576	0905  0A92r 093Fr		     dw	     zbran,tonum3    ; while
   3577	0909  0543r			     dw	     csst
   3578	090B  0FF9r 03D2r		     dw	     base,at
   3579	090F  08E0r			     dw	     digit
   3580	0911  0A92r 093Br		     dw	     zbran,tonum2    ; while
   3581	0915  02C9r			     dw	     tor
   3582	0917  0388r 02D2r		     dw	     tswap,fromr
   3583	091B  0315r			     dw	     swap
   3584	091D  0FF9r 03D2r		     dw	     base,at
   3585	0921  07B4r 02FEr		     dw	     umstr,drop
   3586	0925  0324r			     dw	     rot
   3587	0927  0FF9r 03D2r		     dw	     base,at
   3588	092B  07B4r			     dw	     umstr
   3589	092D  0780r			     dw	     dplus
   3590	092F  0388r			     dw	     tswap
   3591	0931  0F7Fr 1003r 044Cr		     dw	     one,dpl,pstor
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 64
kernel.asm



   3592	0937  0A8Dr 0903r		     dw	     bran,tonum1     ; repeat
   3593	093B  0F72r 0538r	     tonum2  dw	     true,sstr
   3594	093F  0289r		     tonum3  dw	     exit	     ; then
   3595
   3596				     ;	     /SIGN  ( a	u -- a'	u' flag	)
   3597
   3598					     hdr     1,'/SIGN'
1  3599					     cseg
1  3600	0507			     heads   segment public	     ;
1  3601	0507  05			     db	     ??013C	     ;
1  3602	0508  2F 53 49 47 4E		     db	     '/SIGN'	     ;
1  3603	050D  04FB			     dw	     lastl	     ;
1  3604	050F  0941r			     dw	     cfadr	     ;
1  3605	0511			     heads   ends
1  3606					     cseg	     ;
   3607	0941  59		     ssgn:   pop     cx
   3608	0942  5B			     pop     bx
   3609	0943  2B D2			     sub     dx,dx
   3610	0945  E3 0D			     jcxz    ssgn2
   3611	0947  8A 07			     mov     al,[bx]
   3612	0949  3C 2B			     cmp     al,'+'
   3613	094B  74 05			     jz	     ssgn1
   3614	094D  3C 2D			     cmp     al,'-'
   3615	094F  75 03			     jnz     ssgn2
   3616	0951  4A			     dec     dx
   3617	0952  43		     ssgn1:  inc     bx
   3618	0953  49			     dec     cx
   3619	0954  53		     ssgn2:  push    bx
   3620	0955  51			     push    cx
   3621	0956  52			     push    dx
   3622					     nextt
1  3623	0957  AD			     lodsw
1  3624	0958  FF E0			     jmp     ax
   3625
   3626				     ;	     /NUMBER  (	addr u -- addr2	u2 d|ud	)    /sign >r 0	0 2swap	>number
   3627				     ;						     2swap r> if dnegate then
   3628
   3629					     hdr     1,'/NUMBER'
1  3630					     cseg
1  3631	0511			     heads   segment public	     ;
1  3632	0511  07			     db	     ??013E	     ;
1  3633	0512  2F 4E 55 4D 42 45	52	     db	     '/NUMBER'		     ;
1  3634	0519  0507			     dw	     lastl	     ;
1  3635	051B  095Ar			     dw	     cfadr	     ;
1  3636	051D			     heads   ends
1  3637					     cseg	     ;
   3638	095A  E8 F918		     snumb:  call    docol
   3639	095D  0941r 02C9r		     dw	     ssgn,tor
   3640	0961  0F79r 0F79r		     dw	     zero,zero
   3641	0965  0388r 0900r		     dw	     tswap,tonum
   3642	0969  0388r 02D2r		     dw	     tswap,fromr
   3643	096D  0A92r 0973r		     dw	     zbran,snumb1
   3644	0971  0759r			     dw	     dneg
   3645	0973  0289r		     snumb1  dw	     exit
   3646
   3647				     ;	     NUMBER?  (	c-addr u -- d|ud true |	false )
   3648				     ;				     /sign >r over c@ [char] . > and 0 0
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 65
kernel.asm



   3649				     ;				     2swap ?dup	if >number dpl on dup if
   3650				     ;				     1-	over c@	[char] . - or dpl off then
   3651				     ;				     while then	r> 2drop 2drop false end
   3652				     ;				     drop r> if	dnegate	then true
   3653
   3654					     hdr     1,'NUMBER?'
1  3655					     cseg
1  3656	051D			     heads   segment public	     ;
1  3657	051D  07			     db	     ??0140	     ;
1  3658	051E  4E 55 4D 42 45 52	3F	     db	     'NUMBER?'		     ;
1  3659	0525  0511			     dw	     lastl	     ;
1  3660	0527  0975r			     dw	     cfadr	     ;
1  3661	0529			     heads   ends
1  3662					     cseg	     ;
   3663	0975  E8 F8FD		     numq:   call    docol	     ; convert string to double	number
   3664	0978  0941r 02C9r		     dw	     ssgn,tor	     ; test for	sign
   3665	097C  031Cr 03DEr		     dw	     over,cat	     ; '.' ?
   3666	0980  02A1r			     dw	     clit
   3667	0982  2E			     db	     '.'
   3668	0983  066Cr 0723r		     dw	     great,andd
   3669	0987  0F79r 0F79r		     dw	     zero,zero
   3670	098B  0388r 030Br		     dw	     tswap,qdup
   3671	098F  0A92r 09B4r		     dw	     zbran,numq2     ; if
   3672	0993  0900r			     dw	     tonum
   3673	0995  1003r 0453r		     dw	     dpl,on
   3674	0999  0304r			     dw	     dupp
   3675	099B  0A92r 09B0r		     dw	     zbran,numq1     ; if
   3676	099F  07A6r			     dw	     onem	     ; test 1 char left	is '.'
   3677	09A1  031Cr 03DEr		     dw	     over,cat
   3678	09A5  02A1r			     dw	     clit
   3679	09A7  2E			     db	     '.'
   3680	09A8  0775r 072Br		     dw	     subb,orr
   3681	09AC  1003r 045Br		     dw	     dpl,off
   3682	09B0  0A92r 09BEr	     numq1   dw	     zbran,numq3     ; while
   3683	09B4  02D2r		     numq2   dw	     fromr	     ; fail
   3684	09B6  0378r 0378r		     dw	     tdrop,tdrop
   3685	09BA  0F79r			     dw	     false
   3686	09BC  0289r			     dw	     exit
   3687	09BE  02FEr		     numq3   dw	     drop
   3688	09C0  02D2r			     dw	     fromr
   3689	09C2  0A92r 09C8r		     dw	     zbran,numq4
   3690	09C6  0759r			     dw	     dneg
   3691	09C8  0F72r		     numq4   dw	     true
   3692	09CA  0289r			     dw	     exit
   3693
   3694				     ;	     <#	 ( -- )		     pad hld !
   3695
   3696					     hdr     1,'<#'
1  3697					     cseg
1  3698	0529			     heads   segment public	     ;
1  3699	0529  02			     db	     ??0142	     ;
1  3700	052A  3C 23			     db	     '<#'	     ;
1  3701	052C  051D			     dw	     lastl	     ;
1  3702	052E  09CCr			     dw	     cfadr	     ;
1  3703	0530			     heads   ends
1  3704					     cseg	     ;
   3705	09CC  E8 F8A6		     bdigs:  call    docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 66
kernel.asm



   3706	09CF  1115r			     dw	     pad
   3707	09D1  0FFEr 03D8r		     dw	     hld,store
   3708	09D5  0289r			     dw	     exit
   3709
   3710				     ;	     #>	 ( d --	c-addr u )   2drop hld @ pad over -
   3711
   3712					     hdr     1,'#>'
1  3713					     cseg
1  3714	0530			     heads   segment public	     ;
1  3715	0530  02			     db	     ??0144	     ;
1  3716	0531  23 3E			     db	     '#>'	     ;
1  3717	0533  0529			     dw	     lastl	     ;
1  3718	0535  09D7r			     dw	     cfadr	     ;
1  3719	0537			     heads   ends
1  3720					     cseg	     ;
   3721	09D7  E8 F89B		     edigs:  call    docol
   3722	09DA  0378r			     dw	     tdrop
   3723	09DC  0FFEr 03D2r		     dw	     hld,at
   3724	09E0  1115r			     dw	     pad
   3725	09E2  031Cr			     dw	     over
   3726	09E4  0775r			     dw	     subb
   3727	09E6  0289r			     dw	     exit
   3728
   3729				     ;	     +hold  ( +n -- c-addr ) negate hld	tuck +!	@ dup dp @ u<
   3730				     ;				     abort" HOLD buffer	overflow"
   3731
   3732					     hdr     x,'+HOLD'
1  3733					     cseg	     ;
   3734	09E8  E8 F88A		     phld:   call    docol
   3735	09EB  0749r			     dw	     negat
   3736	09ED  0FFEr 036Ar		     dw	     hld,tuck
   3737	09F1  044Cr			     dw	     pstor
   3738	09F3  03D2r 0304r		     dw	     at,dupp
   3739	09F7  0FEAr 03D2r 0670r		     dw	     dpp,at,uless
   3740	09FD  1271r			     dw	     pabq
   3741					     dcs     'HOLD buffer overflow'
1  3742	09FF  14			     db	     ??0148	     ;
1  3743	0A00  48 4F 4C 44 20 62	75+  ??0149  db	     'HOLD buffer overflow'
   3744	      66 66 65 72 20 6F	76+
   3745	      65 72 66 6C 6F 77
   3746	0A14  0289r			     dw	     exit
   3747
   3748				     ;	     #	( ud1 -- ud2 )	     0 base @ um/mod >r	base @ um/mod r>
   3749				     ;				     rot dup 9 > 7 and + [char]	0 + hold
   3750
   3751					     hdr     1,'#'
1  3752					     cseg
1  3753	0537			     heads   segment public	     ;
1  3754	0537  01			     db	     ??014A	     ;
1  3755	0538  23			     db	     '#'	     ;
1  3756	0539  0530			     dw	     lastl	     ;
1  3757	053B  0A16r			     dw	     cfadr	     ;
1  3758	053D			     heads   ends
1  3759					     cseg	     ;
   3760	0A16  58		     dig:    pop     ax
   3761	0A17  5B			     pop     bx
   3762	0A18  8B 3E 0FBFr		     mov     di,upp
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 67
kernel.asm



   3763	0A1C  83 C7 18			     add     di,24	     ; BASE
   3764	0A1F  2B D2			     sub     dx,dx
   3765	0A21  F7 35			     div     word ptr [di]
   3766	0A23  93			     xchg    ax,bx
   3767	0A24  F7 35			     div     word ptr [di]
   3768	0A26  50			     push    ax
   3769	0A27  53			     push    bx
   3770	0A28  80 FA 09			     cmp     dl,9
   3771	0A2B  76 03			     jna     dig1
   3772	0A2D  80 C2 07			     add     dl,7
   3773	0A30  80 C2 30		     dig1:   add     dl,'0'
   3774	0A33  52			     push    dx
   3775				     ;	     jmp     hold
   3776
   3777				     ;	     HOLD  ( char -- )	     1 +hold c!
   3778
   3779					     hdr     1,'HOLD'
1  3780					     cseg
1  3781	053D			     heads   segment public	     ;
1  3782	053D  04			     db	     ??014C	     ;
1  3783	053E  48 4F 4C 44		     db	     'HOLD'	     ;
1  3784	0542  0537			     dw	     lastl	     ;
1  3785	0544  0A34r			     dw	     cfadr	     ;
1  3786	0546			     heads   ends
1  3787					     cseg	     ;
   3788	0A34  E8 F83E		     hold:   call    docol
   3789	0A37  0F7Fr 09E8r		     dw	     one,phld
   3790	0A3B  03E7r			     dw	     cstor
   3791	0A3D  0289r			     dw	     exit
   3792
   3793				     ;	     SIGN  ( n -- )	     0<	if [char] - hold then
   3794
   3795					     hdr     1,'SIGN'
1  3796					     cseg
1  3797	0546			     heads   segment public	     ;
1  3798	0546  04			     db	     ??014E	     ;
1  3799	0547  53 49 47 4E		     db	     'SIGN'	     ;
1  3800	054B  053D			     dw	     lastl	     ;
1  3801	054D  0A3Fr			     dw	     cfadr	     ;
1  3802	054F			     heads   ends
1  3803					     cseg	     ;
   3804	0A3F  E8 F833		     sign:   call    docol
   3805	0A42  0654r			     dw	     zless
   3806	0A44  0A92r 0A4Dr		     dw	     zbran,sign1
   3807	0A48  02A1r			     dw	     clit
   3808	0A4A  2D			     db	     '-'
   3809	0A4B  0A34r			     dw	     hold
   3810	0A4D  0289r		     sign1   dw	     exit
   3811
   3812				     ;	     #S	 ( ud -- 0 0 )	     begin # 2dup d0= until
   3813
   3814					     hdr     1,'#S'
1  3815					     cseg
1  3816	054F			     heads   segment public	     ;
1  3817	054F  02			     db	     ??0150	     ;
1  3818	0550  23 53			     db	     '#S'	     ;
1  3819	0552  0546			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 68
kernel.asm



1  3820	0554  0A4Fr			     dw	     cfadr	     ;
1  3821	0556			     heads   ends
1  3822					     cseg	     ;
   3823	0A4F  E8 F823		     digs:   call    docol
   3824	0A52  0A16r		     digs1   dw	     dig
   3825	0A54  037Er 0623r		     dw	     tdup,dzequ
   3826	0A58  0A92r 0A52r		     dw	     zbran,digs1
   3827	0A5C  0289r			     dw	     exit
   3828
   3829				     ;	     SHOLD  ( c-addr u -- )  dup +hold swap move
   3830
   3831					     hdr     1,'SHOLD'	     ; hold string
1  3832					     cseg
1  3833	0556			     heads   segment public	     ;
1  3834	0556  05			     db	     ??0152	     ;
1  3835	0557  53 48 4F 4C 44		     db	     'SHOLD'	     ;
1  3836	055C  054F			     dw	     lastl	     ;
1  3837	055E  0A5Er			     dw	     cfadr	     ;
1  3838	0560			     heads   ends
1  3839					     cseg	     ;
   3840	0A5E  E8 F814		     shold:  call    docol
   3841	0A61  0304r 09E8r		     dw	     dupp,phld
   3842	0A65  0315r 049Cr		     dw	     swap,move
   3843	0A69  0289r			     dw	     exit
   3844
   3845				     ;	     NHOLD  ( n	char --	)    over +hold	-rot fill
   3846
   3847					     hdr     1,'NHOLD'	     ; hold n characters
1  3848					     cseg
1  3849	0560			     heads   segment public	     ;
1  3850	0560  05			     db	     ??0154	     ;
1  3851	0561  4E 48 4F 4C 44		     db	     'NHOLD'	     ;
1  3852	0566  0556			     dw	     lastl	     ;
1  3853	0568  0A6Br			     dw	     cfadr	     ;
1  3854	056A			     heads   ends
1  3855					     cseg	     ;
   3856	0A6B  E8 F807		     nhold:  call    docol
   3857	0A6E  031Cr 09E8r		     dw	     over,phld
   3858	0A72  032Dr 0469r		     dw	     drot,fill
   3859	0A76  0289r			     dw	     exit
   3860
   3861				     ;	     decimal? (	-- flag	)    base @ 10 =
   3862
   3863					     hdr     x,'DECIMAL?'
1  3864					     cseg	     ;
   3865	0A78  E8 F7FA		     dcmq:   call    docol
   3866	0A7B  0FF9r 03D2r		     dw	     base,at	     ; decimal base?
   3867	0A7F  02A1r			     dw	     clit
   3868	0A81  0A			     db	     10
   3869	0A82  063Br			     dw	     equal
   3870	0A84  0289r			     dw	     exit
   3871
   3872				     ;
   3873				     ;	Control	Structures
   3874				     ;
   3875				     ;	(of)  branch  ?branch  (loop)  (+loop)	UNLOOP	(leave)	 (?do)	(do)
   3876				     ;	BAL  +bal  -bal	 ?BAL  ?depth  ?orig  ?dest  BEGIN  >MARK  <RESOLVE
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 69
kernel.asm



   3877				     ;	THEN  END  IF  AHEAD  ELSE  UNTIL  AGAIN  WHILE	 REPEAT	 lv  DO	 ?DO
   3878				     ;	I  I'  J  LEAVE	 LOOP  +LOOP  BOUNDS  CS-PICK  CS-ROLL	CS-DROP	 #cs
   3879				     ;	CS-PUSH	 CS-POP	 CS-MARK  CS-TEST  COND	 CONT  CASE  ENDCASE  OF
   3880				     ;	ENDOF  [ELSE]  [IF]  [THEN]
   3881				     ;
   3882
   3883				     ;	     (of)  ( x1	x2 -- |	x1 )
   3884
   3885					     hdr     x,'(OF)'
1  3886					     cseg	     ;
   3887	0A86  5B		     pof:    pop     bx
   3888	0A87  58			     pop     ax
   3889	0A88  3B C3			     cmp     ax,bx
   3890	0A8A  74 09			     jz	     zbran1
   3891	0A8C  50			     push    ax
   3892
   3893				     ;	     branch  ( -- )
   3894
   3895	0A8D  8B 34		     bran:   mov     si,[si]
   3896					     nextt
1  3897	0A8F  AD			     lodsw
1  3898	0A90  FF E0			     jmp     ax
   3899
   3900					     hdr     x,'BRANCH',,1,bran
1  3901					     cseg	     ;
1  3902					     aseg
   3903
   3904				     ;	     ?branch  (	flag --	)
   3905
   3906					     hdr     x,'?BRANCH'
1  3907					     cseg	     ;
   3908	0A92  59		     zbran:  pop     cx
   3909	0A93  E3 F8			     jcxz    bran
   3910	0A95  83 C6 02		     zbran1: add     si,cw
   3911					     nextt
1  3912	0A98  AD			     lodsw
1  3913	0A99  FF E0			     jmp     ax
   3914
   3915				     ;	     (loop)  ( -- )
   3916
   3917					     hdr     x,'(LOOP)'
1  3918					     cseg	     ;
   3919	0A9B  B8 0001		     xloop:  mov     ax,1
   3920					     ignore1
1  3921	0A9E  A8			     db	     0a8h    ;
   3922
   3923				     ;	     (+loop)  (	n -- )
   3924
   3925	0A9F  58		     xploo:  pop     ax
   3926	0AA0  01 46 00			     add     [bp],ax
   3927	0AA3  71 E8			     jno     bran
   3928	0AA5  83 C6 02			     add     si,cw
   3929
   3930				     ;	     UNLOOP  ( -- )
   3931
   3932	0AA8  83 C5 04		     unloo:  add     bp,cw*2
   3933					     nextt
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 70
kernel.asm



1  3934	0AAB  AD			     lodsw
1  3935	0AAC  FF E0			     jmp     ax
   3936
   3937					     hdr     x,'(+LOOP)',,1,xploo
1  3938					     cseg	     ;
1  3939					     aseg
   3940
   3941					     hdr     1,'UNLOOP',,1,unloo
1  3942					     cseg
1  3943					     aseg
1  3944	056A			     heads   segment public	     ;
1  3945	056A  06			     db	     ??0162	     ;
1  3946	056B  55 4E 4C 4F 4F 50		     db	     'UNLOOP'		     ;
1  3947	0571  0560			     dw	     lastl	     ;
1  3948	0573  0AA8r			     dw	     cfadr	     ;
1  3949	0575			     heads   ends
1  3950					     cseg	     ;
1  3951					     aseg
   3952
   3953				     ;	     (leave)  (	-- )
   3954
   3955					     hdr     x,'(LEAVE)'
1  3956					     cseg	     ;
   3957	0AAE  8B 1C		     pleav:  mov     bx,[si]
   3958	0AB0  8B 37			     mov     si,[bx]
   3959	0AB2  EB F4			     jmp     unloo
   3960
   3961				     ;	     (?do)  ( x1 x2 -- )
   3962
   3963					     hdr     x,'(?DO)'
1  3964					     cseg	     ;
   3965	0AB4  5A		     xqdo:   pop     dx
   3966	0AB5  5B			     pop     bx
   3967	0AB6  3B DA			     cmp     bx,dx
   3968	0AB8  74 D3			     jz	     bran
   3969					     ignore2
1  3970	0ABA  A9			     db	     0a9h    ;
   3971
   3972				     ;	     (do)  ( x1	x2 -- )
   3973
   3974					     hdr     x,'(DO)'
1  3975					     cseg	     ;
   3976	0ABB  5A		     xdo:    pop     dx
   3977	0ABC  5B			     pop     bx
   3978	0ABD  87 EC			     xchg    bp,sp
   3979	0ABF  81 C3 8000		     add     bx,8000h
   3980	0AC3  53			     push    bx
   3981	0AC4  2B D3			     sub     dx,bx
   3982	0AC6  52			     push    dx
   3983	0AC7  87 EC			     xchg    bp,sp
   3984	0AC9  AD			     lodsw
   3985					     nextt
1  3986	0ACA  AD			     lodsw
1  3987	0ACB  FF E0			     jmp     ax
   3988
   3989				     ;	     BAL  ( -- addr )
   3990
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 71
kernel.asm



   3991					     hdr     1,'BAL',,1
1  3992					     cseg
1  3993					     aseg
1  3994	0575			     heads   segment public	     ;
1  3995	0575  03			     db	     ??016A	     ;
1  3996	0576  42 41 4C			     db	     'BAL'	     ;
1  3997	0579  056A			     dw	     lastl	     ;
1  3998	057B  B01Br			     dw	     cfadr	     ;
1  3999	057D			     heads   ends
1  4000					     cseg	     ;
1  4001					     aseg
   4002	B01B  E8 519C		     bal:    call    docre
   4003	B01E  ????		     bal1    dw	     ?
   4004
   4005				     ;	     +bal  ( --	)		     1 bal +!
   4006
   4007					     hdr     x,'+BAL',,1
1  4008					     cseg	     ;
1  4009					     aseg
   4010	B020  FF 06 B01Er	     pbal:   inc     word ptr bal1
   4011					     nextt
1  4012	B024  AD			     lodsw
1  4013	B025  FF E0			     jmp     ax
   4014
   4015				     ;	     -bal  ( --	)		     -1	bal +!
   4016
   4017					     hdr     x,'-BAL',,1
1  4018					     cseg	     ;
1  4019					     aseg
   4020	B027  FF 0E B01Er	     dbal:   dec     word ptr bal1
   4021					     nextt
1  4022	B02B  AD			     lodsw
1  4023	B02C  FF E0			     jmp     ax
   4024
   4025				     ;	     ?BAL  ( flag -- )		     check? and
   4026				     ;					     abort" definition unbalanced"
   4027
   4028					     hdr     1,'?BAL',,1
1  4029					     cseg
1  4030					     aseg
1  4031	057D			     heads   segment public	     ;
1  4032	057D  04			     db	     ??0170	     ;
1  4033	057E  3F 42 41 4C		     db	     '?BAL'	     ;
1  4034	0582  0575			     dw	     lastl	     ;
1  4035	0584  B02Er			     dw	     cfadr	     ;
1  4036	0586			     heads   ends
1  4037					     cseg	     ;
1  4038					     aseg
   4039	B02E  E8 5244		     qbal:   call    docol
   4040	B031  B540r 0723r		     dw	     chkq,andd
   4041	B035  1271r			     dw	     pabq
   4042					     dcs     'definition unbalanced'
1  4043	B037  15			     db	     ??0172	     ;
1  4044	B038  64 65 66 69 6E 69	74+  ??0173  db	     'definition unbalanced'
   4045	      69 6F 6E 20 75 6E	62+
   4046	      61 6C 61 6E 63 65	64
   4047	B04D  0289r			     dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 72
kernel.asm



   4048
   4049				     ;	     ?depth  ( x -- x )		     ?comp depth 0= ?bal
   4050
   4051					     hdr     x,'?DEPTH',,1
1  4052					     cseg	     ;
1  4053					     aseg
   4054	B04F  E8 5223		     qdep:   call    docol
   4055	B052  B659r			     dw	     qcomp
   4056	B054  03B5r 0628r		     dw	     depth,zequ
   4057	B058  B02Er			     dw	     qbal
   4058	B05A  0289r			     dw	     exit
   4059
   4060				     ;	     ?orig  ( orig -- orig )	     ?depth dup	@ ?bal
   4061
   4062					     hdr     x,'?ORIG',,1
1  4063					     cseg	     ;
1  4064					     aseg
   4065	B05C  E8 5216		     qorig:  call    docol
   4066	B05F  B04Fr			     dw	     qdep
   4067	B061  0304r 03D2r		     dw	     dupp,at
   4068	B065  B02Er			     dw	     qbal
   4069	B067  0289r			     dw	     exit
   4070
   4071				     ;	     ?dest  ( dest -- dest )	     ?depth dup	@ 0= ?bal
   4072
   4073					     hdr     x,'?DEST',,1
1  4074					     cseg	     ;
1  4075					     aseg
   4076	B069  E8 5209		     qdest:  call    docol
   4077	B06C  B04Fr			     dw	     qdep
   4078	B06E  0304r 03D2r		     dw	     dupp,at
   4079	B072  0628r			     dw	     zequ
   4080	B074  B02Er			     dw	     qbal
   4081	B076  0289r			     dw	     exit
   4082
   4083				     ;	     BEGIN  ( -- dest )		     ?comp here	+bal ;immediate
   4084
   4085					     hdr     1,'BEGIN',1,1
1  4086					     cseg
1  4087					     aseg
1  4088	0586			     heads   segment public	     ;
1  4089	0586  45			     db	     ??017A	     ;
1  4090	0587  42 45 47 49 4E		     db	     'BEGIN'	     ;
1  4091	058C  057D			     dw	     lastl	     ;
1  4092	058E  B078r			     dw	     cfadr	     ;
1  4093	0590			     heads   ends
1  4094					     cseg	     ;
1  4095					     aseg
   4096	B078  E8 51FA		     begin:  call    docol
   4097	B07B  B659r			     dw	     qcomp
   4098	B07D  1026r			     dw	     here
   4099	B07F  B020r			     dw	     pbal
   4100	B081  0289r			     dw	     exit
   4101
   4102				     ;	     >MARK  ( -- orig )		     postpone begin 0 ,
   4103
   4104					     hdr     1,'>MARK',,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 73
kernel.asm



1  4105					     cseg
1  4106					     aseg
1  4107	0590			     heads   segment public	     ;
1  4108	0590  05			     db	     ??017C	     ;
1  4109	0591  3E 4D 41 52 4B		     db	     '>MARK'	     ;
1  4110	0596  0586			     dw	     lastl	     ;
1  4111	0598  B083r			     dw	     cfadr	     ;
1  4112	059A			     heads   ends
1  4113					     cseg	     ;
1  4114					     aseg
   4115	B083  E8 51EF		     fmark:  call    docol
   4116	B086  B078r			     dw	     begin
   4117	B088  0F79r			     dw	     zero
   4118	B08A  106Dr			     dw	     comma
   4119	B08C  0289r			     dw	     exit
   4120
   4121				     ;	     <RESOLVE  ( dest -- )	     ?dest , -bal
   4122
   4123					     hdr     1,'<RESOLVE',,1
1  4124					     cseg
1  4125					     aseg
1  4126	059A			     heads   segment public	     ;
1  4127	059A  08			     db	     ??017E	     ;
1  4128	059B  3C 52 45 53 4F 4C	56+	     db	     '<RESOLVE'		     ;
   4129	      45
1  4130	05A3  0590			     dw	     lastl	     ;
1  4131	05A5  B08Er			     dw	     cfadr	     ;
1  4132	05A7			     heads   ends
1  4133					     cseg	     ;
1  4134					     aseg
   4135	B08E  E8 51E4		     bresol: call    docol
   4136	B091  B069r			     dw	     qdest
   4137	B093  106Dr			     dw	     comma
   4138	B095  B027r			     dw	     dbal
   4139	B097  0289r			     dw	     exit
   4140
   4141				     ;	     THEN  ( orig -- )		     ?orig here	swap ! -bal ;immediate
   4142
   4143					     hdr     1,'THEN',1,1
1  4144					     cseg
1  4145					     aseg
1  4146	05A7			     heads   segment public	     ;
1  4147	05A7  44			     db	     ??0180	     ;
1  4148	05A8  54 48 45 4E		     db	     'THEN'	     ;
1  4149	05AC  059A			     dw	     lastl	     ;
1  4150	05AE  B099r			     dw	     cfadr	     ;
1  4151	05B0			     heads   ends
1  4152					     cseg	     ;
1  4153					     aseg
   4154	B099  E8 51D9		     then:   call    docol
   4155	B09C  B05Cr			     dw	     qorig
   4156	B09E  1026r			     dw	     here
   4157	B0A0  0315r 03D8r		     dw	     swap,store
   4158	B0A4  B027r			     dw	     dbal
   4159	B0A6  0289r			     dw	     exit
   4160
   4161				     ;	     END  ( orig -- )		     postpone exit postpone then
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 74
kernel.asm



   4162				     ;					     ;immediate
   4163
   4164					     hdr     1,'END',1,1
1  4165					     cseg
1  4166					     aseg
1  4167	05B0			     heads   segment public	     ;
1  4168	05B0  43			     db	     ??0182	     ;
1  4169	05B1  45 4E 44			     db	     'END'	     ;
1  4170	05B4  05A7			     dw	     lastl	     ;
1  4171	05B6  B0A8r			     dw	     cfadr	     ;
1  4172	05B8			     heads   ends
1  4173					     cseg	     ;
1  4174					     aseg
   4175	B0A8  E8 51CA		     endd:   call    docol
   4176	B0AB  BDDEr 0289r		     dw	     comp,exit
   4177	B0AF  B099r			     dw	     then
   4178	B0B1  0289r			     dw	     exit
   4179
   4180				     ;	     IF	 ( -- orig )		     postpone ?branch >mark
   4181				     ;					     ;immediate
   4182
   4183					     hdr     1,'IF',1,1
1  4184					     cseg
1  4185					     aseg
1  4186	05B8			     heads   segment public	     ;
1  4187	05B8  42			     db	     ??0184	     ;
1  4188	05B9  49 46			     db	     'IF'	     ;
1  4189	05BB  05B0			     dw	     lastl	     ;
1  4190	05BD  B0B3r			     dw	     cfadr	     ;
1  4191	05BF			     heads   ends
1  4192					     cseg	     ;
1  4193					     aseg
   4194	B0B3  E8 51BF		     iff:    call    docol
   4195	B0B6  BDDEr 0A92r		     dw	     comp,zbran
   4196	B0BA  B083r			     dw	     fmark
   4197	B0BC  0289r			     dw	     exit
   4198
   4199				     ;	     AHEAD  ( -- orig )		     postpone branch >mark
   4200				     ;					     ;immediate
   4201
   4202					     hdr     1,'AHEAD',1,1
1  4203					     cseg
1  4204					     aseg
1  4205	05BF			     heads   segment public	     ;
1  4206	05BF  45			     db	     ??0186	     ;
1  4207	05C0  41 48 45 41 44		     db	     'AHEAD'	     ;
1  4208	05C5  05B8			     dw	     lastl	     ;
1  4209	05C7  B0BEr			     dw	     cfadr	     ;
1  4210	05C9			     heads   ends
1  4211					     cseg	     ;
1  4212					     aseg
   4213	B0BE  E8 51B4		     ahead:  call    docol
   4214	B0C1  BDDEr 0A8Dr		     dw	     comp,bran
   4215	B0C5  B083r			     dw	     fmark
   4216	B0C7  0289r			     dw	     exit
   4217
   4218				     ;	     ELSE  ( orig1 -- orig2 )	     ?orig postpone ahead swap postpone
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 75
kernel.asm



   4219				     ;					     then ;immediate
   4220
   4221					     hdr     1,'ELSE',1,1
1  4222					     cseg
1  4223					     aseg
1  4224	05C9			     heads   segment public	     ;
1  4225	05C9  44			     db	     ??0188	     ;
1  4226	05CA  45 4C 53 45		     db	     'ELSE'	     ;
1  4227	05CE  05BF			     dw	     lastl	     ;
1  4228	05D0  B0C9r			     dw	     cfadr	     ;
1  4229	05D2			     heads   ends
1  4230					     cseg	     ;
1  4231					     aseg
   4232	B0C9  E8 51A9		     elsee:  call    docol
   4233	B0CC  B05Cr			     dw	     qorig
   4234	B0CE  B0BEr			     dw	     ahead
   4235	B0D0  0315r			     dw	     swap
   4236	B0D2  B099r			     dw	     then
   4237	B0D4  0289r			     dw	     exit
   4238
   4239				     ;	     UNTIL  ( dest -- )		     postpone ?branch <resolve
   4240				     ;					     ;immediate
   4241
   4242					     hdr     1,'UNTIL',1,1
1  4243					     cseg
1  4244					     aseg
1  4245	05D2			     heads   segment public	     ;
1  4246	05D2  45			     db	     ??018A	     ;
1  4247	05D3  55 4E 54 49 4C		     db	     'UNTIL'	     ;
1  4248	05D8  05C9			     dw	     lastl	     ;
1  4249	05DA  B0D6r			     dw	     cfadr	     ;
1  4250	05DC			     heads   ends
1  4251					     cseg	     ;
1  4252					     aseg
   4253	B0D6  B8 0A92r		     until:  mov     ax,offset zbran
   4254	B0D9  50		     until1: push    ax
   4255	B0DA  E8 5198			     call    docol
   4256	B0DD  BDABr			     dw	     comxt
   4257	B0DF  B08Er			     dw	     bresol
   4258	B0E1  0289r			     dw	     exit
   4259
   4260				     ;	     AGAIN  ( dest -- )		     postpone branch <resolve ;immediate
   4261
   4262					     hdr     1,'AGAIN',1,1
1  4263					     cseg
1  4264					     aseg
1  4265	05DC			     heads   segment public	     ;
1  4266	05DC  45			     db	     ??018C	     ;
1  4267	05DD  41 47 41 49 4E		     db	     'AGAIN'	     ;
1  4268	05E2  05D2			     dw	     lastl	     ;
1  4269	05E4  B0E3r			     dw	     cfadr	     ;
1  4270	05E6			     heads   ends
1  4271					     cseg	     ;
1  4272					     aseg
   4273	B0E3  B8 0A8Dr		     again:  mov     ax,offset bran
   4274	B0E6  EB F1			     jmp     until1
   4275
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 76
kernel.asm



   4276				     ;	     WHILE  ( ?	-- orig	? )	     ?depth postpone if	swap ;immediate
   4277
   4278					     hdr     1,'WHILE',1,1
1  4279					     cseg
1  4280					     aseg
1  4281	05E6			     heads   segment public	     ;
1  4282	05E6  45			     db	     ??018E	     ;
1  4283	05E7  57 48 49 4C 45		     db	     'WHILE'	     ;
1  4284	05EC  05DC			     dw	     lastl	     ;
1  4285	05EE  B0E8r			     dw	     cfadr	     ;
1  4286	05F0			     heads   ends
1  4287					     cseg	     ;
1  4288					     aseg
   4289	B0E8  E8 518A		     whilee: call    docol
   4290	B0EB  B04Fr			     dw	     qdep
   4291	B0ED  B0B3r			     dw	     iff
   4292	B0EF  0315r			     dw	     swap
   4293	B0F1  0289r			     dw	     exit
   4294
   4295				     ;	     REPEAT  ( orig dest -- )	     postpone again postpone then
   4296				     ;					     ;immediate
   4297
   4298					     hdr     1,'REPEAT',1,1
1  4299					     cseg
1  4300					     aseg
1  4301	05F0			     heads   segment public	     ;
1  4302	05F0  46			     db	     ??0190	     ;
1  4303	05F1  52 45 50 45 41 54		     db	     'REPEAT'		     ;
1  4304	05F7  05E6			     dw	     lastl	     ;
1  4305	05F9  B0F3r			     dw	     cfadr	     ;
1  4306	05FB			     heads   ends
1  4307					     cseg	     ;
1  4308					     aseg
   4309	B0F3  E8 517F		     repeatt:call    docol
   4310	B0F6  B0E3r			     dw	     again
   4311	B0F8  B099r			     dw	     then
   4312	B0FA  0289r			     dw	     exit
   4313
   4314				     ;	     lv	 ( -- addr )		     0 value lv
   4315
   4316					     hdr     x,'LV',,1
1  4317					     cseg	     ;
1  4318					     aseg
   4319	B0FC  E8 52D3		     lvv:    call    doval
   4320	B0FF  0000			     dw	     0
   4321
   4322				     ;	     DO	 ( -- orig dest	)	     postpone (do) lv >mark dup	to lv
   4323				     ;					     postpone begin ;immediate
   4324
   4325					     hdr     1,'DO',1,1
1  4326					     cseg
1  4327					     aseg
1  4328	05FB			     heads   segment public	     ;
1  4329	05FB  42			     db	     ??0194	     ;
1  4330	05FC  44 4F			     db	     'DO'	     ;
1  4331	05FE  05F0			     dw	     lastl	     ;
1  4332	0600  B101r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 77
kernel.asm



1  4333	0602			     heads   ends
1  4334					     cseg	     ;
1  4335					     aseg
   4336	B101  B8 0ABBr		     do:     mov     ax,offset xdo
   4337	B104  50		     do1:    push    ax
   4338	B105  E8 516D			     call    docol
   4339	B108  BDABr			     dw	     comxt
   4340	B10A  B0FCr			     dw	     lvv
   4341	B10C  B083r			     dw	     fmark
   4342	B10E  0304r			     dw	     dupp
   4343	B110  0F50r B0FCr		     dw	     pto,lvv
   4344	B114  B078r			     dw	     begin
   4345	B116  0289r			     dw	     exit
   4346
   4347				     ;	     ?DO  ( -- orig dest )	     postpone (?do) lv >mark dup to lv
   4348				     ;					     postpone begin ;immediate
   4349
   4350					     hdr     1,'?DO',1,1
1  4351					     cseg
1  4352					     aseg
1  4353	0602			     heads   segment public	     ;
1  4354	0602  43			     db	     ??0196	     ;
1  4355	0603  3F 44 4F			     db	     '?DO'	     ;
1  4356	0606  05FB			     dw	     lastl	     ;
1  4357	0608  B118r			     dw	     cfadr	     ;
1  4358	060A			     heads   ends
1  4359					     cseg	     ;
1  4360					     aseg
   4361	B118  B8 0AB4r		     qdo:    mov     ax,offset xqdo
   4362	B11B  EB E7			     jmp     do1
   4363
   4364				     ;	     I	( -- x )
   4365
   4366					     hdr     1,'I'
1  4367					     cseg
1  4368	060A			     heads   segment public	     ;
1  4369	060A  01			     db	     ??0198	     ;
1  4370	060B  49			     db	     'I'	     ;
1  4371	060C  0602			     dw	     lastl	     ;
1  4372	060E  0ACDr			     dw	     cfadr	     ;
1  4373	0610			     heads   ends
1  4374					     cseg	     ;
   4375	0ACD  8B 46 00		     ido:    mov     ax,[bp]
   4376	0AD0  03 46 02			     add     ax,[bp+cw]
   4377	0AD3  50			     push    ax
   4378					     nextt
1  4379	0AD4  AD			     lodsw
1  4380	0AD5  FF E0			     jmp     ax
   4381
   4382				     ;	     I'	 ( -- x	)
   4383				     ;
   4384				     ;	     hdr     1,"I'"
   4385				     ;idot:  mov     ax,[bp+cw]
   4386				     ;	     sub     ax,8000h
   4387				     ;	     jmp     apush
   4388
   4389				     ;	     J	( -- x )
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 78
kernel.asm



   4390
   4391					     hdr     1,'J'
1  4392					     cseg
1  4393	0610			     heads   segment public	     ;
1  4394	0610  01			     db	     ??019A	     ;
1  4395	0611  4A			     db	     'J'	     ;
1  4396	0612  060A			     dw	     lastl	     ;
1  4397	0614  0AD7r			     dw	     cfadr	     ;
1  4398	0616			     heads   ends
1  4399					     cseg	     ;
   4400	0AD7  8B 46 04		     jdo:    mov     ax,[bp+cw*2]
   4401	0ADA  03 46 06			     add     ax,[bp+cw*3]
   4402	0ADD  E9 F6D9			     jmp     apush
   4403
   4404				     ;	     'R	 ( -- addr )
   4405
   4406					     hdr     1,"'R"
1  4407					     cseg
1  4408	0616			     heads   segment public	     ;
1  4409	0616  02			     db	     ??019C	     ;
1  4410	0617  27 52			     db	     "'R"	     ;
1  4411	0619  0610			     dw	     lastl	     ;
1  4412	061B  0AE0r			     dw	     cfadr	     ;
1  4413	061D			     heads   ends
1  4414					     cseg	     ;
   4415	0AE0  8D 46 04		     trr:    lea     ax,[bp+cw*2]
   4416	0AE3  E9 F6D3			     jmp     apush
   4417
   4418				     ;	     LEAVE  ( -- )		     postpone (leave) lv ?orig ,
   4419				     ;					     ;immediate
   4420
   4421					     hdr     1,'LEAVE',1,1
1  4422					     cseg
1  4423					     aseg
1  4424	061D			     heads   segment public	     ;
1  4425	061D  45			     db	     ??019E	     ;
1  4426	061E  4C 45 41 56 45		     db	     'LEAVE'	     ;
1  4427	0623  0616			     dw	     lastl	     ;
1  4428	0625  B11Dr			     dw	     cfadr	     ;
1  4429	0627			     heads   ends
1  4430					     cseg	     ;
1  4431					     aseg
   4432	B11D  E8 5155		     leavee: call    docol
   4433	B120  BDDEr 0AAEr		     dw	     comp,pleav
   4434	B124  B0FCr			     dw	     lvv
   4435	B126  B05Cr			     dw	     qorig
   4436	B128  106Dr			     dw	     comma
   4437	B12A  0289r			     dw	     exit
   4438
   4439				     ;	     BREAK  ( orig -- )		     postpone leave postpone then
   4440				     ;					     ;immediate
   4441
   4442					     hdr     1,'BREAK',1,1
1  4443					     cseg
1  4444					     aseg
1  4445	0627			     heads   segment public	     ;
1  4446	0627  45			     db	     ??01A0	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 79
kernel.asm



1  4447	0628  42 52 45 41 4B		     db	     'BREAK'	     ;
1  4448	062D  061D			     dw	     lastl	     ;
1  4449	062F  B12Cr			     dw	     cfadr	     ;
1  4450	0631			     heads   ends
1  4451					     cseg	     ;
1  4452					     aseg
   4453	B12C  E8 5146		     break:  call    docol
   4454	B12F  B11Dr			     dw	     leavee
   4455	B131  B099r			     dw	     then
   4456	B133  0289r			     dw	     exit
   4457
   4458				     ;	     LOOP  ( addr1 addr2 -- )	     postpone (loop) <resolve
   4459				     ;					     postpone then to lv ;immediate
   4460
   4461					     hdr     1,'LOOP',1,1
1  4462					     cseg
1  4463					     aseg
1  4464	0631			     heads   segment public	     ;
1  4465	0631  44			     db	     ??01A2	     ;
1  4466	0632  4C 4F 4F 50		     db	     'LOOP'	     ;
1  4467	0636  0627			     dw	     lastl	     ;
1  4468	0638  B135r			     dw	     cfadr	     ;
1  4469	063A			     heads   ends
1  4470					     cseg	     ;
1  4471					     aseg
   4472	B135  B8 0A9Br		     loopp:  mov     ax,offset xloop
   4473	B138  50		     loopp1: push    ax
   4474	B139  E8 5139			     call    docol
   4475	B13C  BDABr			     dw	     comxt
   4476	B13E  B08Er			     dw	     bresol
   4477	B140  B099r			     dw	     then
   4478	B142  0F50r B0FCr		     dw	     pto,lvv
   4479	B146  0289r			     dw	     exit
   4480
   4481				     ;	     +LOOP  ( addr1 addr2 -- )	     postpone (+loop) <resolve
   4482				     ;					     postpone then to lv ;immediate
   4483
   4484					     hdr     1,'+LOOP',1,1
1  4485					     cseg
1  4486					     aseg
1  4487	063A			     heads   segment public	     ;
1  4488	063A  45			     db	     ??01A4	     ;
1  4489	063B  2B 4C 4F 4F 50		     db	     '+LOOP'	     ;
1  4490	0640  0631			     dw	     lastl	     ;
1  4491	0642  B148r			     dw	     cfadr	     ;
1  4492	0644			     heads   ends
1  4493					     cseg	     ;
1  4494					     aseg
   4495	B148  B8 0A9Fr		     ploop:  mov     ax,offset xploo
   4496	B14B  EB EB			     jmp     loopp1
   4497
   4498				     ;	     BOUNDS  ( addr1 u -- addr1+u a1 )	over + swap
   4499
   4500					     hdr     1,'BOUNDS'
1  4501					     cseg
1  4502	0644			     heads   segment public	     ;
1  4503	0644  06			     db	     ??01A6	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 80
kernel.asm



1  4504	0645  42 4F 55 4E 44 53		     db	     'BOUNDS'		     ;
1  4505	064B  063A			     dw	     lastl	     ;
1  4506	064D  0AE6r			     dw	     cfadr	     ;
1  4507	064F			     heads   ends
1  4508					     cseg	     ;
   4509	0AE6  5A		     bounds: pop     dx
   4510	0AE7  58			     pop     ax
   4511	0AE8  03 D0			     add     dx,ax
   4512	0AEA  E9 F6CB			     jmp     dpush
   4513
   4514
   4515				     ;	     CS-PICK			     pick +bal
   4516
   4517					     hdr     1,'CS-PICK',,1
1  4518					     cseg
1  4519					     aseg
1  4520	064F			     heads   segment public	     ;
1  4521	064F  07			     db	     ??01A8	     ;
1  4522	0650  43 53 2D 50 49 43	4B	     db	     'CS-PICK'		     ;
1  4523	0657  0644			     dw	     lastl	     ;
1  4524	0659  B14Dr			     dw	     cfadr	     ;
1  4525	065B			     heads   ends
1  4526					     cseg	     ;
1  4527					     aseg
   4528	B14D  FF 06 B01Er	     cspic:  inc     word ptr bal1
   4529	B151  E9 5204			     jmp     pick
   4530
   4531				     ;	     CS-ROLL			     aka roll cs-roll
   4532
   4533					     hdr     1,'CS-ROLL',,,roll
1  4534					     cseg
1  4535	065B			     heads   segment public	     ;
1  4536	065B  87			     db	     ??01AA	     ;
1  4537	065C  43 53 2D 52 4F 4C	4C	     db	     'CS-ROLL'		     ;
1  4538	0663  064F			     dw	     lastl	     ;
1  4539	0665  0336r			     dw	     cfadr	     ;
1  4540	0667			     heads   ends
1  4541					     cseg	     ;
   4542				     csrol   equ     roll
   4543
   4544				     ;	     CS-DROP			     drop -bal
   4545
   4546					     hdr     1,'CS-DROP',,1
1  4547					     cseg
1  4548					     aseg
1  4549	0667			     heads   segment public	     ;
1  4550	0667  07			     db	     ??01AC	     ;
1  4551	0668  43 53 2D 44 52 4F	50	     db	     'CS-DROP'		     ;
1  4552	066F  065B			     dw	     lastl	     ;
1  4553	0671  B154r			     dw	     cfadr	     ;
1  4554	0673			     heads   ends
1  4555					     cseg	     ;
1  4556					     aseg
   4557	B154  58		     csdro:  pop     ax
   4558	B155  E9 FECF			     jmp     dbal
   4559
   4560				     ;	     #cs  ( -- cells )		     sp@ csp @ - negate	2/ 1- 0	max
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 81
kernel.asm



   4561
   4562					     hdr     x,'#CS',,1
1  4563					     cseg	     ;
1  4564					     aseg
   4565	B158  A1 B51Er		     ncs:    mov     ax,cspp1
   4566	B15B  2B C4			     sub     ax,sp
   4567	B15D  D1 F8			     sar     ax,1
   4568	B15F  48			     dec     ax
   4569	B160  79 02			     jns     ncs1
   4570	B162  2B C0			     sub     ax,ax
   4571	B164  E9 5052		     ncs1:   jmp     apush
   4572
   4573				     ;	     CS-PUSH			     #cs -roll
   4574
   4575					     hdr     1,'CS-PUSH',,1
1  4576					     cseg
1  4577					     aseg
1  4578	0673			     heads   segment public	     ;
1  4579	0673  07			     db	     ??01B0	     ;
1  4580	0674  43 53 2D 50 55 53	48	     db	     'CS-PUSH'		     ;
1  4581	067B  0667			     dw	     lastl	     ;
1  4582	067D  B167r			     dw	     cfadr	     ;
1  4583	067F			     heads   ends
1  4584					     cseg	     ;
1  4585					     aseg
   4586	B167  E8 510B		     cspush: call    docol
   4587	B16A  B158r			     dw	     ncs
   4588	B16C  034Fr			     dw	     droll
   4589	B16E  0289r			     dw	     exit
   4590
   4591				     ;	     CS-POP			     #cs roll
   4592
   4593					     hdr     1,'CS-POP',,1
1  4594					     cseg
1  4595					     aseg
1  4596	067F			     heads   segment public	     ;
1  4597	067F  06			     db	     ??01B2	     ;
1  4598	0680  43 53 2D 50 4F 50		     db	     'CS-POP'		     ;
1  4599	0686  0673			     dw	     lastl	     ;
1  4600	0688  B170r			     dw	     cfadr	     ;
1  4601	068A			     heads   ends
1  4602					     cseg	     ;
1  4603					     aseg
   4604	B170  E8 5102		     cspop:  call    docol
   4605	B173  B158r			     dw	     ncs
   4606	B175  0336r			     dw	     roll
   4607	B177  0289r			     dw	     exit
   4608
   4609				     ;	     CS-MARK			     0 +bal
   4610
   4611					     hdr     1,'CS-MARK',,1
1  4612					     cseg
1  4613					     aseg
1  4614	068A			     heads   segment public	     ;
1  4615	068A  07			     db	     ??01B4	     ;
1  4616	068B  43 53 2D 4D 41 52	4B	     db	     'CS-MARK'		     ;
1  4617	0692  067F			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 82
kernel.asm



1  4618	0694  B179r			     dw	     cfadr	     ;
1  4619	0696			     heads   ends
1  4620					     cseg	     ;
1  4621					     aseg
   4622	B179  2B C0		     csm:    sub     ax,ax
   4623	B17B  50			     push    ax
   4624	B17C  E9 FEA1			     jmp     pbal
   4625
   4626				     ;	     CS-TEST			     ?depth dup	0<>
   4627
   4628					     hdr     1,'CS-TEST',,1
1  4629					     cseg
1  4630					     aseg
1  4631	0696			     heads   segment public	     ;
1  4632	0696  07			     db	     ??01B6	     ;
1  4633	0697  43 53 2D 54 45 53	54	     db	     'CS-TEST'		     ;
1  4634	069E  068A			     dw	     lastl	     ;
1  4635	06A0  B17Fr			     dw	     cfadr	     ;
1  4636	06A2			     heads   ends
1  4637					     cseg	     ;
1  4638					     aseg
   4639	B17F  E8 50F3		     cstes:  call    docol
   4640	B182  B04Fr			     dw	     qdep
   4641	B184  0304r			     dw	     dupp
   4642	B186  0632r			     dw	     zneq
   4643	B188  0289r			     dw	     exit
   4644
   4645				     ;	     COND			     ?comp cs-mark immediate
   4646
   4647					     hdr     1,'COND',1,1
1  4648					     cseg
1  4649					     aseg
1  4650	06A2			     heads   segment public	     ;
1  4651	06A2  44			     db	     ??01B8	     ;
1  4652	06A3  43 4F 4E 44		     db	     'COND'	     ;
1  4653	06A7  0696			     dw	     lastl	     ;
1  4654	06A9  B18Ar			     dw	     cfadr	     ;
1  4655	06AB			     heads   ends
1  4656					     cseg	     ;
1  4657					     aseg
   4658	B18A  E8 50E8		     cond:   call    docol
   4659	B18D  B659r			     dw	     qcomp
   4660	B18F  B179r			     dw	     csm
   4661	B191  0289r			     dw	     exit
   4662
   4663				     ;	     CONT			     begin cs-test while postpone then
   4664				     ;					     repeat cs-drop ;immediate
   4665
   4666					     hdr     1,'CONT',1,1
1  4667					     cseg
1  4668					     aseg
1  4669	06AB			     heads   segment public	     ;
1  4670	06AB  44			     db	     ??01BA	     ;
1  4671	06AC  43 4F 4E 54		     db	     'CONT'	     ;
1  4672	06B0  06A2			     dw	     lastl	     ;
1  4673	06B2  B193r			     dw	     cfadr	     ;
1  4674	06B4			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 83
kernel.asm



1  4675					     cseg	     ;
1  4676					     aseg
   4677	B193  E8 50DF		     contt:  call    docol
   4678	B196  B17Fr		     contt1  dw	     cstes
   4679	B198  0A92r B1A2r		     dw	     zbran,contt2
   4680	B19C  B099r			     dw	     then
   4681	B19E  0A8Dr B196r		     dw	     bran,contt1
   4682	B1A2  B154r		     contt2  dw	     csdro
   4683	B1A4  0289r			     dw	     exit
   4684
   4685
   4686				     ;	     Eaker/ANS CASE support
   4687
   4688				     ;	     OF	 ( -- addr )		     postpone (of) >mark ;immediate
   4689
   4690					     hdr     1,'OF',1,1
1  4691					     cseg
1  4692					     aseg
1  4693	06B4			     heads   segment public	     ;
1  4694	06B4  42			     db	     ??01BC	     ;
1  4695	06B5  4F 46			     db	     'OF'	     ;
1  4696	06B7  06AB			     dw	     lastl	     ;
1  4697	06B9  B1A6r			     dw	     cfadr	     ;
1  4698	06BB			     heads   ends
1  4699					     cseg	     ;
1  4700					     aseg
   4701	B1A6  E8 50CC		     of:     call    docol
   4702	B1A9  BDDEr 0A86r		     dw	     comp,pof
   4703	B1AD  B083r			     dw	     fmark
   4704	B1AF  0289r			     dw	     exit
   4705
   4706				     ;	     ENDOF  ( addr1 -- addr2 )	     aka else endof
   4707
   4708					     hdr     1,'ENDOF',1,,elsee
1  4709					     cseg
1  4710	06BB			     heads   segment public	     ;
1  4711	06BB  C5			     db	     ??01BE	     ;
1  4712	06BC  45 4E 44 4F 46		     db	     'ENDOF'	     ;
1  4713	06C1  06B4			     dw	     lastl	     ;
1  4714	06C3  B0C9r			     dw	     cfadr	     ;
1  4715	06C5			     heads   ends
1  4716					     cseg	     ;
   4717				     endof   equ     elsee
   4718
   4719				     ;	     CASE  ( --	sys )		     aka cond case
   4720
   4721					     hdr     1,'CASE',1,,cond
1  4722					     cseg
1  4723	06C5			     heads   segment public	     ;
1  4724	06C5  C4			     db	     ??01C0	     ;
1  4725	06C6  43 41 53 45		     db	     'CASE'	     ;
1  4726	06CA  06BB			     dw	     lastl	     ;
1  4727	06CC  B18Ar			     dw	     cfadr	     ;
1  4728	06CE			     heads   ends
1  4729					     cseg	     ;
   4730				     casee   equ     cond
   4731
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 84
kernel.asm



   4732				     ;	     ENDCASE  (	sys -- )	     postpone drop postpone cont
   4733				     ;					     ;immediate
   4734
   4735					     hdr     1,'ENDCASE',1,1
1  4736					     cseg
1  4737					     aseg
1  4738	06CE			     heads   segment public	     ;
1  4739	06CE  47			     db	     ??01C2	     ;
1  4740	06CF  45 4E 44 43 41 53	45	     db	     'ENDCASE'		     ;
1  4741	06D6  06C5			     dw	     lastl	     ;
1  4742	06D8  B1B1r			     dw	     cfadr	     ;
1  4743	06DA			     heads   ends
1  4744					     cseg	     ;
1  4745					     aseg
   4746	B1B1  E8 50C1		     endc:   call    docol
   4747	B1B4  BDDEr 02FEr		     dw	     comp,drop
   4748	B1B8  B193r			     dw	     contt
   4749	B1BA  0289r			     dw	     exit
   4750
   4751				     ;	     [ELSE]  ( -- )	     1 begin token 2dup	upper dup if 2dup
   4752				     ;				     s"	[IF]" compare if 2dup s" [ELSE]"
   4753				     ;				     compare if	s" [THEN]" compare 0= else
   4754				     ;				     2drop dup 1 = then	else 2drop 1 then +
   4755				     ;				     else 2drop	refill and then	?dup 0=	until
   4756				     ;				     ;immediate
   4757
   4758					     hdr     1,'[ELSE]',1,1
1  4759					     cseg
1  4760					     aseg
1  4761	06DA			     heads   segment public	     ;
1  4762	06DA  46			     db	     ??01C4	     ;
1  4763	06DB  5B 45 4C 53 45 5D		     db	     '[ELSE]'		     ;
1  4764	06E1  06CE			     dw	     lastl	     ;
1  4765	06E3  B1BCr			     dw	     cfadr	     ;
1  4766	06E5			     heads   ends
1  4767					     cseg	     ;
1  4768					     aseg
   4769	B1BC  E8 50B6		     pels:   call    docol
   4770	B1BF  0F7Fr			     dw	     one
   4771	B1C1  B7E7r		     pels1   dw	     token
   4772	B1C3  037Er 0F39r		     dw	     tdup,upper
   4773	B1C7  0304r			     dw	     dupp
   4774	B1C9  0A92r B214r		     dw	     zbran,pels6
   4775	B1CD  037Er			     dw	     tdup
   4776	B1CF  1447r			     dw	     psqot
   4777					     dcs     '[IF]'
1  4778	B1D1  04			     db	     ??01C6	     ;
1  4779	B1D2  5B 49 46 5D	     ??01C7  db	     '[IF]'
   4780	B1D6  057Er			     dw	     cmpp
   4781	B1D8  0A92r B20Ar		     dw	     zbran,pels4
   4782	B1DC  037Er			     dw	     tdup
   4783	B1DE  1447r			     dw	     psqot
   4784					     dcs     '[ELSE]'
1  4785	B1E0  06			     db	     ??01C8	     ;
1  4786	B1E1  5B 45 4C 53 45 5D	     ??01C9  db	     '[ELSE]'
   4787	B1E7  057Er			     dw	     cmpp
   4788	B1E9  0A92r B1FEr		     dw	     zbran,pels2
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 85
kernel.asm



   4789	B1ED  1447r			     dw	     psqot
   4790					     dcs     '[THEN]'
1  4791	B1EF  06			     db	     ??01CA	     ;
1  4792	B1F0  5B 54 48 45 4E 5D	     ??01CB  db	     '[THEN]'
   4793	B1F6  057Er 0628r		     dw	     cmpp,zequ
   4794	B1FA  0A8Dr B206r		     dw	     bran,pels3
   4795	B1FE  0378r		     pels2   dw	     tdrop
   4796	B200  0304r 0F7Fr 063Br		     dw	     dupp,one,equal
   4797	B206  0A8Dr B20Er	     pels3   dw	     bran,pels5
   4798	B20A  0378r 0F7Fr	     pels4   dw	     tdrop,one
   4799	B20E  076Dr		     pels5   dw	     plus
   4800	B210  0A8Dr B21Ar		     dw	     bran,pels7
   4801	B214  0378r		     pels6   dw	     tdrop
   4802	B216  BA1Ar 0723r		     dw	     refil,andd
   4803	B21A  030Br 0628r	     pels7   dw	     qdup,zequ
   4804	B21E  0A92r B1C1r		     dw	     zbran,pels1
   4805	B222  0289r			     dw	     exit
   4806
   4807				     ;	     [IF]  ( flag -- )	     0=	if postpone [else] then	;immediate
   4808
   4809					     hdr     1,'[IF]',1,1
1  4810					     cseg
1  4811					     aseg
1  4812	06E5			     heads   segment public	     ;
1  4813	06E5  44			     db	     ??01CC	     ;
1  4814	06E6  5B 49 46 5D		     db	     '[IF]'	     ;
1  4815	06EA  06DA			     dw	     lastl	     ;
1  4816	06EC  B224r			     dw	     cfadr	     ;
1  4817	06EE			     heads   ends
1  4818					     cseg	     ;
1  4819					     aseg
   4820	B224  59		     pif:    pop     cx
   4821	B225  E3 95			     jcxz    pels
   4822					     nextt
1  4823	B227  AD			     lodsw
1  4824	B228  FF E0			     jmp     ax
   4825
   4826				     ;	     [THEN]  ( -- )	     aka noop [then] immediate
   4827
   4828					     hdr     1,'[THEN]',1,,noop
1  4829					     cseg
1  4830	06EE			     heads   segment public	     ;
1  4831	06EE  C6			     db	     ??01CE	     ;
1  4832	06EF  5B 54 48 45 4E 5D		     db	     '[THEN]'		     ;
1  4833	06F5  06E5			     dw	     lastl	     ;
1  4834	06F7  01BAr			     dw	     cfadr	     ;
1  4835	06F9			     heads   ends
1  4836					     cseg	     ;
   4837				     pthen   equ     next
   4838
   4839				     ;
   4840				     ;	     Numeric Output
   4841				     ;
   4842				     ;	(U.)  (D.)  (.)	 U.  D.	 U.R  D.R  .R  ?  .
   4843				     ;
   4844
   4845				     ;	     (U.)  ( u -- c-addr u )  0	(d.)
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 86
kernel.asm



   4846
   4847					     hdr     1,'(U.)'
1  4848					     cseg
1  4849	06F9			     heads   segment public	     ;
1  4850	06F9  04			     db	     ??01D0	     ;
1  4851	06FA  28 55 2E 29		     db	     '(U.)'	     ;
1  4852	06FE  06EE			     dw	     lastl	     ;
1  4853	0700  0AEDr			     dw	     cfadr	     ;
1  4854	0702			     heads   ends
1  4855					     cseg	     ;
   4856	0AED  2B C0		     pudot:  sub     ax,ax
   4857	0AEF  50			     push    ax
   4858				     ;	     jmp     pddot
   4859
   4860				     ;	     (D.)  ( d -- c-addr u )  tuck dabs	<# #s rot sign #>
   4861
   4862					     hdr     1,'(D.)'
1  4863					     cseg
1  4864	0702			     heads   segment public	     ;
1  4865	0702  04			     db	     ??01D2	     ;
1  4866	0703  28 44 2E 29		     db	     '(D.)'	     ;
1  4867	0707  06F9			     dw	     lastl	     ;
1  4868	0709  0AF0r			     dw	     cfadr	     ;
1  4869	070B			     heads   ends
1  4870					     cseg	     ;
   4871	0AF0  E8 F782		     pddot:  call    docol
   4872	0AF3  036Ar			     dw	     tuck
   4873	0AF5  0765r			     dw	     dabs
   4874	0AF7  09CCr			     dw	     bdigs
   4875	0AF9  0A4Fr			     dw	     digs
   4876	0AFB  0324r 0A3Fr		     dw	     rot,sign
   4877	0AFF  09D7r			     dw	     edigs
   4878	0B01  0289r			     dw	     exit
   4879
   4880				     ;	     (.)  ( n -- c-addr	u )  s>d (d.)
   4881
   4882					     hdr     1,'(.)'
1  4883					     cseg
1  4884	070B			     heads   segment public	     ;
1  4885	070B  03			     db	     ??01D4	     ;
1  4886	070C  28 2E 29			     db	     '(.)'	     ;
1  4887	070F  0702			     dw	     lastl	     ;
1  4888	0711  0B03r			     dw	     cfadr	     ;
1  4889	0713			     heads   ends
1  4890					     cseg	     ;
   4891	0B03  E8 F76F		     pdot:   call    docol
   4892	0B06  0742r 0AF0r		     dw	     stod,pddot
   4893	0B0A  0289r			     dw	     exit
   4894
   4895				     ;	     U.	 ( u --	)	     0 d.
   4896
   4897					     hdr     1,'U.'
1  4898					     cseg
1  4899	0713			     heads   segment public	     ;
1  4900	0713  02			     db	     ??01D6	     ;
1  4901	0714  55 2E			     db	     'U.'	     ;
1  4902	0716  070B			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 87
kernel.asm



1  4903	0718  0B0Cr			     dw	     cfadr	     ;
1  4904	071A			     heads   ends
1  4905					     cseg	     ;
   4906	0B0C  2B C0		     udot:   sub     ax,ax
   4907	0B0E  50			     push    ax
   4908				     ;	     jmp     ddot
   4909
   4910				     ;	     D.	 ( d --	)	     (d.) type space
   4911
   4912					     hdr     1,'D.'
1  4913					     cseg
1  4914	071A			     heads   segment public	     ;
1  4915	071A  02			     db	     ??01D8	     ;
1  4916	071B  44 2E			     db	     'D.'	     ;
1  4917	071D  0713			     dw	     lastl	     ;
1  4918	071F  0B0Fr			     dw	     cfadr	     ;
1  4919	0721			     heads   ends
1  4920					     cseg	     ;
   4921	0B0F  E8 F763		     ddot:   call    docol
   4922	0B12  0AF0r			     dw	     pddot
   4923	0B14  0EE4r 0ECCr	     ddot1   dw	     typee,space
   4924	0B18  0289r			     dw	     exit
   4925
   4926				     ;	     U.R  ( u1 w -- )	     0 swap d.r
   4927
   4928					     hdr     1,'U.R'
1  4929					     cseg
1  4930	0721			     heads   segment public	     ;
1  4931	0721  03			     db	     ??01DA	     ;
1  4932	0722  55 2E 52			     db	     'U.R'	     ;
1  4933	0725  071A			     dw	     lastl	     ;
1  4934	0727  0B1Ar			     dw	     cfadr	     ;
1  4935	0729			     heads   ends
1  4936					     cseg	     ;
   4937	0B1A  58		     udotr:  pop     ax
   4938	0B1B  2B D2			     sub     dx,dx
   4939	0B1D  52			     push    dx
   4940	0B1E  50			     push    ax
   4941				     ;	     jmp     ddotr
   4942
   4943				     ;	     D.R  ( d w	-- )	     >r	(d.) r>	s.r
   4944
   4945					     hdr     1,'D.R'
1  4946					     cseg
1  4947	0729			     heads   segment public	     ;
1  4948	0729  03			     db	     ??01DC	     ;
1  4949	072A  44 2E 52			     db	     'D.R'	     ;
1  4950	072D  0721			     dw	     lastl	     ;
1  4951	072F  0B1Fr			     dw	     cfadr	     ;
1  4952	0731			     heads   ends
1  4953					     cseg	     ;
   4954	0B1F  E8 F753		     ddotr:  call    docol
   4955	0B22  02C9r			     dw	     tor
   4956	0B24  0AF0r			     dw	     pddot
   4957	0B26  02D2r		     ddotr1  dw	     fromr
   4958	0B28  0616r			     dw	     sdotr
   4959	0B2A  0289r			     dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 88
kernel.asm



   4960
   4961				     ;	     .R	 ( n w -- )	     >r	s>d r> d.r
   4962
   4963					     hdr     1,'.R'
1  4964					     cseg
1  4965	0731			     heads   segment public	     ;
1  4966	0731  02			     db	     ??01DE	     ;
1  4967	0732  2E 52			     db	     '.R'	     ;
1  4968	0734  0729			     dw	     lastl	     ;
1  4969	0736  0B2Cr			     dw	     cfadr	     ;
1  4970	0738			     heads   ends
1  4971					     cseg	     ;
   4972	0B2C  5B		     dotr:   pop     bx
   4973	0B2D  58			     pop     ax
   4974	0B2E  99			     cwd
   4975	0B2F  50			     push    ax
   4976	0B30  52			     push    dx
   4977	0B31  53			     push    bx
   4978	0B32  EB EB			     jmp     ddotr
   4979
   4980				     ;	     ?	( addr -- )	     @ .
   4981
   4982					     hdr     1,'?'
1  4983					     cseg
1  4984	0738			     heads   segment public	     ;
1  4985	0738  01			     db	     ??01E0	     ;
1  4986	0739  3F			     db	     '?'	     ;
1  4987	073A  0731			     dw	     lastl	     ;
1  4988	073C  0B34r			     dw	     cfadr	     ;
1  4989	073E			     heads   ends
1  4990					     cseg	     ;
   4991	0B34  5B		     ques:   pop     bx
   4992	0B35  FF 37			     push    [bx]
   4993				     ;	     jmp     dot
   4994
   4995				     ;	     .	( x -- )	     decimal? if s>d d.	end u.
   4996
   4997					     hdr     1,'.'
1  4998					     cseg
1  4999	073E			     heads   segment public	     ;
1  5000	073E  01			     db	     ??01E2	     ;
1  5001	073F  2E			     db	     '.'	     ;
1  5002	0740  0738			     dw	     lastl	     ;
1  5003	0742  0B37r			     dw	     cfadr	     ;
1  5004	0744			     heads   ends
1  5005					     cseg	     ;
   5006	0B37  E8 F73B		     dot:    call    docol
   5007	0B3A  0A78r			     dw	     dcmq
   5008	0B3C  0A92r 0B46r		     dw	     zbran,dot1
   5009	0B40  0742r 0B0Fr		     dw	     stod,ddot
   5010	0B44  0289r			     dw	     exit
   5011	0B46  0B0Cr		     dot1    dw	     udot
   5012	0B48  0289r			     dw	     exit
   5013
   5014				     ;	     DOSVER  ( -- minor	major )
   5015
   5016					     hdr     1,'DOSVER'
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 89
kernel.asm



1  5017					     cseg
1  5018	0744			     heads   segment public	     ;
1  5019	0744  06			     db	     ??01E4	     ;
1  5020	0745  44 4F 53 56 45 52		     db	     'DOSVER'		     ;
1  5021	074B  073E			     dw	     lastl	     ;
1  5022	074D  0B4Ar			     dw	     cfadr	     ;
1  5023	074F			     heads   ends
1  5024					     cseg	     ;
   5025	0B4A  BB 01DAr		     dosver: mov     bx,offset dosv
   5026	0B4D  E9 F89F			     jmp     tat1
   5027
   5028					     cseg
   5029
   5030	0B50  0A*(????)		     regs    dw	     10	dup (?)	     ; AX BX CX	DX BP SI DI DS ES FLAGS
   5031
   5032				     ;	     DOSCALL  (	u -- )
   5033
   5034					     hdr     1,'DOSCALL'
1  5035					     cseg
1  5036	074F			     heads   segment public	     ;
1  5037	074F  07			     db	     ??01E6	     ;
1  5038	0750  44 4F 53 43 41 4C	4C	     db	     'DOSCALL'		     ;
1  5039	0757  0744			     dw	     lastl	     ;
1  5040	0759  0B64r			     dw	     cfadr	     ;
1  5041	075B			     heads   ends
1  5042					     cseg	     ;
   5043	0B64  58		     dosc:   pop     ax
   5044	0B65  A2 0B51r			     mov     byte ptr regs+1,al
   5045	0B68  8C 1E 0B5Er		     mov     regs+14,ds
   5046	0B6C  B0 21			     mov     al,21h
   5047					     ignore1
1  5048	0B6E  A8			     db	     0a8h    ;
   5049
   5050				     ;	     INTCALL  (	u -- )
   5051
   5052					     hdr     1,'INTCALL'
1  5053					     cseg
1  5054	075B			     heads   segment public	     ;
1  5055	075B  07			     db	     ??01E8	     ;
1  5056	075C  49 4E 54 43 41 4C	4C	     db	     'INTCALL'		     ;
1  5057	0763  074F			     dw	     lastl	     ;
1  5058	0765  0B6Fr			     dw	     cfadr	     ;
1  5059	0767			     heads   ends
1  5060					     cseg	     ;
   5061	0B6F  58		     intc:   pop     ax
   5062	0B70  56			     push    si
   5063	0B71  55			     push    bp
   5064	0B72  0E			     push    cs
   5065	0B73  A2 0B9Ar			     mov     byte ptr intc1+1,al
   5066	0B76  BE 0B50r			     mov     si,offset regs
   5067	0B79  AD			     lodsw
   5068	0B7A  50			     push    ax	     ; AX
   5069	0B7B  AD			     lodsw
   5070	0B7C  8B D8			     mov     bx,ax
   5071	0B7E  AD			     lodsw
   5072	0B7F  8B C8			     mov     cx,ax
   5073	0B81  AD			     lodsw
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 90
kernel.asm



   5074	0B82  8B D0			     mov     dx,ax
   5075	0B84  AD			     lodsw
   5076	0B85  8B E8			     mov     bp,ax
   5077	0B87  AD			     lodsw
   5078	0B88  50			     push    ax	     ; SI
   5079	0B89  AD			     lodsw
   5080	0B8A  8B F8			     mov     di,ax
   5081	0B8C  AD			     lodsw
   5082	0B8D  50			     push    ax	     ; DS
   5083	0B8E  AD			     lodsw
   5084	0B8F  8E C0			     mov     es,ax
   5085	0B91  1F			     pop     ds
   5086	0B92  5E			     pop     si
   5087	0B93  58			     pop     ax
   5088	0B94  2E: 89 26	01E4r		     mov     cs:fssav,sp
   5089	0B99  CD 00		     intc1:  int     0		     ; NOTE: self-modifying code
   5090	0B9B  FA			     cli
   5091	0B9C  2E: 8E 16	03C6r		     mov     ss,cs:cseg1     ; restore SS:SP
   5092	0BA1  2E: 8B 26	01E4r		     mov     sp,cs:fssav     ; for DOS 2.x
   5093	0BA6  FB			     sti
   5094	0BA7  9C			     pushf
   5095	0BA8  06			     push    es
   5096	0BA9  57			     push    di
   5097	0BAA  0E			     push    cs
   5098	0BAB  07			     pop     es
   5099	0BAC  BF 0B50r			     mov     di,offset regs
   5100	0BAF  FC			     cld
   5101	0BB0  AB			     stosw
   5102	0BB1  8B C3			     mov     ax,bx
   5103	0BB3  AB			     stosw
   5104	0BB4  8B C1			     mov     ax,cx
   5105	0BB6  AB			     stosw
   5106	0BB7  8B C2			     mov     ax,dx
   5107	0BB9  AB			     stosw
   5108	0BBA  8B C5			     mov     ax,bp
   5109	0BBC  AB			     stosw
   5110	0BBD  8B C6			     mov     ax,si
   5111	0BBF  AB			     stosw
   5112	0BC0  58			     pop     ax	     ; DI
   5113	0BC1  AB			     stosw
   5114	0BC2  8C D8			     mov     ax,ds
   5115	0BC4  AB			     stosw
   5116	0BC5  58			     pop     ax	     ; ES
   5117	0BC6  AB			     stosw
   5118	0BC7  58			     pop     ax	     ; flags
   5119	0BC8  AB			     stosw
   5120	0BC9  1F			     pop     ds
   5121	0BCA  5D			     pop     bp
   5122	0BCB  5E			     pop     si
   5123					     nextt
1  5124	0BCC  AD			     lodsw
1  5125	0BCD  FF E0			     jmp     ax
   5126
   5127					     hdr     1,"'FLAGS"
1  5128					     cseg
1  5129	0767			     heads   segment public	     ;
1  5130	0767  06			     db	     ??01EA	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 91
kernel.asm



1  5131	0768  27 46 4C 41 47 53		     db	     "'FLAGS"		     ;
1  5132	076E  075B			     dw	     lastl	     ;
1  5133	0770  0BCFr			     dw	     cfadr	     ;
1  5134	0772			     heads   ends
1  5135					     cseg	     ;
   5136	0BCF  B0 12		     tfl:    mov     al,18
   5137					     ignore2
1  5138	0BD1  A9			     db	     0a9h    ;
   5139
   5140					     hdr     1,"'ES"
1  5141					     cseg
1  5142	0772			     heads   segment public	     ;
1  5143	0772  03			     db	     ??01EC	     ;
1  5144	0773  27 45 53			     db	     "'ES"	     ;
1  5145	0776  0767			     dw	     lastl	     ;
1  5146	0778  0BD2r			     dw	     cfadr	     ;
1  5147	077A			     heads   ends
1  5148					     cseg	     ;
   5149	0BD2  B0 10		     tes:    mov     al,16
   5150					     ignore2
1  5151	0BD4  A9			     db	     0a9h    ;
   5152
   5153					     hdr     1,"'DS"
1  5154					     cseg
1  5155	077A			     heads   segment public	     ;
1  5156	077A  03			     db	     ??01EE	     ;
1  5157	077B  27 44 53			     db	     "'DS"	     ;
1  5158	077E  0772			     dw	     lastl	     ;
1  5159	0780  0BD5r			     dw	     cfadr	     ;
1  5160	0782			     heads   ends
1  5161					     cseg	     ;
   5162	0BD5  B0 0E		     tds:    mov     al,14
   5163					     ignore2
1  5164	0BD7  A9			     db	     0a9h    ;
   5165
   5166					     hdr     1,"'DI"
1  5167					     cseg
1  5168	0782			     heads   segment public	     ;
1  5169	0782  03			     db	     ??01F0	     ;
1  5170	0783  27 44 49			     db	     "'DI"	     ;
1  5171	0786  077A			     dw	     lastl	     ;
1  5172	0788  0BD8r			     dw	     cfadr	     ;
1  5173	078A			     heads   ends
1  5174					     cseg	     ;
   5175	0BD8  B0 0C		     tdi:    mov     al,12
   5176					     ignore2
1  5177	0BDA  A9			     db	     0a9h    ;
   5178
   5179					     hdr     1,"'SI"
1  5180					     cseg
1  5181	078A			     heads   segment public	     ;
1  5182	078A  03			     db	     ??01F2	     ;
1  5183	078B  27 53 49			     db	     "'SI"	     ;
1  5184	078E  0782			     dw	     lastl	     ;
1  5185	0790  0BDBr			     dw	     cfadr	     ;
1  5186	0792			     heads   ends
1  5187					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 92
kernel.asm



   5188	0BDB  B0 0A		     tsi:    mov     al,10
   5189					     ignore2
1  5190	0BDD  A9			     db	     0a9h    ;
   5191
   5192					     hdr     1,"'BP"
1  5193					     cseg
1  5194	0792			     heads   segment public	     ;
1  5195	0792  03			     db	     ??01F4	     ;
1  5196	0793  27 42 50			     db	     "'BP"	     ;
1  5197	0796  078A			     dw	     lastl	     ;
1  5198	0798  0BDEr			     dw	     cfadr	     ;
1  5199	079A			     heads   ends
1  5200					     cseg	     ;
   5201	0BDE  B0 08		     tbp:    mov     al,8
   5202					     ignore2
1  5203	0BE0  A9			     db	     0a9h    ;
   5204
   5205					     hdr     1,"'DH"
1  5206					     cseg
1  5207	079A			     heads   segment public	     ;
1  5208	079A  03			     db	     ??01F6	     ;
1  5209	079B  27 44 48			     db	     "'DH"	     ;
1  5210	079E  0792			     dw	     lastl	     ;
1  5211	07A0  0BE1r			     dw	     cfadr	     ;
1  5212	07A2			     heads   ends
1  5213					     cseg	     ;
   5214	0BE1  B0 07		     tdh:    mov     al,7
   5215					     ignore2
1  5216	0BE3  A9			     db	     0a9h    ;
   5217
   5218					     hdr     1,"'DX"
1  5219					     cseg
1  5220	07A2			     heads   segment public	     ;
1  5221	07A2  03			     db	     ??01F8	     ;
1  5222	07A3  27 44 58			     db	     "'DX"	     ;
1  5223	07A6  079A			     dw	     lastl	     ;
1  5224	07A8  0BE4r			     dw	     cfadr	     ;
1  5225	07AA			     heads   ends
1  5226					     cseg	     ;
   5227	0BE4  B0 06		     tdx:    mov     al,6
   5228					     ignore2
1  5229	0BE6  A9			     db	     0a9h    ;
   5230
   5231					     hdr     1,"'CH"
1  5232					     cseg
1  5233	07AA			     heads   segment public	     ;
1  5234	07AA  03			     db	     ??01FA	     ;
1  5235	07AB  27 43 48			     db	     "'CH"	     ;
1  5236	07AE  07A2			     dw	     lastl	     ;
1  5237	07B0  0BE7r			     dw	     cfadr	     ;
1  5238	07B2			     heads   ends
1  5239					     cseg	     ;
   5240	0BE7  B0 05		     tch:    mov     al,5
   5241					     ignore2
1  5242	0BE9  A9			     db	     0a9h    ;
   5243
   5244					     hdr     1,"'CX"
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 93
kernel.asm



1  5245					     cseg
1  5246	07B2			     heads   segment public	     ;
1  5247	07B2  03			     db	     ??01FC	     ;
1  5248	07B3  27 43 58			     db	     "'CX"	     ;
1  5249	07B6  07AA			     dw	     lastl	     ;
1  5250	07B8  0BEAr			     dw	     cfadr	     ;
1  5251	07BA			     heads   ends
1  5252					     cseg	     ;
   5253	0BEA  B0 04		     tcx:    mov     al,4
   5254					     ignore2
1  5255	0BEC  A9			     db	     0a9h    ;
   5256
   5257					     hdr     1,"'BH"
1  5258					     cseg
1  5259	07BA			     heads   segment public	     ;
1  5260	07BA  03			     db	     ??01FE	     ;
1  5261	07BB  27 42 48			     db	     "'BH"	     ;
1  5262	07BE  07B2			     dw	     lastl	     ;
1  5263	07C0  0BEDr			     dw	     cfadr	     ;
1  5264	07C2			     heads   ends
1  5265					     cseg	     ;
   5266	0BED  B0 03		     tbh:    mov     al,3
   5267					     ignore2
1  5268	0BEF  A9			     db	     0a9h    ;
   5269
   5270					     hdr     1,"'BX"
1  5271					     cseg
1  5272	07C2			     heads   segment public	     ;
1  5273	07C2  03			     db	     ??0200	     ;
1  5274	07C3  27 42 58			     db	     "'BX"	     ;
1  5275	07C6  07BA			     dw	     lastl	     ;
1  5276	07C8  0BF0r			     dw	     cfadr	     ;
1  5277	07CA			     heads   ends
1  5278					     cseg	     ;
   5279	0BF0  B0 02		     tbx:    mov     al,2
   5280					     ignore2
1  5281	0BF2  A9			     db	     0a9h    ;
   5282
   5283					     hdr     1,"'AH"
1  5284					     cseg
1  5285	07CA			     heads   segment public	     ;
1  5286	07CA  03			     db	     ??0202	     ;
1  5287	07CB  27 41 48			     db	     "'AH"	     ;
1  5288	07CE  07C2			     dw	     lastl	     ;
1  5289	07D0  0BF3r			     dw	     cfadr	     ;
1  5290	07D2			     heads   ends
1  5291					     cseg	     ;
   5292	0BF3  B0 01		     tah:    mov     al,1
   5293					     ignore2
1  5294	0BF5  A9			     db	     0a9h    ;
   5295
   5296					     hdr     1,"'AX"
1  5297					     cseg
1  5298	07D2			     heads   segment public	     ;
1  5299	07D2  03			     db	     ??0204	     ;
1  5300	07D3  27 41 58			     db	     "'AX"	     ;
1  5301	07D6  07CA			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 94
kernel.asm



1  5302	07D8  0BF6r			     dw	     cfadr	     ;
1  5303	07DA			     heads   ends
1  5304					     cseg	     ;
   5305	0BF6  B0 00		     tax:    mov     al,0
   5306	0BF8  98			     cbw
   5307	0BF9  05 0B50r			     add     ax,offset regs
   5308	0BFC  E9 F5BA			     jmp     apush
   5309
   5310				     ;	     DOSERR?  (	-- ior )     'flags @ 1	and if 'ax @ end 0
   5311
   5312					     hdr     1,'DOSERR?'
1  5313					     cseg
1  5314	07DA			     heads   segment public	     ;
1  5315	07DA  07			     db	     ??0206	     ;
1  5316	07DB  44 4F 53 45 52 52	3F	     db	     'DOSERR?'		     ;
1  5317	07E2  07D2			     dw	     lastl	     ;
1  5318	07E4  0BFFr			     dw	     cfadr	     ;
1  5319	07E6			     heads   ends
1  5320					     cseg	     ;
   5321	0BFF  F6 06 0B62r 01	     doserr: test    byte ptr regs+18,1
   5322	0C04  A1 0B50r			     mov     ax,regs
   5323	0C07  74 08		     doserr1:jz	     doserr3
   5324	0C09  F9			     stc
   5325
   5326				     ;	     test for DOS error
   5327
   5328	0C0A  73 05		     doserr2:jnc     doserr3
   5329	0C0C  B4 FE			     mov     ah,0feh	     ; convert DOS error# to ior value
   5330	0C0E  E9 F5A8			     jmp     apush
   5331
   5332	0C11  E9 0365		     doserr3:jmp     zero
   5333
   5334				     ;	     >IOR  ( err# -- ior )   dup if $fe00 or then
   5335
   5336					     hdr     1,'>IOR'
1  5337					     cseg
1  5338	07E6			     heads   segment public	     ;
1  5339	07E6  04			     db	     ??0208	     ;
1  5340	07E7  3E 49 4F 52		     db	     '>IOR'	     ;
1  5341	07EB  07DA			     dw	     lastl	     ;
1  5342	07ED  0C14r			     dw	     cfadr	     ;
1  5343	07EF			     heads   ends
1  5344					     cseg	     ;
   5345	0C14  58		     iorr:   pop     ax
   5346	0C15  0B C0			     or	     ax,ax
   5347	0C17  EB EE			     jmp     doserr1
   5348
   5349				     ; Port fetch and store instructions
   5350
   5351				     ;	     TICKS  ( -- d )
   5352
   5353					     hdr     1,'TICKS'
1  5354					     cseg
1  5355	07EF			     heads   segment public	     ;
1  5356	07EF  05			     db	     ??020A	     ;
1  5357	07F0  54 49 43 4B 53		     db	     'TICKS'	     ;
1  5358	07F5  07E6			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 95
kernel.asm



1  5359	07F7  0C19r			     dw	     cfadr	     ;
1  5360	07F9			     heads   ends
1  5361					     cseg	     ;
   5362	0C19  E8 F5F3		     ticks:  call    tod
   5363	0C1C  E9 F599			     jmp     dpush
   5364
   5365				     ;	     WAIT-TICK	( -- )
   5366
   5367					     hdr     1,'WAIT-TICK'
1  5368					     cseg
1  5369	07F9			     heads   segment public	     ;
1  5370	07F9  09			     db	     ??020C	     ;
1  5371	07FA  57 41 49 54 2D 54	49+	     db	     'WAIT-TICK'	     ;
   5372	      43 4B
1  5373	0803  07EF			     dw	     lastl	     ;
1  5374	0805  0C1Fr			     dw	     cfadr	     ;
1  5375	0807			     heads   ends
1  5376					     cseg	     ;
   5377	0C1F  E8 F5FE		     wtick:  call    tsync
   5378					     nextt
1  5379	0C22  AD			     lodsw
1  5380	0C23  FF E0			     jmp     ax
   5381
   5382				     ;	     (/MS)  ( -- )	     detect timer0 mode	and adjust MS
   5383
   5384					     hdr     x,'(/MS)'
1  5385					     cseg	     ;
   5386	0C25  A1 0FB8r		     psms:   mov     ax,nmscon	     ; assume mode 3
   5387	0C28  A3 0C8Ar			     mov     word ptr ms5,ax
   5388	0C2B  C7 06 0FBAr 0003		     mov     ntmode,3
   5389	0C31  E8 F5EC			     call    tsync	     ; sync to tick timer
   5390	0C34  52			     push    dx		     ; TOD
   5391	0C35  50			     push    ax
   5392	0C36  B9 0118			     mov     cx,280	     ; wait ~5 ticks
   5393	0C39  E8 0033			     call    ms1
   5394	0C3C  E8 F5D0			     call    tod
   5395	0C3F  59			     pop     cx
   5396	0C40  3B C1			     cmp     ax,cx
   5397	0C42  73 04			     jnc     psms1
   5398	0C44  81 C2 00B0		     add     dx,0b0h	     ; midnight	crossed
   5399	0C48  58		     psms1:  pop     ax
   5400	0C49  2B D0			     sub     dx,ax
   5401	0C4B  83 FA 08			     cmp     dx,8
   5402	0C4E  72 08			     jc	     psms2
   5403	0C50  D1 3E 0C8Ar		     sar     word ptr ms5,1  ; was mode	2
   5404	0C54  FF 0E 0FBAr		     dec     ntmode
   5405	0C58			     psms2:  nextt
1  5406	0C58  AD			     lodsw
1  5407	0C59  FF E0			     jmp     ax
   5408
   5409				     ;	     /MS  ( -- )	     detect timer0 mode	and adjust MS
   5410
   5411					     hdr     1,'/MS'
1  5412					     cseg
1  5413	0807			     heads   segment public	     ;
1  5414	0807  03			     db	     ??0210	     ;
1  5415	0808  2F 4D 53			     db	     '/MS'	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 96
kernel.asm



1  5416	080B  07F9			     dw	     lastl	     ;
1  5417	080D  0C5Br			     dw	     cfadr	     ;
1  5418	080F			     heads   ends
1  5419					     cseg	     ;
   5420	0C5B  E8 F63C		     smss:   call    aexec
   5421	0C5E  0C25r			     dw	     psms
   5422
   5423				     ;	     (BEEP)  ( -- )
   5424
   5425					     hdr     x,'(BEEP)'
1  5426					     cseg	     ;
   5427	0C60  B8 004B		     beep0:  mov     ax,75
   5428	0C63  50			     push    ax
   5429	0C64  B9 0258			     mov     cx,600
   5430	0C67  E8 0032			     call    sound1
   5431
   5432				     ;	     (MS)  ( ms	-- )
   5433
   5434					     hdr     x,'(MS)'
1  5435					     cseg	     ;
   5436	0C6A  59		     ms0:    pop     cx
   5437	0C6B  FF 36 0F97r		     push    tnext1
   5438
   5439				     ;	     delay (ms)	in CX	     ; uses timer 0
   5440
   5441	0C6F  E3 20		     ms1:    jcxz    ms6
   5442	0C71  51		     ms2:    push    cx
   5443	0C72  F6 C1 03			     test    cl,3	     ; PAUSE each 4mS for
   5444	0C75  75 07			     jnz     ms3	     ; multitasking
   5445	0C77  E8 F5FB			     call    docol
   5446	0C7A  0D5Er			     dw	     pause
   5447	0C7C  0292r			     dw	     exit1
   5448	0C7E  E8 0011		     ms3:    call    ms7
   5449	0C81  8B CB			     mov     cx,bx
   5450	0C83  E8 000C		     ms4:    call    ms7
   5451	0C86  2B D9			     sub     bx,cx
   5452	0C88  81 FB F6AE		     cmp     bx,-2386	     ; patched by COLD
   5453
   5454	      =MAIN:0C8A	     ms5     equ     $-cw
   5455
   5456	0C8C  73 F5			     jnc     ms4
   5457	0C8E  59			     pop     cx
   5458	0C8F  E2 E0			     loop    ms2
   5459	0C91  C3		     ms6:    ret
   5460
   5461
   5462	0C92  9C		     ms7:    pushf
   5463	0C93  FA			     cli
   5464	0C94  9D			     popf
   5465	0C95  C3			     ret
   5466
   5467
   5468				     ;	     (SOUND)  (	freq ms	-- )
   5469
   5470					     hdr     x,'(SOUND)'
1  5471					     cseg	     ;
   5472	0C96  58		     sound0: pop     ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 97
kernel.asm



   5473	0C97  59			     pop     cx
   5474	0C98  FF 36 0F97r		     push    tnext1
   5475
   5476	0C9C			     sound1:
   5477	0C9C  C3			     ret
   5478
   5479				     ;	     MS	 ( ms -- )
   5480
   5481					     hdr     1,'MS'
1  5482					     cseg
1  5483	080F			     heads   segment public	     ;
1  5484	080F  02			     db	     ??0218	     ;
1  5485	0810  4D 53			     db	     'MS'	     ;
1  5486	0812  0807			     dw	     lastl	     ;
1  5487	0814  0C9Dr			     dw	     cfadr	     ;
1  5488	0816			     heads   ends
1  5489					     cseg	     ;
   5490	0C9D  E8 F5FA		     ms:     call    aexec
   5491	0CA0  0C6Ar			     dw	     ms0
   5492
   5493				     ;	     SOUND  ( freq ms -- )
   5494
   5495					     hdr     1,'SOUND'
1  5496					     cseg
1  5497	0816			     heads   segment public	     ;
1  5498	0816  05			     db	     ??021A	     ;
1  5499	0817  53 4F 55 4E 44		     db	     'SOUND'	     ;
1  5500	081C  080F			     dw	     lastl	     ;
1  5501	081E  0CA2r			     dw	     cfadr	     ;
1  5502	0820			     heads   ends
1  5503					     cseg	     ;
   5504	0CA2  E8 F5F5		     sound:  call    aexec
   5505	0CA5  0C96r			     dw	     sound0
   5506
   5507				     ;	     BEEP  ( --	)
   5508
   5509					     hdr     1,'BEEP'
1  5510					     cseg
1  5511	0820			     heads   segment public	     ;
1  5512	0820  04			     db	     ??021C	     ;
1  5513	0821  42 45 45 50		     db	     'BEEP'	     ;
1  5514	0825  0816			     dw	     lastl	     ;
1  5515	0827  0CA7r			     dw	     cfadr	     ;
1  5516	0829			     heads   ends
1  5517					     cseg	     ;
   5518	0CA7  E8 F5F0		     beep:   call    aexec
   5519	0CAA  0C60r			     dw	     beep0
   5520
   5521				     ;	     AT-XY  ( x	y -- )	     position cursor at	col x, row y
   5522
   5523					     hdr     1,'AT-XY'	     ; not bounds checked - allows any
1  5524					     cseg
1  5525	0829			     heads   segment public	     ;
1  5526	0829  05			     db	     ??021E	     ;
1  5527	082A  41 54 2D 58 59		     db	     'AT-XY'	     ;
1  5528	082F  0820			     dw	     lastl	     ;
1  5529	0831  0CACr			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 98
kernel.asm



1  5530	0833			     heads   ends
1  5531					     cseg	     ;
   5532	0CAC  58		     atxy:   pop     ax		     ; BIOS permissible	value
   5533	0CAD  5A			     pop     dx
   5534	0CAE  8A F0			     mov     dh,al
   5535	0CB0  02 16 0107r		     add     dl,wmin
   5536	0CB4  02 36 0108r		     add     dh,wmin+1
   5537	0CB8  E8 F533		     atxy1:  call    scurs
   5538					     nextt
1  5539	0CBB  AD			     lodsw
1  5540	0CBC  FF E0			     jmp     ax
   5541
   5542				     ;	     GET-XY  ( -- x y )	     get cursor	position col x,	row y
   5543
   5544					     hdr     1,'GET-XY'
1  5545					     cseg
1  5546	0833			     heads   segment public	     ;
1  5547	0833  06			     db	     ??0220	     ;
1  5548	0834  47 45 54 2D 58 59		     db	     'GET-XY'		     ;
1  5549	083A  0829			     dw	     lastl	     ;
1  5550	083C  0CBEr			     dw	     cfadr	     ;
1  5551	083E			     heads   ends
1  5552					     cseg	     ;
   5553	0CBE  E8 F530		     getxy:  call    gcurs
   5554	0CC1  2A 16 0107r		     sub     dl,wmin
   5555	0CC5  2A 36 0108r		     sub     dh,wmin+1
   5556	0CC9  2B C0		     getxy1: sub     ax,ax
   5557	0CCB  86 C6			     xchg    al,dh
   5558	0CCD  E9 F4E8			     jmp     dpush
   5559
   5560				     ;	     SET-WINDOW	 ( x1 y1 x2 y2 -- )
   5561
   5562					     hdr     1,'SET-WINDOW'
1  5563					     cseg
1  5564	083E			     heads   segment public	     ;
1  5565	083E  0A			     db	     ??0222	     ;
1  5566	083F  53 45 54 2D 57 49	4E+	     db	     'SET-WINDOW'	     ;
   5567	      44 4F 57
1  5568	0849  0833			     dw	     lastl	     ;
1  5569	084B  0CD0r			     dw	     cfadr	     ;
1  5570	084D			     heads   ends
1  5571					     cseg	     ;
   5572	0CD0  58		     setwin: pop     ax
   5573	0CD1  59			     pop     cx
   5574	0CD2  8A E8			     mov     ch,al
   5575	0CD4  58			     pop     ax
   5576	0CD5  5A			     pop     dx
   5577	0CD6  8A F0			     mov     dh,al
   5578	0CD8  89 16 0107r		     mov     word ptr wmin,dx
   5579	0CDC  89 0E 0109r		     mov     word ptr wmax,cx
   5580	0CE0  EB D6			     jmp     atxy1
   5581
   5582				     ;	     GET-WINDOW	 ( -- x1 y1 x2 y2 )
   5583
   5584					     hdr     1,'GET-WINDOW'
1  5585					     cseg
1  5586	084D			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 99
kernel.asm



1  5587	084D  0A			     db	     ??0224	     ;
1  5588	084E  47 45 54 2D 57 49	4E+	     db	     'GET-WINDOW'	     ;
   5589	      44 4F 57
1  5590	0858  083E			     dw	     lastl	     ;
1  5591	085A  0CE2r			     dw	     cfadr	     ;
1  5592	085C			     heads   ends
1  5593					     cseg	     ;
   5594	0CE2  8B 16 0107r	     getwin: mov     dx,word ptr wmin
   5595	0CE6  2B C0			     sub     ax,ax
   5596	0CE8  86 C6			     xchg    al,dh
   5597	0CEA  52			     push    dx
   5598	0CEB  50			     push    ax
   5599	0CEC  8B 16 0109r		     mov     dx,word ptr wmax
   5600	0CF0  EB D7			     jmp     getxy1
   5601
   5602				     ;	     ATTRIB  ( -- addr )     address of	video attribute	byte
   5603
   5604					     hdr     1,'ATTRIB'
1  5605					     cseg
1  5606	085C			     heads   segment public	     ;
1  5607	085C  06			     db	     ??0226	     ;
1  5608	085D  41 54 54 52 49 42		     db	     'ATTRIB'		     ;
1  5609	0863  084D			     dw	     lastl	     ;
1  5610	0865  0CF2r			     dw	     cfadr	     ;
1  5611	0867			     heads   ends
1  5612					     cseg	     ;
   5613	0CF2  E8 F6DD		     attrib: call    docon
   5614	0CF5  0103r			     dw	     cattr
   5615
   5616				     ;	     FOREGROUND	 ( u --	)    0-15
   5617
   5618					     hdr     1,'FOREGROUND'
1  5619					     cseg
1  5620	0867			     heads   segment public	     ;
1  5621	0867  0A			     db	     ??0228	     ;
1  5622	0868  46 4F 52 45 47 52	4F+	     db	     'FOREGROUND'	     ;
   5623	      55 4E 44
1  5624	0872  085C			     dw	     lastl	     ;
1  5625	0874  0CF7r			     dw	     cfadr	     ;
1  5626	0876			     heads   ends
1  5627					     cseg	     ;
   5628	0CF7  58		     fg:     pop     ax
   5629	0CF8  24 0F			     and     al,0fh
   5630	0CFA  80 26 0103r F0		     and     byte ptr cattr,0f0h
   5631	0CFF  08 06 0103r	     fg1:    or	     cattr,al
   5632					     nextt
1  5633	0D03  AD			     lodsw
1  5634	0D04  FF E0			     jmp     ax
   5635
   5636				     ;	     BACKGROUND	 ( u --	)    0-7
   5637
   5638					     hdr     1,'BACKGROUND'
1  5639					     cseg
1  5640	0876			     heads   segment public	     ;
1  5641	0876  0A			     db	     ??022A	     ;
1  5642	0877  42 41 43 4B 47 52	4F+	     db	     'BACKGROUND'	     ;
   5643	      55 4E 44
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 100
kernel.asm



1  5644	0881  0867			     dw	     lastl	     ;
1  5645	0883  0D06r			     dw	     cfadr	     ;
1  5646	0885			     heads   ends
1  5647					     cseg	     ;
   5648	0D06  58		     bg:     pop     ax
   5649	0D07  24 07			     and     al,7
   5650	0D09  B1 04			     mov     cl,4
   5651	0D0B  D2 E0			     shl     al,cl
   5652	0D0D  80 26 0103r 8F		     and     byte ptr cattr,8fh
   5653	0D12  EB EB			     jmp     fg1
   5654
   5655				     ;	     COLOR-TABLE  ( -- addr )	     default colors
   5656
   5657					     hdr     1,'COLOR-TABLE'
1  5658					     cseg
1  5659	0885			     heads   segment public	     ;
1  5660	0885  0B			     db	     ??022C	     ;
1  5661	0886  43 4F 4C 4F 52 2D	54+	     db	     'COLOR-TABLE'	     ;
   5662	      41 42 4C 45
1  5663	0891  0876			     dw	     lastl	     ;
1  5664	0893  0D14r			     dw	     cfadr	     ;
1  5665	0895			     heads   ends
1  5666					     cseg	     ;
   5667	0D14  E8 F4A3		     clrtbl: call    docre
   5668	0D17  07		     dnorm   db	     07h	     ; normal
   5669	0D18  70		     dinver  db	     70h	     ; inverse
   5670	0D19  03		     dbold   db	     03h	     ; bold
   5671	0D1A  0B		     dbrite  db	     0Bh	     ; bright
   5672
   5673				     ;	     NORMAL  ( -- )
   5674
   5675					     hdr     1,'NORMAL'
1  5676					     cseg
1  5677	0895			     heads   segment public	     ;
1  5678	0895  06			     db	     ??022E	     ;
1  5679	0896  4E 4F 52 4D 41 4C		     db	     'NORMAL'		     ;
1  5680	089C  0885			     dw	     lastl	     ;
1  5681	089E  0D1Br			     dw	     cfadr	     ;
1  5682	08A0			     heads   ends
1  5683					     cseg	     ;
   5684	0D1B  A0 0D17r		     vnorm:  mov     al,dnorm
   5685	0D1E  A2 0103r		     vnorm1: mov     cattr,al
   5686					     nextt
1  5687	0D21  AD			     lodsw
1  5688	0D22  FF E0			     jmp     ax
   5689
   5690				     ;	     INVERSE ( -- )
   5691
   5692					     hdr     1,'INVERSE'
1  5693					     cseg
1  5694	08A0			     heads   segment public	     ;
1  5695	08A0  07			     db	     ??0230	     ;
1  5696	08A1  49 4E 56 45 52 53	45	     db	     'INVERSE'		     ;
1  5697	08A8  0895			     dw	     lastl	     ;
1  5698	08AA  0D24r			     dw	     cfadr	     ;
1  5699	08AC			     heads   ends
1  5700					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 101
kernel.asm



   5701	0D24  A0 0D18r		     vinver: mov     al,dinver
   5702	0D27  EB F5			     jmp     vnorm1
   5703
   5704				     ;	     BOLD  ( --	)
   5705
   5706					     hdr     1,'BOLD'
1  5707					     cseg
1  5708	08AC			     heads   segment public	     ;
1  5709	08AC  04			     db	     ??0232	     ;
1  5710	08AD  42 4F 4C 44		     db	     'BOLD'	     ;
1  5711	08B1  08A0			     dw	     lastl	     ;
1  5712	08B3  0D29r			     dw	     cfadr	     ;
1  5713	08B5			     heads   ends
1  5714					     cseg	     ;
   5715	0D29  A0 0D19r		     vbold:  mov     al,dbold
   5716	0D2C  EB F0			     jmp     vnorm1
   5717
   5718				     ;	     BRIGHT  ( -- )
   5719
   5720					     hdr     1,'BRIGHT'
1  5721					     cseg
1  5722	08B5			     heads   segment public	     ;
1  5723	08B5  06			     db	     ??0234	     ;
1  5724	08B6  42 52 49 47 48 54		     db	     'BRIGHT'		     ;
1  5725	08BC  08AC			     dw	     lastl	     ;
1  5726	08BE  0D2Er			     dw	     cfadr	     ;
1  5727	08C0			     heads   ends
1  5728					     cseg	     ;
   5729	0D2E  A0 0D1Ar		     vbrite: mov     al,dbrite
   5730	0D31  EB EB			     jmp     vnorm1
   5731
   5732				     ;	     CLEAR-LINE	 ( -- )
   5733
   5734					     hdr     1,'CLEAR-LINE'
1  5735					     cseg
1  5736	08C0			     heads   segment public	     ;
1  5737	08C0  0A			     db	     ??0236	     ;
1  5738	08C1  43 4C 45 41 52 2D	4C+	     db	     'CLEAR-LINE'	     ;
   5739	      49 4E 45
1  5740	08CB  08B5			     dw	     lastl	     ;
1  5741	08CD  0D33r			     dw	     cfadr	     ;
1  5742	08CF			     heads   ends
1  5743					     cseg	     ;
   5744	0D33  E8 F4BB		     cleol:  call    gcurs
   5745	0D36  B8 0600			     mov     ax,0600h
   5746	0D39  8B CA			     mov     cx,dx
   5747	0D3B  8A 16 0109r		     mov     dl,wmax
   5748	0D3F  E8 F4B7		     cleol1: call    videoa
   5749					     nextt
1  5750	0D42  AD			     lodsw
1  5751	0D43  FF E0			     jmp     ax
   5752
   5753				     ;	     INSERT-LINE  ( -- )
   5754
   5755					     hdr     1,'INSERT-LINE'
1  5756					     cseg
1  5757	08CF			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 102
kernel.asm



1  5758	08CF  0B			     db	     ??0238	     ;
1  5759	08D0  49 4E 53 45 52 54	2D+	     db	     'INSERT-LINE'	     ;
   5760	      4C 49 4E 45
1  5761	08DB  08C0			     dw	     lastl	     ;
1  5762	08DD  0D45r			     dw	     cfadr	     ;
1  5763	08DF			     heads   ends
1  5764					     cseg	     ;
   5765	0D45  B8 0701		     insln:  mov     ax,0701h
   5766	0D48  50		     insln1: push    ax
   5767	0D49  E8 F4A5			     call    gcurs
   5768	0D4C  58			     pop     ax
   5769	0D4D  8A EE			     mov     ch,dh
   5770	0D4F  8A 0E 0107r		     mov     cl,wmin
   5771	0D53  8B 16 0109r		     mov     dx,word ptr wmax
   5772	0D57  EB E6			     jmp     cleol1
   5773
   5774				     ;	     DELETE-LINE  ( -- )
   5775
   5776					     hdr     1,'DELETE-LINE'
1  5777					     cseg
1  5778	08DF			     heads   segment public	     ;
1  5779	08DF  0B			     db	     ??023A	     ;
1  5780	08E0  44 45 4C 45 54 45	2D+	     db	     'DELETE-LINE'	     ;
   5781	      4C 49 4E 45
1  5782	08EB  08CF			     dw	     lastl	     ;
1  5783	08ED  0D59r			     dw	     cfadr	     ;
1  5784	08EF			     heads   ends
1  5785					     cseg	     ;
   5786	0D59  B8 0601		     delln:  mov     ax,0601h
   5787	0D5C  EB EA			     jmp     insln1
   5788
   5789				     ;	     PAUSE  ( -- )
   5790
   5791					     hdr     1,'PAUSE'	     ; multitasking support
1  5792					     cseg
1  5793	08EF			     heads   segment public	     ;
1  5794	08EF  05			     db	     ??023C	     ;
1  5795	08F0  50 41 55 53 45		     db	     'PAUSE'	     ;
1  5796	08F5  08DF			     dw	     lastl	     ;
1  5797	08F7  0D5Er			     dw	     cfadr	     ;
1  5798	08F9			     heads   ends
1  5799					     cseg	     ;
   5800	0D5E  E8 F539		     pause:  call    aexec
   5801	0D61  0000		     pause1  dw	     0		     ; patched by COLD
   5802
   5803				     ;	     bios console key test  (AL)
   5804
   5805					     cseg
   5806
   5807	0D63  80 3E 01E3r 00	     bconq:  cmp     byte ptr kbpend,0
   5808	0D68  75 06			     jnz     bconq1
   5809	0D6A  8A 26 01E2r		     mov     ah,kbfn+1
   5810	0D6E  CD 16			     int     16h
   5811	0D70  B0 00		     bconq1: mov     al,0
   5812	0D72  74 02			     jz	     bconq2
   5813	0D74  FE C8			     dec     al
   5814	0D76  C3		     bconq2: ret
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 103
kernel.asm



   5815
   5816				     ;	     dos console key test  (AL)
   5817
   5818					     cseg
   5819
   5820	0D77  B4 0B		     dconq:  mov     ah,0bh
   5821	0D79  CD 21			     int     21h
   5822	0D7B  C3			     ret
   5823
   5824				     ;	     bios console in  (AL)
   5825
   5826					     cseg
   5827
   5828	0D7C  2A C0		     bconi:  sub     al,al
   5829	0D7E  86 06 01E3r		     xchg    al,kbpend
   5830	0D82  0A C0			     or	     al,al
   5831	0D84  75 1E			     jnz     bconi2
   5832	0D86  8A 26 01E1r		     mov     ah,kbfn
   5833	0D8A  CD 16			     int     16h
   5834	0D8C  0A C0			     or	     al,al
   5835	0D8E  74 0A			     jz	     bconi1	     ; normal extended key
   5836	0D90  3C E0			     cmp     al,0E0h	     ; handle special extended
   5837	0D92  75 10			     jnz     bconi2
   5838	0D94  0A E4			     or	     ah,ah	     ; skip ALT+224
   5839	0D96  74 0C			     jz	     bconi2
   5840	0D98  2A C0			     sub     al,al
   5841	0D9A  88 26 01E3r	     bconi1: mov     kbpend,ah
   5842	0D9E  0A E4			     or	     ah,ah
   5843	0DA0  75 02			     jnz     bconi2
   5844	0DA2  B0 03			     mov     al,3
   5845	0DA4  C3		     bconi2: ret
   5846
   5847				     ;	     dos console in  (AL)
   5848
   5849					     cseg
   5850
   5851	0DA5  B4 08		     dconi:  mov     ah,8	     ; allow ctl-C/Break
   5852	0DA7  CD 21			     int     21h
   5853	0DA9  C3			     ret
   5854
   5855				     ;	     dos console out  (AL)
   5856
   5857					     cseg
   5858
   5859	0DAA  B4 02		     dcono:  mov     ah,2	     ; allow ctl-C/Break
   5860	0DAC  8A D0			     mov     dl,al
   5861	0DAE  CD 21			     int     21h
   5862	0DB0  C3			     ret
   5863
   5864				     ;	     bios console out  (AL)
   5865
   5866					     cseg
   5867
   5868	0DB1  50		     bcono:  push    ax
   5869	0DB2  E8 F43C			     call    gcurs
   5870	0DB5  58			     pop     ax
   5871	0DB6  3C 07			     cmp     al,bel	     ; BEL
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 104
kernel.asm



   5872	0DB8  74 49			     jz	     bcono3
   5873	0DBA  3C 08			     cmp     al,bs
   5874	0DBC  74 50			     jz	     bcono5
   5875	0DBE  3C 0D			     cmp     al,cr	     ; CR
   5876	0DC0  74 48			     jz	     bcono4
   5877	0DC2  3C 0A			     cmp     al,lf	     ; LF
   5878	0DC4  74 1E			     jz	     bcono1
   5879	0DC6  3C 09			     cmp     al,tab	     ; TAB
   5880	0DC8  74 4E			     jz	     bcono6
   5881	0DCA  B4 09			     mov     ah,9
   5882	0DCC  8A 1E 0103r		     mov     bl,cattr
   5883	0DD0  B9 0001			     mov     cx,1
   5884	0DD3  52			     push    dx
   5885	0DD4  E8 F41C			     call    videop
   5886	0DD7  5A			     pop     dx
   5887	0DD8  FE C2			     inc     dl
   5888	0DDA  3A 16 0109r		     cmp     dl,wmax
   5889	0DDE  76 20			     jna     bcono2
   5890	0DE0  8A 16 0107r		     mov     dl,wmin
   5891	0DE4  FE C6		     bcono1: inc     dh
   5892	0DE6  3A 36 010Ar		     cmp     dh,wmax+1
   5893	0DEA  76 14			     jna     bcono2
   5894	0DEC  FE CE			     dec     dh
   5895	0DEE  51			     push    cx
   5896	0DEF  52			     push    dx
   5897	0DF0  B8 0601			     mov     ax,0601h
   5898	0DF3  8B 0E 0107r		     mov     cx,word ptr wmin
   5899	0DF7  8B 16 0109r		     mov     dx,word ptr wmax
   5900	0DFB  E8 F3FB			     call    videoa
   5901	0DFE  5A			     pop     dx
   5902	0DFF  59			     pop     cx
   5903	0E00  E9 F3EB		     bcono2: jmp     scurs
   5904
   5905	0E03  B4 0E		     bcono3: mov     ah,0eh
   5906	0E05  E8 F3EB			     call    videop
   5907	0E08  EB F6			     jmp     bcono2
   5908
   5909	0E0A  8A 16 0107r	     bcono4: mov     dl,wmin
   5910	0E0E  3A 16 0107r	     bcono5: cmp     dl,wmin
   5911	0E12  74 EC			     jz	     bcono2
   5912	0E14  FE CA			     dec     dl
   5913	0E16  EB E8			     jmp     bcono2
   5914
   5915	0E18  2A 16 0107r	     bcono6: sub     dl,wmin
   5916	0E1C  80 E2 07			     and     dl,7
   5917	0E1F  B0 08			     mov     al,8
   5918	0E21  2A C2			     sub     al,dl
   5919	0E23  50		     bcono7: push    ax
   5920	0E24  B0 20			     mov     al,20h
   5921	0E26  E8 FF88			     call    bcono
   5922	0E29  58			     pop     ax
   5923	0E2A  FE C8			     dec     al
   5924	0E2C  75 F5			     jnz     bcono7
   5925	0E2E  EB D0			     jmp     bcono2
   5926
   5927					     cseg
   5928
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 105
kernel.asm



   5929	0E30  0E32r		     iofn    dw	     biosfn
   5930
   5931	0E32  0D63r		     biosfn  dw	     bconq	     ; bios functions
   5932	0E34  0D7Cr			     dw	     bconi
   5933	0E36  0DB1r			     dw	     bcono
   5934
   5935	0E38  0D77r		     dosfn   dw	     dconq	     ; dos functions
   5936	0E3A  0DA5r			     dw	     dconi
   5937	0E3C  0DAAr			     dw	     dcono
   5938
   5939				     ;	     BIOS-IO  (	-- )	     use BIOS for I/O calls
   5940
   5941					     hdr     1,'BIOS-IO'
1  5942					     cseg
1  5943	08F9			     heads   segment public	     ;
1  5944	08F9  07			     db	     ??023E	     ;
1  5945	08FA  42 49 4F 53 2D 49	4F	     db	     'BIOS-IO'		     ;
1  5946	0901  08EF			     dw	     lastl	     ;
1  5947	0903  0E3Er			     dw	     cfadr	     ;
1  5948	0905			     heads   ends
1  5949					     cseg	     ;
   5950	0E3E  B8 0E32r		     biosio: mov     ax,offset biosfn
   5951	0E41  A3 0E30r		     biosio1:mov     iofn,ax
   5952	0E44  C6 06 01E3r 00		     mov     byte ptr kbpend,0
   5953					     nextt
1  5954	0E49  AD			     lodsw
1  5955	0E4A  FF E0			     jmp     ax
   5956
   5957				     ;	     DOS-IO  ( -- )	     use DOS for I/O calls
   5958
   5959					     hdr     1,'DOS-IO'
1  5960					     cseg
1  5961	0905			     heads   segment public	     ;
1  5962	0905  06			     db	     ??0240	     ;
1  5963	0906  44 4F 53 2D 49 4F		     db	     'DOS-IO'		     ;
1  5964	090C  08F9			     dw	     lastl	     ;
1  5965	090E  0E4Cr			     dw	     cfadr	     ;
1  5966	0910			     heads   ends
1  5967					     cseg	     ;
   5968	0E4C  B8 0E38r		     dosio:  mov     ax,offset dosfn
   5969	0E4F  EB F0			     jmp     biosio1
   5970
   5971				     ;	     ?terminal	( -- flag )
   5972
   5973					     hdr     x,'?TERMINAL'
1  5974					     cseg	     ;
   5975	0E51  8B 1E 0E30r	     qterm:  mov     bx,iofn
   5976	0E55  FF 17			     call    [bx]
   5977	0E57  98			     cbw
   5978	0E58  E9 F35E			     jmp     apush
   5979
   5980				     ;	     KEY?  ( --	flag )	     (vkeyq) @execute pause
   5981
   5982					     hdr     1,'KEY?'
1  5983					     cseg
1  5984	0910			     heads   segment public	     ;
1  5985	0910  04			     db	     ??0244	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 106
kernel.asm



1  5986	0911  4B 45 59 3F		     db	     'KEY?'	     ;
1  5987	0915  0905			     dw	     lastl	     ;
1  5988	0917  0E5Br			     dw	     cfadr	     ;
1  5989	0919			     heads   ends
1  5990					     cseg	     ;
   5991	0E5B  E8 F417		     keyq:   call    docol
   5992	0E5E  02A8r 0F9Cr		     dw	     lit,vkeyq
   5993	0E62  029Ar			     dw	     aexec
   5994	0E64  0D5Er			     dw	     pause
   5995	0E66  0289r			     dw	     exit
   5996
   5997				     ;	     pckey  ( -- char )
   5998
   5999					     hdr     x,'PCKEY'
1  6000					     cseg	     ;
   6001	0E68  8B 1E 0E30r	     pckey:  mov     bx,iofn
   6002	0E6C  FF 57 02			     call    [bx+cw]
   6003	0E6F  2A E4			     sub     ah,ah
   6004	0E71  E9 F345			     jmp     apush
   6005
   6006				     ;	     conin  ( -- char )	     begin key?	until pckey
   6007				     ;				     0 of pckey	256 + then
   6008
   6009					     hdr     x,'CONIN'
1  6010					     cseg	     ;
   6011	0E74  E8 F3FE		     conin:  call    docol
   6012	0E77  0E5Br		     conin1  dw	     keyq
   6013	0E79  0A92r 0E77r		     dw	     zbran,conin1
   6014	0E7D  0E68r			     dw	     pckey
   6015	0E7F  0F79r			     dw	     zero
   6016	0E81  0A86r 0E8Dr		     dw	     pof,conin2
   6017	0E85  0E68r			     dw	     pckey
   6018	0E87  02A8r 0100		     dw	     lit,256
   6019	0E8B  076Dr			     dw	     plus
   6020	0E8D  0289r		     conin2  dw	     exit
   6021
   6022				     ;	     KEY  ( -- char )	     (vkey) @execute pause
   6023
   6024					     hdr     1,'KEY'
1  6025					     cseg
1  6026	0919			     heads   segment public	     ;
1  6027	0919  03			     db	     ??024A	     ;
1  6028	091A  4B 45 59			     db	     'KEY'	     ;
1  6029	091D  0910			     dw	     lastl	     ;
1  6030	091F  0E8Fr			     dw	     cfadr	     ;
1  6031	0921			     heads   ends
1  6032					     cseg	     ;
   6033	0E8F  E8 F3E3		     key:    call    docol
   6034	0E92  02A8r 0F9Er		     dw	     lit,vkey
   6035	0E96  029Ar			     dw	     aexec
   6036	0E98  0D5Er			     dw	     pause
   6037	0E9A  0289r			     dw	     exit
   6038
   6039				     ;	     cls  ( -- )	     home cursor and clear-screen sequence
   6040
   6041					     cseg
   6042
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 107
kernel.asm



   6043	0E9C  B8 0600		     cls:    mov     ax,0600h
   6044	0E9F  8B 0E 0107r		     mov     cx,word ptr wmin
   6045	0EA3  51			     push    cx
   6046	0EA4  8B 16 0109r		     mov     dx,word ptr wmax
   6047	0EA8  E8 F34E			     call    videoa
   6048	0EAB  5A			     pop     dx
   6049	0EAC  E8 F33F			     call    scurs
   6050					     nextt
1  6051	0EAF  AD			     lodsw
1  6052	0EB0  FF E0			     jmp     ax
   6053
   6054				     ;	     conout  ( char -- )
   6055
   6056					     hdr     x,'CONOUT'
1  6057					     cseg	     ;
   6058	0EB2  58		     conout: pop     ax
   6059	0EB3  3C 0C			     cmp     al,ff	     ; FF
   6060	0EB5  74 E5			     jz	     cls
   6061	0EB7  8B 1E 0E30r		     mov     bx,iofn
   6062	0EBB  FF 57 04			     call    [bx+cw*2]
   6063					     nextt
1  6064	0EBE  AD			     lodsw
1  6065	0EBF  FF E0			     jmp     ax
   6066
   6067				     ;	     lstout  ( char -- )
   6068
   6069					     hdr     x,'LSTOUT'
1  6070					     cseg	     ;
   6071	0EC1  5A		     lstout: pop     dx
   6072	0EC2  B4 05			     mov     ah,5
   6073	0EC4  CD 21			     int     21h
   6074					     nextt
1  6075	0EC6  AD			     lodsw
1  6076	0EC7  FF E0			     jmp     ax
   6077
   6078				     ;	     PAGE  ( --	)	     12	emit
   6079
   6080					     hdr     1,'PAGE'
1  6081					     cseg
1  6082	0921			     heads   segment public	     ;
1  6083	0921  04			     db	     ??0250	     ;
1  6084	0922  50 41 47 45		     db	     'PAGE'	     ;
1  6085	0926  0919			     dw	     lastl	     ;
1  6086	0928  0EC9r			     dw	     cfadr	     ;
1  6087	092A			     heads   ends
1  6088					     cseg	     ;
   6089	0EC9  B0 0C		     pagee:  mov     al,ff	     ; formfeed	char
   6090					     ignore2
1  6091	0ECB  A9			     db	     0a9h    ;
   6092
   6093				     ;	     SPACE  ( -- )	     32	emit
   6094
   6095					     hdr     1,'SPACE'
1  6096					     cseg
1  6097	092A			     heads   segment public	     ;
1  6098	092A  05			     db	     ??0252	     ;
1  6099	092B  53 50 41 43 45		     db	     'SPACE'	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 108
kernel.asm



1  6100	0930  0921			     dw	     lastl	     ;
1  6101	0932  0ECCr			     dw	     cfadr	     ;
1  6102	0934			     heads   ends
1  6103					     cseg	     ;
   6104	0ECC  B0 20		     space:  mov     al,20h
   6105	0ECE  2A E4			     sub     ah,ah
   6106	0ED0  50			     push    ax
   6107				     ;	     jmp     emit
   6108
   6109				     ;	     EMIT  ( char -- )	     (vemit) @execute 1	out +! pause
   6110
   6111					     hdr     1,'EMIT'
1  6112					     cseg
1  6113	0934			     heads   segment public	     ;
1  6114	0934  04			     db	     ??0254	     ;
1  6115	0935  45 4D 49 54		     db	     'EMIT'	     ;
1  6116	0939  092A			     dw	     lastl	     ;
1  6117	093B  0ED1r			     dw	     cfadr	     ;
1  6118	093D			     heads   ends
1  6119					     cseg	     ;
   6120	0ED1  E8 F3A1		     emit:   call    docol
   6121	0ED4  02A8r 0FA0r		     dw	     lit,vemit
   6122	0ED8  029Ar			     dw	     aexec
   6123	0EDA  0F7Fr 1008r 044Cr		     dw	     one,outt,pstor
   6124	0EE0  0D5Er			     dw	     pause
   6125	0EE2  0289r			     dw	     exit
   6126
   6127				     ;	     TYPE  ( c-addr u -- )   0 ?do count emit loop drop
   6128
   6129					     hdr     1,'TYPE'
1  6130					     cseg
1  6131	093D			     heads   segment public	     ;
1  6132	093D  04			     db	     ??0256	     ;
1  6133	093E  54 59 50 45		     db	     'TYPE'	     ;
1  6134	0942  0934			     dw	     lastl	     ;
1  6135	0944  0EE4r			     dw	     cfadr	     ;
1  6136	0946			     heads   ends
1  6137					     cseg	     ;
   6138	0EE4  E8 F38E		     typee:  call    docol
   6139	0EE7  0F79r			     dw	     zero
   6140	0EE9  0AB4r 0EF5r		     dw	     xqdo,typee2
   6141	0EED  04A5r 0ED1r	     typee1  dw	     count,emit
   6142	0EF1  0A9Br 0EEDr		     dw	     xloop,typee1
   6143	0EF5  02FEr		     typee2  dw	     drop
   6144	0EF7  0289r			     dw	     exit
   6145
   6146				     ;	     SPACES  ( n -- )	     0max 0 ?do	space loop
   6147
   6148					     hdr     1,'SPACES'
1  6149					     cseg
1  6150	0946			     heads   segment public	     ;
1  6151	0946  06			     db	     ??0258	     ;
1  6152	0947  53 50 41 43 45 53		     db	     'SPACES'		     ;
1  6153	094D  093D			     dw	     lastl	     ;
1  6154	094F  0EF9r			     dw	     cfadr	     ;
1  6155	0951			     heads   ends
1  6156					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 109
kernel.asm



   6157	0EF9  E8 F379		     spacs:  call    docol
   6158	0EFC  0690r 0F79r		     dw	     zmax,zero
   6159	0F00  0AB4r 0F0Ar		     dw	     xqdo,spacs2
   6160	0F04  0ECCr		     spacs1  dw	     space
   6161	0F06  0A9Br 0F04r		     dw	     xloop,spacs1
   6162	0F0A  0289r		     spacs2  dw	     exit
   6163
   6164				     ;	     (CR)  ( --	c-addr u )   string (CR) 2 c, 13 c, 10 c, 0 c,
   6165
   6166					     hdr     1,'(CR)'
1  6167					     cseg
1  6168	0951			     heads   segment public	     ;
1  6169	0951  04			     db	     ??025A	     ;
1  6170	0952  28 43 52 29		     db	     '(CR)'	     ;
1  6171	0956  0946			     dw	     lastl	     ;
1  6172	0958  0F0Cr			     dw	     cfadr	     ;
1  6173	095A			     heads   ends
1  6174					     cseg	     ;
   6175	0F0C  E8 F596		     pcr:    call    count
   6176	0F0F  02 0D 0A 00		     db	     2,cr,lf,0
   6177
   6178				     ;	     CR	 ( -- )		     (cr) type out off
   6179
   6180					     hdr     1,'CR'
1  6181					     cseg
1  6182	095A			     heads   segment public	     ;
1  6183	095A  02			     db	     ??025C	     ;
1  6184	095B  43 52			     db	     'CR'	     ;
1  6185	095D  0951			     dw	     lastl	     ;
1  6186	095F  0F13r			     dw	     cfadr	     ;
1  6187	0961			     heads   ends
1  6188					     cseg	     ;
   6189	0F13  E8 F35F		     crr:    call    docol
   6190	0F16  0F0Cr 0EE4r		     dw	     pcr,typee
   6191	0F1A  1008r 045Br		     dw	     outt,off
   6192	0F1E  0289r			     dw	     exit
   6193
   6194				     ;	     CONSOLE  (	-- )	     (vcon) @ (vemit) !
   6195
   6196					     hdr     1,'CONSOLE'     ; set EMIT	to terminal
1  6197					     cseg
1  6198	0961			     heads   segment public	     ;
1  6199	0961  07			     db	     ??025E	     ;
1  6200	0962  43 4F 4E 53 4F 4C	45	     db	     'CONSOLE'		     ;
1  6201	0969  095A			     dw	     lastl	     ;
1  6202	096B  0F20r			     dw	     cfadr	     ;
1  6203	096D			     heads   ends
1  6204					     cseg	     ;
   6205	0F20  A1 0FA2r		     consol: mov     ax,vcon
   6206	0F23  A3 0FA0r			     mov     vemit,ax
   6207					     nextt
1  6208	0F26  AD			     lodsw
1  6209	0F27  FF E0			     jmp     ax
   6210
   6211				     ;	     PRINTER  (	-- )	     (vlst) @ (vemit) !
   6212
   6213					     hdr     1,'PRINTER'     ; set EMIT	to printer
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 110
kernel.asm



1  6214					     cseg
1  6215	096D			     heads   segment public	     ;
1  6216	096D  07			     db	     ??0260	     ;
1  6217	096E  50 52 49 4E 54 45	52	     db	     'PRINTER'		     ;
1  6218	0975  0961			     dw	     lastl	     ;
1  6219	0977  0F29r			     dw	     cfadr	     ;
1  6220	0979			     heads   ends
1  6221					     cseg	     ;
   6222	0F29  A1 0FA4r		     prnt:   mov     ax,vlst
   6223	0F2C  A3 0FA0r			     mov     vemit,ax
   6224					     nextt
1  6225	0F2F  AD			     lodsw
1  6226	0F30  FF E0			     jmp     ax
   6227
   6228				     ;	     UPCASE  ( char1 --	char2 )
   6229
   6230					     hdr     1,'UPCASE'	     ; make char uppercase
1  6231					     cseg
1  6232	0979			     heads   segment public	     ;
1  6233	0979  06			     db	     ??0262	     ;
1  6234	097A  55 50 43 41 53 45		     db	     'UPCASE'		     ;
1  6235	0980  096D			     dw	     lastl	     ;
1  6236	0982  0F32r			     dw	     cfadr	     ;
1  6237	0984			     heads   ends
1  6238					     cseg	     ;
   6239	0F32  58		     upcas:  pop     ax
   6240	0F33  E8 F2F9			     call    upc
   6241	0F36  E9 F280			     jmp     apush
   6242
   6243				     ;	     UPPER  ( c-addr u -- )
   6244
   6245					     hdr     1,'UPPER'	     ; make string uppercase
1  6246					     cseg
1  6247	0984			     heads   segment public	     ;
1  6248	0984  05			     db	     ??0264	     ;
1  6249	0985  55 50 50 45 52		     db	     'UPPER'	     ;
1  6250	098A  0979			     dw	     lastl	     ;
1  6251	098C  0F39r			     dw	     cfadr	     ;
1  6252	098E			     heads   ends
1  6253					     cseg	     ;
   6254	0F39  59		     upper:  pop     cx
   6255	0F3A  5B			     pop     bx
   6256	0F3B  E3 10			     jcxz    upper2
   6257	0F3D  8E 06 03CBr		     mov     es,sseg1
   6258	0F41  26: 8A 07		     upper1: mov     al,es:[bx]
   6259	0F44  E8 F2E8			     call    upc
   6260	0F47  26: 88 07			     mov     es:[bx],al
   6261	0F4A  43			     inc     bx
   6262	0F4B  E2 F4			     loop    upper1
   6263	0F4D			     upper2: nextt
1  6264	0F4D  AD			     lodsw
1  6265	0F4E  FF E0			     jmp     ax
   6266
   6267				     ;	     CONTEXT  (	-- addr	)
   6268
   6269					     hdr     1,'CONTEXT',,1
1  6270					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 111
kernel.asm



1  6271					     aseg
1  6272	098E			     heads   segment public	     ;
1  6273	098E  07			     db	     ??0266	     ;
1  6274	098F  43 4F 4E 54 45 58	54	     db	     'CONTEXT'		     ;
1  6275	0996  0984			     dw	     lastl	     ;
1  6276	0998  B22Ar			     dw	     cfadr	     ;
1  6277	099A			     heads   ends
1  6278					     cseg	     ;
1  6279					     aseg
   6280	B22A  E8 4F8D		     cont:   call    docre
   6281	B22D  ????		     acont   dw	     ?		     ; context
   6282	B22F  ????		     acurr   dw	     ?		     ; current
   6283	B231  B8C5r			     dw	     forth1	     ; forth
   6284
   6285				     ;	     get-context  ( -- wid )
   6286
   6287					     hdr     x,'GET-CONTEXT',,1
1  6288					     cseg	     ;
1  6289					     aseg
   6290	B233  FF 36 B22Dr	     getcon: push    acont
   6291					     nextt
1  6292	B237  AD			     lodsw
1  6293	B238  FF E0			     jmp     ax
   6294
   6295				     ;	     GET-CURRENT  ( -- wid )
   6296
   6297					     hdr     1,'GET-CURRENT',,1
1  6298					     cseg
1  6299					     aseg
1  6300	099A			     heads   segment public	     ;
1  6301	099A  0B			     db	     ??026A	     ;
1  6302	099B  47 45 54 2D 43 55	52+	     db	     'GET-CURRENT'	     ;
   6303	      52 45 4E 54
1  6304	09A6  098E			     dw	     lastl	     ;
1  6305	09A8  B23Ar			     dw	     cfadr	     ;
1  6306	09AA			     heads   ends
1  6307					     cseg	     ;
1  6308					     aseg
   6309	B23A  FF 36 B22Fr	     getcur: push    acurr
   6310					     nextt
1  6311	B23E  AD			     lodsw
1  6312	B23F  FF E0			     jmp     ax
   6313
   6314				     ;	     SET-CURRENT  ( wid	-- )
   6315
   6316					     hdr     1,'SET-CURRENT',,1
1  6317					     cseg
1  6318					     aseg
1  6319	09AA			     heads   segment public	     ;
1  6320	09AA  0B			     db	     ??026C	     ;
1  6321	09AB  53 45 54 2D 43 55	52+	     db	     'SET-CURRENT'	     ;
   6322	      52 45 4E 54
1  6323	09B6  099A			     dw	     lastl	     ;
1  6324	09B8  B241r			     dw	     cfadr	     ;
1  6325	09BA			     heads   ends
1  6326					     cseg	     ;
1  6327					     aseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 112
kernel.asm



   6328	B241  8F 06 B22Fr	     setcur: pop     acurr
   6329					     nextt
1  6330	B245  AD			     lodsw
1  6331	B246  FF E0			     jmp     ax
   6332
   6333				     ;	     wfind  ( c-addr wid -- 0 |	xt nfa -1 | xt nfa 1 )
   6334
   6335					     hdr     x,'WFIND',,1
1  6336					     cseg	     ;
1  6337					     aseg
   6338	B248  5B		     wfind:  pop     bx
   6339	B249  5F			     pop     di
   6340	B24A  0B DB			     or	     bx,bx	     ; wid=0
   6341	B24C  74 55			     jz	     wfind5
   6342	B24E  8A 05			     mov     al,[di]
   6343	B250  47			     inc     di
   6344	B251  8B D7			     mov     dx,di
   6345	B253  3C 20			     cmp     al,31+1	     ; in range?
   6346	B255  73 4C			     jnc     wfind5
   6347	B257  0A C0			     or	     al,al
   6348	B259  74 48			     jz	     wfind5
   6349	B25B  2A ED			     sub     ch,ch
   6350	B25D  8B 1F			     mov     bx,[bx]
   6351	B25F  8E 06 03D0r		     mov     es,hseg1
   6352	B263  26: 8B 1F		     wfind1: mov     bx,es:[bx]
   6353	B266  0B DB			     or	     bx,bx	     ; end of list?
   6354	B268  74 39			     jz	     wfind5
   6355	B26A  8B FB			     mov     di,bx
   6356	B26C  26: 8A 27			     mov     ah,es:[bx]	     ; nfa
   6357	B26F  43			     inc     bx
   6358	B270  8A CC			     mov     cl,ah
   6359	B272  80 E1 1F			     and     cl,31	     ; word length
   6360	B275  3A C8			     cmp     cl,al
   6361	B277  74 04			     jz	     wfind3
   6362	B279  03 D9		     wfind2: add     bx,cx	     ; move to link
   6363	B27B  EB E6			     jmp     wfind1
   6364
   6365	B27D  F6 C4 20		     wfind3: test    ah,20h	     ; smudged?
   6366	B280  75 F7			     jnz     wfind2
   6367	B282  56			     push    si
   6368	B283  57			     push    di
   6369	B284  8B F2			     mov     si,dx
   6370	B286  8B FB			     mov     di,bx
   6371	B288  E8 52D9			     call    cmpnc
   6372	B28B  8A C8			     mov     cl,al
   6373	B28D  5F			     pop     di
   6374	B28E  5E			     pop     si
   6375	B28F  75 E8			     jnz     wfind2
   6376	B291  03 D9			     add     bx,cx
   6377	B293  26: FF 77	02		     push    es:[bx+cw]	     ; xt
   6378	B297  57			     push    di		     ; nfa
   6379	B298  80 E4 40			     and     ah,40h	     ; immediate?
   6380	B29B  75 03			     jnz     wfind4
   6381	B29D  E9 5CD2			     jmp     true
   6382
   6383	B2A0  E9 5CDC		     wfind4: jmp     one
   6384
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 113
kernel.asm



   6385	B2A3  E9 5CD3		     wfind5: jmp     zero
   6386
   6387				     ;	     (find)  ( c-addr -- c-addr	0 | xt -1 | xt 1 )
   6388				     ;				     0 3 0 ?do over i cells context + @
   6389				     ;				     wfind ?dup	if nip 2nip break loop
   6390
   6391					     hdr     x,'(FIND)',,1
1  6392					     cseg	     ;
1  6393					     aseg
   6394	B2A6  E8 4FCC		     pfind:  call    docol
   6395	B2A9  0F79r			     dw	     zero
   6396	B2AB  0F87r			     dw	     three
   6397	B2AD  0F79r			     dw	     zero
   6398	B2AF  0AB4r B2D3r		     dw	     xqdo,pfind3
   6399	B2B3  031Cr		     pfind1  dw	     over
   6400	B2B5  0ACDr 0892r		     dw	     ido,cells
   6401	B2B9  B22Ar			     dw	     cont
   6402	B2BB  076Dr 03D2r		     dw	     plus,at
   6403	B2BF  B248r 030Br		     dw	     wfind,qdup
   6404	B2C3  0A92r B2CFr		     dw	     zbran,pfind2
   6405	B2C7  0362r 03ADr		     dw	     nip,tnip
   6406	B2CB  0AAEr B2B1r		     dw	     pleav,pfind1-cw
   6407	B2CF  0A9Br B2B3r	     pfind2  dw	     xloop,pfind1
   6408	B2D3  0289r		     pfind3  dw	     exit
   6409
   6410				     ;	     FIND  ( c-addr -- c-addr 0	| xt -1	| xt 1 )
   6411
   6412					     hdr     1,'FIND',,1
1  6413					     cseg
1  6414					     aseg
1  6415	09BA			     heads   segment public	     ;
1  6416	09BA  04			     db	     ??0272	     ;
1  6417	09BB  46 49 4E 44		     db	     'FIND'	     ;
1  6418	09BF  09AA			     dw	     lastl	     ;
1  6419	09C1  B2D5r			     dw	     cfadr	     ;
1  6420	09C3			     heads   ends
1  6421					     cseg	     ;
1  6422					     aseg
   6423	B2D5  E8 4FC2		     find:   call    aexec
   6424	B2D8  B2A6r			     dw	     pfind
   6425
   6426
   6427
   6428				     ;	     -?	 ( -- )		     warning @ 0fffe and warning !
   6429
   6430					     hdr     1,'-?',,1	     ; disable warnings	for next definition only
1  6431					     cseg
1  6432					     aseg
1  6433	09C3			     heads   segment public	     ;
1  6434	09C3  02			     db	     ??0274	     ;
1  6435	09C4  2D 3F			     db	     '-?'	     ;
1  6436	09C6  09BA			     dw	     lastl	     ;
1  6437	09C8  B2DAr			     dw	     cfadr	     ;
1  6438	09CA			     heads   ends
1  6439					     cseg	     ;
1  6440					     aseg
   6441	B2DA  80 26 B519r FE	     dques:  and     byte ptr warnn1,0feh ; clear bit 0
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 114
kernel.asm



   6442					     nextt
1  6443	B2DF  AD			     lodsw
1  6444	B2E0  FF E0			     jmp     ax
   6445
   6446				     ;	     warning?  ( -- 0|1	)    warning @ dup if 1	and $7FFF over 0<> or
   6447				     ;				     warning ! then
   6448
   6449					     hdr     x,'WARNING?',,1 ; get warning flag	and apply mask
1  6450					     cseg	     ;
1  6451					     aseg
   6452	B2E2  E8 4F90		     qwarn:  call    docol
   6453	B2E5  B516r 03D2r		     dw	     warnn,at
   6454	B2E9  0304r			     dw	     dupp
   6455	B2EB  0A92r B301r		     dw	     zbran,qwarn1
   6456	B2EF  0F7Fr 0723r		     dw	     one,andd	     ; test redefinition warning
   6457	B2F3  02A8r 7FFF		     dw	     lit,7fffh	     ; disable system warning
   6458	B2F7  031Cr 0632r		     dw	     over,zneq	     ; else enable all warnings
   6459	B2FB  072Br			     dw	     orr
   6460	B2FD  B516r 03D8r		     dw	     warnn,store
   6461	B301  0289r		     qwarn1  dw	     exit
   6462
   6463
   6464				     ;	     header  ( xt|0 "name" -- )
   6465				     ;				     warning? 2>r dph @	(hm-64)	u>
   6466				     ;				     abort" no name space" cseg	bl-word	dup
   6467				     ;				     c@	32 1 within abort" invalid name" dup
   6468				     ;				     find nip r> and if	over count type
   6469				     ;				     ."	 is redefined "	then hseg over count
   6470				     ;				     tuck + get-current	w>name over ! cell+
   6471				     ;				     swap 5 + dph @ over dph +!	dup get-current
   6472				     ;				     @ h! rot r> ?dup 0= if here then dup rot !
   6473				     ;				     over last 2! swap cmovel
   6474
   6475					     hdr     x,'HEADER',,1
1  6476					     cseg	     ;
1  6477					     aseg
   6478	B303  E8 4F6F		     headr:  call    docol
   6479	B306  B2E2r			     dw	     qwarn
   6480	B308  02E1r			     dw	     ttor
   6481	B30A  B52Fr 03D2r		     dw	     dph,at
   6482	B30E  02A8r 7FC0		     dw	     lit,hm-64
   6483	B312  067Ar			     dw	     ugrea
   6484	B314  1271r			     dw	     pabq
   6485					     dcs     'no name space'
1  6486	B316  0D			     db	     ??027A	     ;
1  6487	B317  6E 6F 20 6E 61 6D	65+  ??027B  db	     'no name space'
   6488	      20 73 70 61 63 65
   6489	B324  03C3r			     dw	     csegg
   6490	B326  B7D8r			     dw	     blword
   6491	B328  0304r 03DEr		     dw	     dupp,cat
   6492	B32C  02A1r			     dw	     clit
   6493	B32E  20			     db	     32
   6494	B32F  0F7Fr 06B7r		     dw	     one,within
   6495	B333  1271r			     dw	     pabq
   6496					     dcs     'invalid name'
1  6497	B335  0C			     db	     ??027C	     ;
1  6498	B336  69 6E 76 61 6C 69	64+  ??027D  db	     'invalid name'
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 115
kernel.asm



   6499	      20 6E 61 6D 65
   6500	B342  0304r B2D5r 0362r		     dw	     dupp,find,nip
   6501	B348  02D2r 0723r		     dw	     fromr,andd
   6502	B34C  0A92r B367r		     dw	     zbran,headr1
   6503	B350  0304r 04A5r 0EE4r		     dw	     dupp,count,typee
   6504	B356  144Dr			     dw	     pdotq
   6505					     dcs     ' is redefined '
1  6506	B358  0E			     db	     ??027E	     ;
1  6507	B359  20 69 73 20 72 65	64+  ??027F  db	     ' is redefined '
   6508	      65 66 69 6E 65 64	20
   6509	B367  03CDr		     headr1  dw	     hseg
   6510	B369  031Cr 04A5r		     dw	     over,count
   6511	B36D  036Ar			     dw	     tuck
   6512	B36F  076Dr			     dw	     plus
   6513	B371  B23Ar B57Ar		     dw	     getcur,wtnam
   6514	B375  031Cr 03D8r		     dw	     over,store
   6515	B379  079Er 0315r		     dw	     cellp,swap
   6516	B37D  02A1r			     dw	     clit
   6517	B37F  05			     db	     5
   6518	B380  076Dr			     dw	     plus
   6519	B382  B52Fr 03D2r		     dw	     dph,at
   6520	B386  031Cr B52Fr 044Cr		     dw	     over,dph,pstor
   6521	B38C  0304r			     dw	     dupp
   6522	B38E  B23Ar			     dw	     getcur
   6523	B390  03D2r B009r		     dw	     at,hstor	     ; MS-DOS version
   6524	B394  0324r			     dw	     rot
   6525	B396  02D2r 030Br 0628r		     dw	     fromr,qdup,zequ
   6526	B39C  0A92r B3A2r		     dw	     zbran,headr2
   6527	B3A0  1026r			     dw	     here
   6528	B3A2  0304r 0324r 03D8r	     headr2  dw	     dupp,rot,store
   6529	B3A8  031Cr B4F2r 03F7r		     dw	     over,last,tstor
   6530	B3AE  0315r 048Dr		     dw	     swap,cmovl
   6531	B3B2  0289r			     dw	     exit
   6532
   6533				     ;	     ,call  ( addr -- )	     $E8 c, here 2+ - ,
   6534
   6535					     hdr     x,',CALL',,1
1  6536					     cseg	     ;
1  6537					     aseg
   6538	B3B4  E8 4EBE		     comcall:call    docol
   6539	B3B7  02A1r			     dw	     clit
   6540	B3B9  E8			     db	     0e8h	     ; 'call' opcode
   6541	B3BA  1062r			     dw	     ccomm
   6542	B3BC  1026r 079Er 0775r		     dw	     here,twop,subb  ; relative	for 8086
   6543	B3C2  106Dr			     dw	     comma
   6544	B3C4  0289r			     dw	     exit
   6545
   6546				     ;	     BUILD  ( xt "name"	-- )  0	header ,call
   6547
   6548					     hdr     1,'BUILD',,1
1  6549					     cseg
1  6550					     aseg
1  6551	09CA			     heads   segment public	     ;
1  6552	09CA  05			     db	     ??0282	     ;
1  6553	09CB  42 55 49 4C 44		     db	     'BUILD'	     ;
1  6554	09D0  09C3			     dw	     lastl	     ;
1  6555	09D2  B3C6r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 116
kernel.asm



1  6556	09D4			     heads   ends
1  6557					     cseg	     ;
1  6558					     aseg
   6559	B3C6  E8 4EAC		     build:  call    docol
   6560	B3C9  0F79r B303r		     dw	     zero,headr
   6561	B3CD  B3B4r			     dw	     comcall
   6562	B3CF  0289r			     dw	     exit
   6563
   6564				     ;	     :	( -- )		     (docol) build smudge bal off !csp ]
   6565
   6566					     hdr     1,':',,1
1  6567					     cseg
1  6568					     aseg
1  6569	09D4			     heads   segment public	     ;
1  6570	09D4  01			     db	     ??0284	     ;
1  6571	09D5  3A			     db	     ':'	     ;
1  6572	09D6  09CA			     dw	     lastl	     ;
1  6573	09D8  B3D1r			     dw	     cfadr	     ;
1  6574	09DA			     heads   ends
1  6575					     cseg	     ;
1  6576					     aseg
   6577	B3D1  E8 4EA1		     colon:  call    docol
   6578	B3D4  02A8r 0275r		     dw	     lit,docol
   6579	B3D8  B3C6r			     dw	     build
   6580	B3DA  B828r			     dw	     smudg
   6581	B3DC  B01Br 045Br	     colon1  dw	     bal,off
   6582	B3E0  B648r			     dw	     scsp
   6583	B3E2  B6FFr			     dw	     rbrac
   6584	B3E4  0289r			     dw	     exit
   6585
   6586				     ;	     ;	( -- )		     postpone exit bal @ ?bal ?csp smudge
   6587				     ;				     postpone [	;immediate
   6588
   6589					     hdr     1,';',1,1
1  6590					     cseg
1  6591					     aseg
1  6592	09DA			     heads   segment public	     ;
1  6593	09DA  41			     db	     ??0286	     ;
1  6594	09DB  3B			     db	     ';'	     ;
1  6595	09DC  09D4			     dw	     lastl	     ;
1  6596	09DE  B3E6r			     dw	     cfadr	     ;
1  6597	09E0			     heads   ends
1  6598					     cseg	     ;
1  6599					     aseg
   6600	B3E6  E8 4E8C		     semic:  call    docol
   6601	B3E9  BDDEr 0289r		     dw	     comp,exit
   6602	B3ED  B01Br 03D2r		     dw	     bal,at
   6603	B3F1  B02Er			     dw	     qbal
   6604	B3F3  B650r			     dw	     qcsp
   6605	B3F5  B828r			     dw	     smudg
   6606	B3F7  B6F9r			     dw	     lbrac
   6607	B3F9  0289r			     dw	     exit
   6608
   6609				     ;	     :NONAME  (	-- xt )	     warning? drop here	dup (dnfa) last	2!
   6610				     ;				     (docol) ,call bal off !csp	]
   6611
   6612					     hdr     1,':NONAME',,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 117
kernel.asm



1  6613					     cseg
1  6614					     aseg
1  6615	09E0			     heads   segment public	     ;
1  6616	09E0  07			     db	     ??0288	     ;
1  6617	09E1  3A 4E 4F 4E 41 4D	45	     db	     ':NONAME'		     ;
1  6618	09E8  09DA			     dw	     lastl	     ;
1  6619	09EA  B3FBr			     dw	     cfadr	     ;
1  6620	09EC			     heads   ends
1  6621					     cseg	     ;
1  6622					     aseg
   6623	B3FB  E8 4E77		     nonam:  call    docol
   6624	B3FE  B2E2r 02FEr		     dw	     qwarn,drop	     ; allow -?
   6625	B402  1026r			     dw	     here
   6626	B404  0304r			     dw	     dupp	     ; allow RECURSE
   6627	B406  02A8r 0000		     dw	     lit,dnfa-horig  ; allow IMMEDIATE
   6628	B40A  B4F2r 03F7r		     dw	     last,tstor
   6629	B40E  02A8r 0275r		     dw	     lit,docol
   6630	B412  B3B4r			     dw	     comcall
   6631	B414  0A8Dr B3DCr		     dw	     bran,colon1
   6632
   6633				     ;	     (;CODE)		     last cell+	@ 1+ r>	over 2+	- swap !
   6634
   6635					     hdr     1,'(;CODE)',,1
1  6636					     cseg
1  6637					     aseg
1  6638	09EC			     heads   segment public	     ;
1  6639	09EC  07			     db	     ??028A	     ;
1  6640	09ED  28 3B 43 4F 44 45	29	     db	     '(;CODE)'		     ;
1  6641	09F4  09E0			     dw	     lastl	     ;
1  6642	09F6  B418r			     dw	     cfadr	     ;
1  6643	09F8			     heads   ends
1  6644					     cseg	     ;
1  6645					     aseg
   6646	B418  8B 1E B4F7r	     pscod:  mov     bx,last2
   6647	B41C  43			     inc     bx
   6648	B41D  2B F3			     sub     si,bx	     ; relative	for 8086
   6649	B41F  4E			     dec     si		     ;
   6650	B420  4E			     dec     si		     ;
   6651	B421  89 37			     mov     [bx],si
   6652	B423  E9 4E63			     jmp     exit
   6653
   6654				     ;	     DOES>		     postpone (;code) (docol) ,call ;immediate
   6655
   6656					     hdr     1,'DOES>',1,1
1  6657					     cseg
1  6658					     aseg
1  6659	09F8			     heads   segment public	     ;
1  6660	09F8  45			     db	     ??028C	     ;
1  6661	09F9  44 4F 45 53 3E		     db	     'DOES>'	     ;
1  6662	09FE  09EC			     dw	     lastl	     ;
1  6663	0A00  B426r			     dw	     cfadr	     ;
1  6664	0A02			     heads   ends
1  6665					     cseg	     ;
1  6666					     aseg
   6667	B426  E8 4E4C		     does:   call    docol
   6668	B429  BDDEr B418r		     dw	     comp,pscod
   6669	B42D  02A8r 0275r		     dw	     lit,docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 118
kernel.asm



   6670	B431  B3B4r			     dw	     comcall
   6671	B433  0289r			     dw	     exit
   6672
   6673				     ;	     CREATE  ( -- addr )     'next build
   6674
   6675					     hdr     1,'CREATE',,1
1  6676					     cseg
1  6677					     aseg
1  6678	0A02			     heads   segment public	     ;
1  6679	0A02  06			     db	     ??028E	     ;
1  6680	0A03  43 52 45 41 54 45		     db	     'CREATE'		     ;
1  6681	0A09  09F8			     dw	     lastl	     ;
1  6682	0A0B  B435r			     dw	     cfadr	     ;
1  6683	0A0D			     heads   ends
1  6684					     cseg	     ;
1  6685					     aseg
   6686	B435  BB 01BAr		     creat:  mov     bx,offset next
   6687	B438  53		     creat1: push    bx
   6688	B439  EB 8B			     jmp     build
   6689
   6690				     docre   equ     next
   6691
   6692				     ;	     VARIABLE  ( -- addr )   create 2 allot
   6693
   6694					     hdr     1,'VARIABLE',,1
1  6695					     cseg
1  6696					     aseg
1  6697	0A0D			     heads   segment public	     ;
1  6698	0A0D  08			     db	     ??0290	     ;
1  6699	0A0E  56 41 52 49 41 42	4C+	     db	     'VARIABLE'		     ;
   6700	      45
1  6701	0A16  0A02			     dw	     lastl	     ;
1  6702	0A18  B43Br			     dw	     cfadr	     ;
1  6703	0A1A			     heads   ends
1  6704					     cseg	     ;
1  6705					     aseg
   6706	B43B  E8 4E37		     var:    call    docol
   6707	B43E  B435r			     dw	     creat
   6708	B440  0F83r 102Fr		     dw	     two,allot
   6709	B444  0289r			     dw	     exit
   6710
   6711				     ;	     VALUE  ( -- x )	     (doval) build ,
   6712
   6713					     hdr     1,'VALUE',,1
1  6714					     cseg
1  6715					     aseg
1  6716	0A1A			     heads   segment public	     ;
1  6717	0A1A  05			     db	     ??0292	     ;
1  6718	0A1B  56 41 4C 55 45		     db	     'VALUE'	     ;
1  6719	0A20  0A0D			     dw	     lastl	     ;
1  6720	0A22  B446r			     dw	     cfadr	     ;
1  6721	0A24			     heads   ends
1  6722					     cseg	     ;
1  6723					     aseg
   6724	B446  E8 4E2C		     value:  call    docol
   6725	B449  02A8r 03D2r	     value1  dw	     lit,doval
   6726	B44D  B3C6r			     dw	     build
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 119
kernel.asm



   6727	B44F  106Dr			     dw	     comma
   6728	B451  0289r			     dw	     exit
   6729
   6730				     doval   equ     at
   6731
   6732				     ;	     CONSTANT  ( -- x )	     char? if (docco) build c, end value
   6733
   6734					     hdr     1,'CONSTANT',,1
1  6735					     cseg
1  6736					     aseg
1  6737	0A24			     heads   segment public	     ;
1  6738	0A24  08			     db	     ??0294	     ;
1  6739	0A25  43 4F 4E 53 54 41	4E+	     db	     'CONSTANT'		     ;
   6740	      54
1  6741	0A2D  0A1A			     dw	     lastl	     ;
1  6742	0A2F  B453r			     dw	     cfadr	     ;
1  6743	0A31			     heads   ends
1  6744					     cseg	     ;
1  6745					     aseg
   6746	B453  E8 4E1F		     con:    call    docol
   6747	B456  BE54r			     dw	     charq
   6748	B458  0A92r B449r		     dw	     zbran,value1
   6749	B45C  02A8r 03DEr		     dw	     lit,docco
   6750	B460  B3C6r			     dw	     build
   6751	B462  1062r			     dw	     ccomm
   6752	B464  0289r			     dw	     exit
   6753
   6754				     docon   equ     at
   6755				     docco   equ     cat
   6756
   6757				     ;	     2VARIABLE	( -- addr )  create 4 allot
   6758
   6759					     hdr     1,'2VARIABLE',,1
1  6760					     cseg
1  6761					     aseg
1  6762	0A31			     heads   segment public	     ;
1  6763	0A31  09			     db	     ??0296	     ;
1  6764	0A32  32 56 41 52 49 41	42+	     db	     '2VARIABLE'	     ;
   6765	      4C 45
1  6766	0A3B  0A24			     dw	     lastl	     ;
1  6767	0A3D  B466r			     dw	     cfadr	     ;
1  6768	0A3F			     heads   ends
1  6769					     cseg	     ;
1  6770					     aseg
   6771	B466  E8 4E0C		     tvar:   call    docol
   6772	B469  B435r			     dw	     creat
   6773	B46B  02A1r			     dw	     clit
   6774	B46D  04			     db	     4
   6775	B46E  102Fr			     dw	     allot
   6776	B470  0289r			     dw	     exit
   6777
   6778				     dotvar  equ     next
   6779
   6780				     ;	     2CONSTANT	( -- x2	x1 )  (dotcon) build , ,
   6781
   6782					     hdr     1,'2CONSTANT',,1
1  6783					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 120
kernel.asm



1  6784					     aseg
1  6785	0A3F			     heads   segment public	     ;
1  6786	0A3F  09			     db	     ??0298	     ;
1  6787	0A40  32 43 4F 4E 53 54	41+	     db	     '2CONSTANT'	     ;
   6788	      4E 54
1  6789	0A49  0A31			     dw	     lastl	     ;
1  6790	0A4B  B472r			     dw	     cfadr	     ;
1  6791	0A4D			     heads   ends
1  6792					     cseg	     ;
1  6793					     aseg
   6794	B472  E8 4E00		     tcon:   call    docol
   6795	B475  02A8r 03EEr		     dw	     lit,dotcon
   6796	B479  B3C6r			     dw	     build
   6797	B47B  106Dr 106Dr		     dw	     comma,comma
   6798	B47F  0289r			     dw	     exit
   6799
   6800				     dotcon  equ     tat
   6801
   6802				     ;	     USER  ( --	addr )	     (douse) build ,
   6803
   6804					     hdr     1,'USER',,1     ; FIG
1  6805					     cseg
1  6806					     aseg
1  6807	0A4D			     heads   segment public	     ;
1  6808	0A4D  04			     db	     ??029A	     ;
1  6809	0A4E  55 53 45 52		     db	     'USER'	     ;
1  6810	0A52  0A3F			     dw	     lastl	     ;
1  6811	0A54  B481r			     dw	     cfadr	     ;
1  6812	0A56			     heads   ends
1  6813					     cseg	     ;
1  6814					     aseg
   6815	B481  E8 4DF1		     user:   call    docol
   6816	B484  02A8r 027Fr		     dw	     lit,douse
   6817	B488  B3C6r			     dw	     build
   6818	B48A  106Dr			     dw	     comma
   6819	B48C  0289r			     dw	     exit
   6820
   6821				     ;	     ADDR  ( "name" -- addr )  ' >body state? if postpone literal then
   6822				     ;				     ;immediate
   6823
   6824					     hdr     1,'ADDR',1,1    ; state-smart
1  6825					     cseg
1  6826					     aseg
1  6827	0A56			     heads   segment public	     ;
1  6828	0A56  44			     db	     ??029C	     ;
1  6829	0A57  41 44 44 52		     db	     'ADDR'	     ;
1  6830	0A5B  0A4D			     dw	     lastl	     ;
1  6831	0A5D  B48Er			     dw	     cfadr	     ;
1  6832	0A5F			     heads   ends
1  6833					     cseg	     ;
1  6834					     aseg
   6835	B48E  E8 4DE4		     addr:   call    docol
   6836	B491  B7F9r 1078r		     dw	     tick,tbody
   6837	B495  B539r			     dw	     stateq
   6838	B497  0A92r B49Dr		     dw	     zbran,addr1
   6839	B49B  BE5Br			     dw	     liter
   6840	B49D  0289r		     addr1   dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 121
kernel.asm



   6841
   6842				     ;	     (to)  ( x -- )	     r>	dup cell+ >r @ >body !
   6843
   6844					     hdr     x,'(TO)'
1  6845					     cseg	     ;
   6846	0F50  AD		     pto:    lodsw
   6847	0F51  8B D8			     mov     bx,ax
   6848	0F53  8F 47 03			     pop     [bx+3]
   6849					     nextt
1  6850	0F56  AD			     lodsw
1  6851	0F57  FF E0			     jmp     ax
   6852
   6853				     ;	     TO			     ' state? if postpone (to) , end >body !
   6854				     ;				     ;immediate
   6855
   6856					     hdr     1,'TO',1,1	     ; state-smart
1  6857					     cseg
1  6858					     aseg
1  6859	0A5F			     heads   segment public	     ;
1  6860	0A5F  42			     db	     ??02A0	     ;
1  6861	0A60  54 4F			     db	     'TO'	     ;
1  6862	0A62  0A56			     dw	     lastl	     ;
1  6863	0A64  B49Fr			     dw	     cfadr	     ;
1  6864	0A66			     heads   ends
1  6865					     cseg	     ;
1  6866					     aseg
   6867	B49F  E8 4DD3		     to:     call    docol
   6868	B4A2  B7F9r			     dw	     tick
   6869	B4A4  B539r			     dw	     stateq
   6870	B4A6  0A92r B4B2r		     dw	     zbran,to1
   6871	B4AA  BDDEr 0F50r		     dw	     comp,pto
   6872	B4AE  106Dr			     dw	     comma
   6873	B4B0  0289r			     dw	     exit
   6874	B4B2  1078r 03D8r	     to1     dw	     tbody,store
   6875	B4B6  0289r			     dw	     exit
   6876
   6877					     cseg
   6878
   6879	0F59  E8 F319		     undef:  call    docol
   6880	0F5C  0F7Fr			     dw	     one
   6881	0F5E  1271r			     dw	     pabq
   6882					     dcs     'uninitiated DEFER'
1  6883	0F60  11			     db	     ??02A2	     ;
1  6884	0F61  75 6E 69 6E 69 74	69+  ??02A3  db	     'uninitiated DEFER'
   6885	      61 74 65 64 20 44	45+
   6886	      46 45 52
   6887
   6888				     ;	     DEFER  ( -- )	     ['] @execute build	(undef)	,
   6889
   6890					     hdr     1,'DEFER',,1
1  6891					     cseg
1  6892					     aseg
1  6893	0A66			     heads   segment public	     ;
1  6894	0A66  05			     db	     ??02A4	     ;
1  6895	0A67  44 45 46 45 52		     db	     'DEFER'	     ;
1  6896	0A6C  0A5F			     dw	     lastl	     ;
1  6897	0A6E  B4B8r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 122
kernel.asm



1  6898	0A70			     heads   ends
1  6899					     cseg	     ;
1  6900					     aseg
   6901	B4B8  E8 4DBA		     defer:  call    docol
   6902	B4BB  02A8r 029Ar		     dw	     lit,aexec
   6903	B4BF  B3C6r			     dw	     build
   6904	B4C1  02A8r 0F59r		     dw	     lit,undef
   6905	B4C5  106Dr			     dw	     comma
   6906	B4C7  0289r			     dw	     exit
   6907
   6908				     ;	     IS			     aka to is
   6909
   6910					     hdr     1,'IS',1,,to    ; state-smart
1  6911					     cseg
1  6912	0A70			     heads   segment public	     ;
1  6913	0A70  C2			     db	     ??02A6	     ;
1  6914	0A71  49 53			     db	     'IS'	     ;
1  6915	0A73  0A66			     dw	     lastl	     ;
1  6916	0A75  B49Fr			     dw	     cfadr	     ;
1  6917	0A77			     heads   ends
1  6918					     cseg	     ;
   6919				     is	     equ     to
   6920
   6921				     pis     equ     pto
   6922
   6923				     ;	     AKA  ( "oldname" "newname"	-- )  defined tuck ?defined header
   6924				     ;					     $80 xnfa 0> if immediate then
   6925
   6926					     hdr     1,'AKA',,1
1  6927					     cseg
1  6928					     aseg
1  6929	0A77			     heads   segment public	     ;
1  6930	0A77  03			     db	     ??02A8	     ;
1  6931	0A78  41 4B 41			     db	     'AKA'	     ;
1  6932	0A7B  0A70			     dw	     lastl	     ;
1  6933	0A7D  B4C9r			     dw	     cfadr	     ;
1  6934	0A7F			     heads   ends
1  6935					     cseg	     ;
1  6936					     aseg
   6937	B4C9  E8 4DA9		     aka:    call    docol
   6938	B4CC  B7F0r			     dw	     defined
   6939	B4CE  036Ar B6E3r		     dw	     tuck,qdef
   6940	B4D2  B303r			     dw	     headr	     ; equivalent of
   6941	B4D4  02A1r			     dw	     clit	     ; ALIAS ( xt "newname" -- )
   6942	B4D6  80			     db	     80h	     ;
   6943	B4D7  B819r			     dw	     xnfa	     ;
   6944	B4D9  065Ar			     dw	     zgrea
   6945	B4DB  0A92r B4E1r		     dw	     zbran,aka1
   6946	B4DF  B816r			     dw	     immed
   6947	B4E1  0289r		     aka1    dw	     exit
   6948
   6949				     ;	     Constants
   6950
   6951				     ;	     TRUE  ( --	-1 )
   6952
   6953					     hdr     1,'TRUE'
1  6954					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 123
kernel.asm



1  6955	0A7F			     heads   segment public	     ;
1  6956	0A7F  04			     db	     ??02AA	     ;
1  6957	0A80  54 52 55 45		     db	     'TRUE'	     ;
1  6958	0A84  0A77			     dw	     lastl	     ;
1  6959	0A86  0F72r			     dw	     cfadr	     ;
1  6960	0A88			     heads   ends
1  6961					     cseg	     ;
   6962	0F72  B8 FFFF		     true:   mov     ax,-1
   6963	0F75  50			     push    ax
   6964					     nextt
1  6965	0F76  AD			     lodsw
1  6966	0F77  FF E0			     jmp     ax
   6967
   6968				     ;	     FALSE  ( -- 0 )
   6969
   6970					     hdr     1,'FALSE'
1  6971					     cseg
1  6972	0A88			     heads   segment public	     ;
1  6973	0A88  05			     db	     ??02AC	     ;
1  6974	0A89  46 41 4C 53 45		     db	     'FALSE'	     ;
1  6975	0A8E  0A7F			     dw	     lastl	     ;
1  6976	0A90  0F79r			     dw	     cfadr	     ;
1  6977	0A92			     heads   ends
1  6978					     cseg	     ;
   6979	0F79  2B C0		     false:  sub     ax,ax
   6980	0F7B  50			     push    ax
   6981					     nextt
1  6982	0F7C  AD			     lodsw
1  6983	0F7D  FF E0			     jmp     ax
   6984
   6985				     ;	     -1	 ( -- -1 )	     aka true -1
   6986
   6987					     hdr     1,'-1',,,true
1  6988					     cseg
1  6989	0A92			     heads   segment public	     ;
1  6990	0A92  82			     db	     ??02AE	     ;
1  6991	0A93  2D 31			     db	     '-1'	     ;
1  6992	0A95  0A88			     dw	     lastl	     ;
1  6993	0A97  0F72r			     dw	     cfadr	     ;
1  6994	0A99			     heads   ends
1  6995					     cseg	     ;
   6996
   6997				     ;	     0	( -- 0 )	     aka false 0
   6998
   6999					     hdr     1,'0',,,false
1  7000					     cseg
1  7001	0A99			     heads   segment public	     ;
1  7002	0A99  81			     db	     ??02B0	     ;
1  7003	0A9A  30			     db	     '0'	     ;
1  7004	0A9B  0A92			     dw	     lastl	     ;
1  7005	0A9D  0F79r			     dw	     cfadr	     ;
1  7006	0A9F			     heads   ends
1  7007					     cseg	     ;
   7008				     zero    equ     false
   7009
   7010				     ;	     1	( -- 1 )
   7011
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 124
kernel.asm



   7012					     hdr     1,'1'
1  7013					     cseg
1  7014	0A9F			     heads   segment public	     ;
1  7015	0A9F  01			     db	     ??02B2	     ;
1  7016	0AA0  31			     db	     '1'	     ;
1  7017	0AA1  0A99			     dw	     lastl	     ;
1  7018	0AA3  0F7Fr			     dw	     cfadr	     ;
1  7019	0AA5			     heads   ends
1  7020					     cseg	     ;
   7021	0F7F  E8 F45C		     one:    call    docco
   7022	0F82  01			     db	     1
   7023
   7024				     ;	     2	( -- 2 )
   7025
   7026					     hdr     1,'2'
1  7027					     cseg
1  7028	0AA5			     heads   segment public	     ;
1  7029	0AA5  01			     db	     ??02B4	     ;
1  7030	0AA6  32			     db	     '2'	     ;
1  7031	0AA7  0A9F			     dw	     lastl	     ;
1  7032	0AA9  0F83r			     dw	     cfadr	     ;
1  7033	0AAB			     heads   ends
1  7034					     cseg	     ;
   7035	0F83  E8 F458		     two:    call    docco
   7036	0F86  02			     db	     2
   7037
   7038				     ;	     3	( -- 3 )
   7039
   7040					     hdr     1,'3'
1  7041					     cseg
1  7042	0AAB			     heads   segment public	     ;
1  7043	0AAB  01			     db	     ??02B6	     ;
1  7044	0AAC  33			     db	     '3'	     ;
1  7045	0AAD  0AA5			     dw	     lastl	     ;
1  7046	0AAF  0F87r			     dw	     cfadr	     ;
1  7047	0AB1			     heads   ends
1  7048					     cseg	     ;
   7049	0F87  E8 F454		     three:  call    docco
   7050	0F8A  03			     db	     3
   7051
   7052				     ;	     BL	 ( -- 32 )	     ascii value for space character
   7053
   7054					     hdr     1,'BL'
1  7055					     cseg
1  7056	0AB1			     heads   segment public	     ;
1  7057	0AB1  02			     db	     ??02B8	     ;
1  7058	0AB2  42 4C			     db	     'BL'	     ;
1  7059	0AB4  0AAB			     dw	     lastl	     ;
1  7060	0AB6  0F8Br			     dw	     cfadr	     ;
1  7061	0AB8			     heads   ends
1  7062					     cseg	     ;
   7063	0F8B  E8 F450		     bll:    call    docco
   7064	0F8E  20			     db	     32
   7065
   7066				     ;	     B/BUF  ( -- u )	     bytes per screen buffer
   7067
   7068					     hdr     1,'B/BUF',,1    ; FIG
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 125
kernel.asm



1  7069					     cseg
1  7070					     aseg
1  7071	0AB8			     heads   segment public	     ;
1  7072	0AB8  05			     db	     ??02BA	     ;
1  7073	0AB9  42 2F 42 55 46		     db	     'B/BUF'	     ;
1  7074	0ABE  0AB1			     dw	     lastl	     ;
1  7075	0AC0  B4E3r			     dw	     cfadr	     ;
1  7076	0AC2			     heads   ends
1  7077					     cseg	     ;
1  7078					     aseg
   7079	B4E3  E8 4EEC		     bbuf:   call    doval
   7080	B4E6  0400		     bbuf1   dw	     128*8	     ; default
   7081
   7082				     ;	     C/L  ( -- u )	     chars per screen line
   7083
   7084					     hdr     1,'C/L',,1	     ; FIG
1  7085					     cseg
1  7086					     aseg
1  7087	0AC2			     heads   segment public	     ;
1  7088	0AC2  03			     db	     ??02BC	     ;
1  7089	0AC3  43 2F 4C			     db	     'C/L'	     ;
1  7090	0AC6  0AB8			     dw	     lastl	     ;
1  7091	0AC8  B4E8r			     dw	     cfadr	     ;
1  7092	0ACA			     heads   ends
1  7093					     cseg	     ;
1  7094					     aseg
   7095	B4E8  E8 4EE7		     csll:   call    doval
   7096	B4EB  0040			     dw	     64		     ; default
   7097
   7098				     ; For applications, LIMIT is the upper limit of available memory.
   7099				     ; In forth, it is the beginning of	the area which holds the screen
   7100				     ; file buffer, word headers and system definitions.
   7101
   7102				     ;	     LIMIT  ( -- addr )
   7103
   7104					     hdr     1,'LIMIT'	     ; FIG
1  7105					     cseg
1  7106	0ACA			     heads   segment public	     ;
1  7107	0ACA  05			     db	     ??02BE	     ;
1  7108	0ACB  4C 49 4D 49 54		     db	     'LIMIT'	     ;
1  7109	0AD0  0AC2			     dw	     lastl	     ;
1  7110	0AD2  0F8Fr			     dw	     cfadr	     ;
1  7111	0AD4			     heads   ends
1  7112					     cseg	     ;
   7113	0F8F  E8 F440		     limit:  call    docon	     ; application word	- used by COLD
   7114	0F92  ????		     limit1  dw	     ?		     ; patched on startup
   7115
   7116				     ;	     HLIMIT  ( -- addr )
   7117
   7118					     hdr     1,'HLIMIT',,1   ; upper limit of heads memory
1  7119					     cseg
1  7120					     aseg
1  7121	0AD4			     heads   segment public	     ;
1  7122	0AD4  06			     db	     ??02C0	     ;
1  7123	0AD5  48 4C 49 4D 49 54		     db	     'HLIMIT'		     ;
1  7124	0ADB  0ACA			     dw	     lastl	     ;
1  7125	0ADD  B4EDr			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 126
kernel.asm



1  7126	0ADF			     heads   ends
1  7127					     cseg	     ;
1  7128					     aseg
   7129	B4ED  E8 4EE2		     hlimit: call    docon
   7130	B4F0  8000			     dw	     hm
   7131
   7132				     ;	     'NEXT  ( -- addr )	     address of	NEXT
   7133
   7134					     hdr     1,"'NEXT"
1  7135					     cseg
1  7136	0ADF			     heads   segment public	     ;
1  7137	0ADF  05			     db	     ??02C2	     ;
1  7138	0AE0  27 4E 45 58 54		     db	     "'NEXT"	     ;
1  7139	0AE5  0AD4			     dw	     lastl	     ;
1  7140	0AE7  0F94r			     dw	     cfadr	     ;
1  7141	0AE9			     heads   ends
1  7142					     cseg	     ;
   7143	0F94  E8 F43B		     tnext:  call    docon
   7144	0F97  01BAr		     tnext1  dw	     next
   7145
   7146				     ;	     SYS-VEC  (	-- addr	)    system vector table
   7147
   7148					     hdr     1,'SYS-VEC'
1  7149					     cseg
1  7150	0AE9			     heads   segment public	     ;
1  7151	0AE9  07			     db	     ??02C4	     ;
1  7152	0AEA  53 59 53 2D 56 45	43	     db	     'SYS-VEC'		     ;
1  7153	0AF1  0ADF			     dw	     lastl	     ;
1  7154	0AF3  0F99r			     dw	     cfadr	     ;
1  7155	0AF5			     heads   ends
1  7156					     cseg	     ;
   7157	0F99  E8 F21E		     sysvec: call    docre
   7158
   7159	0F9C  0E51r		     vkeyq   dw	     qterm	     ;	0 KEY?
   7160	0F9E  0E74r		     vkey    dw	     conin	     ;	2 KEY
   7161	0FA0  0EB2r		     vemit   dw	     conout	     ;	4 EMIT
   7162	0FA2  0EB2r		     vcon    dw	     conout	     ;	6 CONSOLE out
   7163	0FA4  0EC1r		     vlst    dw	     lstout	     ;	8 PRINTER out
   7164	0FA6  141Fr		     ainit   dw	     pinit	     ; 10 INIT patch
   7165	0FA8  BB82r		     aident  dw	     piden	     ; 12 IDENTIFY patch
   7166	0FAA  B93Ar		     afnumb  dw	     pfnum	     ; 14 FNUMBER patch
   7167	0FAC  002C		     nfps    dw	     fps	     ; 16 fp-stack size	(bytes)
   7168	0FAE  B914r		     anumb   dw	     pnumb	     ; 18 NUMBER patch
   7169	0FB0  0018		     nfpm    dw	     fnum*fw	     ; 20 fp-stack min (bytes)
   7170	0FB2  0100		     nrts    dw	     rts	     ; 22 return stack (bytes)
   7171	0FB4  0080		     nus     dw	     us		     ; 24 user area (bytes)
   7172	0FB6  0044		     npno    dw	     pno	     ; 26 HOLD buffer size (bytes)
   7173	0FB8  F6AE		     nmscon  dw	     -2386	     ; 28 MS timing constant (MSDOS only)
   7174	0FBA  0003		     ntmode  dw	     3		     ; 30 Timer	0 mode (MSDOS only)
   7175
   7176				     ;	     Variables
   7177
   7178				     ;	     UP	 ( -- addr )	     user area pointer
   7179
   7180					     hdr     1,'UP'
1  7181					     cseg
1  7182	0AF5			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 127
kernel.asm



1  7183	0AF5  02			     db	     ??02C6	     ;
1  7184	0AF6  55 50			     db	     'UP'	     ;
1  7185	0AF8  0AE9			     dw	     lastl	     ;
1  7186	0AFA  0FBCr			     dw	     cfadr	     ;
1  7187	0AFC			     heads   ends
1  7188					     cseg	     ;
   7189	0FBC  E8 F1FB		     up:     call    docre
   7190	0FBF  ????		     upp     dw	     ?
   7191
   7192				     ;	     FSP  ( -- addr )	     fp	stack pointer
   7193
   7194					     hdr     1,'FSP'
1  7195					     cseg
1  7196	0AFC			     heads   segment public	     ;
1  7197	0AFC  03			     db	     ??02C8	     ;
1  7198	0AFD  46 53 50			     db	     'FSP'	     ;
1  7199	0B00  0AF5			     dw	     lastl	     ;
1  7200	0B02  0FC1r			     dw	     cfadr	     ;
1  7201	0B04			     heads   ends
1  7202					     cseg	     ;
   7203	0FC1  E8 F1F6		     fsp:    call    docre
   7204	0FC4  ????		     fspp    dw	     ?
   7205
   7206				     ;	     boot  ( --	addr )	     boot word (holds forth/application	xt)
   7207
   7208					     hdr     x,'BOOT'
1  7209					     cseg	     ;
   7210	0FC6  E8 F1F1		     boot:   call    docre
   7211	0FC9  0000		     boot1   dw	     0		     ; xt
   7212	0FCB  0000		     boot2   dw	     0		     ; 0=forth
   7213
   7214				     ;	     SYS  ( -- addr )	     compile to	system or application
   7215
   7216					     hdr     1,'SYS'
1  7217					     cseg
1  7218	0B04			     heads   segment public	     ;
1  7219	0B04  03			     db	     ??02CC	     ;
1  7220	0B05  53 59 53			     db	     'SYS'	     ;
1  7221	0B08  0AFC			     dw	     lastl	     ;
1  7222	0B0A  0FCDr			     dw	     cfadr	     ;
1  7223	0B0C			     heads   ends
1  7224					     cseg	     ;
   7225	0FCD  E8 F1EA		     sys:    call    docre	     ; application word	- used by HERE UNUSED
   7226	0FD0  0000		     sys1    dw	     0
   7227
   7228				     ;	     LAST    ( -- addr )     occupies 2	cells
   7229
   7230					     hdr     1,'LAST',,1
1  7231					     cseg
1  7232					     aseg
1  7233	0B0C			     heads   segment public	     ;
1  7234	0B0C  04			     db	     ??02CE	     ;
1  7235	0B0D  4C 41 53 54		     db	     'LAST'	     ;
1  7236	0B11  0B04			     dw	     lastl	     ;
1  7237	0B13  B4F2r			     dw	     cfadr	     ;
1  7238	0B15			     heads   ends
1  7239					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 128
kernel.asm



1  7240					     aseg
   7241	B4F2  E8 4CC5		     last:   call    docre
   7242	B4F5  147A		     last1   dw	     topnfa	     ; latest nfa
   7243	B4F7  B4F2r		     last2   dw	     topxt	     ; latest xt
   7244
   7245				     ;	     BLK
   7246
   7247					     hdr     1,'BLK',,1
1  7248					     cseg
1  7249					     aseg
1  7250	0B15			     heads   segment public	     ;
1  7251	0B15  03			     db	     ??02D0	     ;
1  7252	0B16  42 4C 4B			     db	     'BLK'	     ;
1  7253	0B19  0B0C			     dw	     lastl	     ;
1  7254	0B1B  B4F9r			     dw	     cfadr	     ;
1  7255	0B1D			     heads   ends
1  7256					     cseg	     ;
1  7257					     aseg
   7258	B4F9  E8 4CBE		     blk:    call    docre
   7259	B4FC  ????		     blk1    dw	     ?
   7260
   7261				     ;	     >IN
   7262
   7263					     hdr     1,'>IN',,1
1  7264					     cseg
1  7265					     aseg
1  7266	0B1D			     heads   segment public	     ;
1  7267	0B1D  03			     db	     ??02D2	     ;
1  7268	0B1E  3E 49 4E			     db	     '>IN'	     ;
1  7269	0B21  0B15			     dw	     lastl	     ;
1  7270	0B23  B4FEr			     dw	     cfadr	     ;
1  7271	0B25			     heads   ends
1  7272					     cseg	     ;
1  7273					     aseg
   7274	B4FE  E8 4CB9		     inn:    call    docre
   7275	B501  ????		     inn1    dw	     ?
   7276
   7277				     ;	     'SOURCE		     occupies 2	cells
   7278
   7279					     hdr     1,"'SOURCE",,1
1  7280					     cseg
1  7281					     aseg
1  7282	0B25			     heads   segment public	     ;
1  7283	0B25  07			     db	     ??02D4	     ;
1  7284	0B26  27 53 4F 55 52 43	45	     db	     "'SOURCE"		     ;
1  7285	0B2D  0B1D			     dw	     lastl	     ;
1  7286	0B2F  B503r			     dw	     cfadr	     ;
1  7287	0B31			     heads   ends
1  7288					     cseg	     ;
1  7289					     aseg
   7290	B503  E8 4CB4		     tsourc: call    docre
   7291	B506  ???? ????		     tsour1  dw	     ?,?
   7292
   7293				     ;	     STATE
   7294
   7295					     hdr     1,'STATE',,1
1  7296					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 129
kernel.asm



1  7297					     aseg
1  7298	0B31			     heads   segment public	     ;
1  7299	0B31  05			     db	     ??02D6	     ;
1  7300	0B32  53 54 41 54 45		     db	     'STATE'	     ;
1  7301	0B37  0B25			     dw	     lastl	     ;
1  7302	0B39  B50Ar			     dw	     cfadr	     ;
1  7303	0B3B			     heads   ends
1  7304					     cseg	     ;
1  7305					     aseg
   7306	B50A  E8 4CAD		     state:  call    docre
   7307	B50D  ????		     state1  dw	     ?
   7308
   7309				     ;	     SCR  ( -- addr )	     occupies 2	cells
   7310
   7311					     hdr     1,'SCR',,1
1  7312					     cseg
1  7313					     aseg
1  7314	0B3B			     heads   segment public	     ;
1  7315	0B3B  03			     db	     ??02D8	     ;
1  7316	0B3C  53 43 52			     db	     'SCR'	     ;
1  7317	0B3F  0B31			     dw	     lastl	     ;
1  7318	0B41  B50Fr			     dw	     cfadr	     ;
1  7319	0B43			     heads   ends
1  7320					     cseg	     ;
1  7321					     aseg
   7322	B50F  E8 4CA8		     scr:    call    docre
   7323	B512  ???? ????			     dw	     ?,?	     ; screen number, offset
   7324
   7325				     ;	     WARNING
   7326
   7327					     hdr     1,'WARNING',,1  ; FIG
1  7328					     cseg
1  7329					     aseg
1  7330	0B43			     heads   segment public	     ;
1  7331	0B43  07			     db	     ??02DA	     ;
1  7332	0B44  57 41 52 4E 49 4E	47	     db	     'WARNING'		     ;
1  7333	0B4B  0B3B			     dw	     lastl	     ;
1  7334	0B4D  B516r			     dw	     cfadr	     ;
1  7335	0B4F			     heads   ends
1  7336					     cseg	     ;
1  7337					     aseg
   7338	B516  E8 4CA1		     warnn:  call    docre
   7339	B519  ????		     warnn1  dw	     ?
   7340
   7341				     ;	     CSP  ( -- addr )	     occupies 2	cells
   7342
   7343					     hdr     1,'CSP',,1	     ; FIG
1  7344					     cseg
1  7345					     aseg
1  7346	0B4F			     heads   segment public	     ;
1  7347	0B4F  03			     db	     ??02DC	     ;
1  7348	0B50  43 53 50			     db	     'CSP'	     ;
1  7349	0B53  0B43			     dw	     lastl	     ;
1  7350	0B55  B51Br			     dw	     cfadr	     ;
1  7351	0B57			     heads   ends
1  7352					     cseg	     ;
1  7353					     aseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 130
kernel.asm



   7354	B51B  E8 4C9C		     cspp:   call    docre
   7355	B51E  ????		     cspp1   dw	     ?		     ; current stack pointer
   7356
   7357				     ;	     CHECKING
   7358
   7359					     hdr     1,'CHECKING',,1
1  7360					     cseg
1  7361					     aseg
1  7362	0B57			     heads   segment public	     ;
1  7363	0B57  08			     db	     ??02DE	     ;
1  7364	0B58  43 48 45 43 4B 49	4E+	     db	     'CHECKING'		     ;
   7365	      47
1  7366	0B60  0B4F			     dw	     lastl	     ;
1  7367	0B62  B520r			     dw	     cfadr	     ;
1  7368	0B64			     heads   ends
1  7369					     cseg	     ;
1  7370					     aseg
   7371	B520  E8 4C97		     check:  call    docre
   7372	B523  ????		     check1  dw	     ?
   7373
   7374				     ;	     errmsg  ( -- addr )     message holder for	abort"
   7375
   7376					     hdr     x,'ERRMSG'
1  7377					     cseg	     ;
   7378	0FD2  E8 F1E5		     errmsg: call    docre
   7379	0FD5  ???? ????			     dw	     ?,?
   7380
   7381				     ;	     zbuf  ( --	addr )	     filename buffer pointers
   7382
   7383					     hdr     x,'ZBUF'
1  7384					     cseg	     ;
   7385	0FD9  E8 F1DE		     zbuf:   call    docre
   7386	0FDC  0110r		     zbuf1   dw	     zb1     ; next buffer
   7387	0FDE  0161r			     dw	     zb2     ; last buffer
   7388
   7389				     ;	     User Variables
   7390
   7391				     ;	     bytes 0-5		     reserved for multitasking
   7392
   7393				     ;	     S0
   7394
   7395					     hdr     1,'S0'	     ; FIG
1  7396					     cseg
1  7397	0B64			     heads   segment public	     ;
1  7398	0B64  02			     db	     ??02E4	     ;
1  7399	0B65  53 30			     db	     'S0'	     ;
1  7400	0B67  0B57			     dw	     lastl	     ;
1  7401	0B69  0FE0r			     dw	     cfadr	     ;
1  7402	0B6B			     heads   ends
1  7403					     cseg	     ;
   7404	0FE0  E8 F29C		     szero:  call    douse
   7405	0FE3  0006			     dw	     6
   7406
   7407				     ;	     R0
   7408
   7409					     hdr     1,'R0'	     ; FIG
1  7410					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 131
kernel.asm



1  7411	0B6B			     heads   segment public	     ;
1  7412	0B6B  02			     db	     ??02E6	     ;
1  7413	0B6C  52 30			     db	     'R0'	     ;
1  7414	0B6E  0B64			     dw	     lastl	     ;
1  7415	0B70  0FE5r			     dw	     cfadr	     ;
1  7416	0B72			     heads   ends
1  7417					     cseg	     ;
   7418	0FE5  E8 F297		     rzero:  call    douse
   7419	0FE8  0008			     dw	     8
   7420
   7421				     ;	     DP			     application dictionary pointer
   7422
   7423					     hdr     1,'DP'	     ; FIG
1  7424					     cseg
1  7425	0B72			     heads   segment public	     ;
1  7426	0B72  02			     db	     ??02E8	     ;
1  7427	0B73  44 50			     db	     'DP'	     ;
1  7428	0B75  0B6B			     dw	     lastl	     ;
1  7429	0B77  0FEAr			     dw	     cfadr	     ;
1  7430	0B79			     heads   ends
1  7431					     cseg	     ;
   7432	0FEA  E8 F292		     dpp:    call    douse
   7433	0FED  000A			     dw	     10
   7434
   7435				     ;	     dps		     system dictionary pointer
   7436
   7437					     hdr     x,'DPS',,1	     ; must follow DP
1  7438					     cseg	     ;
1  7439					     aseg
   7440	B525  E8 4D57		     dps:    call    douse
   7441	B528  000C			     dw	     12
   7442
   7443				     ;	     VOC-LINK
   7444
   7445					     hdr     1,'VOC-LINK',,1 ; FIG
1  7446					     cseg
1  7447					     aseg
1  7448	0B79			     heads   segment public	     ;
1  7449	0B79  08			     db	     ??02EC	     ;
1  7450	0B7A  56 4F 43 2D 4C 49	4E+	     db	     'VOC-LINK'		     ;
   7451	      4B
1  7452	0B82  0B72			     dw	     lastl	     ;
1  7453	0B84  B52Ar			     dw	     cfadr	     ;
1  7454	0B86			     heads   ends
1  7455					     cseg	     ;
1  7456					     aseg
   7457	B52A  E8 4D52		     vocl:   call    douse
   7458	B52D  000E			     dw	     14
   7459
   7460				     ;	     FS0
   7461
   7462					     hdr     1,'FS0'
1  7463					     cseg
1  7464	0B86			     heads   segment public	     ;
1  7465	0B86  03			     db	     ??02EE	     ;
1  7466	0B87  46 53 30			     db	     'FS0'	     ;
1  7467	0B8A  0B79			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 132
kernel.asm



1  7468	0B8C  0FEFr			     dw	     cfadr	     ;
1  7469	0B8E			     heads   ends
1  7470					     cseg	     ;
   7471	0FEF  E8 F28D		     fszero: call    douse
   7472	0FF2  0010			     dw	     16
   7473
   7474				     ;	     DPH  ( -- addr )	     heads dictionary pointer
   7475
   7476					     hdr     1,'DPH',,1
1  7477					     cseg
1  7478					     aseg
1  7479	0B8E			     heads   segment public	     ;
1  7480	0B8E  03			     db	     ??02F0	     ;
1  7481	0B8F  44 50 48			     db	     'DPH'	     ;
1  7482	0B92  0B86			     dw	     lastl	     ;
1  7483	0B94  B52Fr			     dw	     cfadr	     ;
1  7484	0B96			     heads   ends
1  7485					     cseg	     ;
1  7486					     aseg
   7487	B52F  E8 4D4D		     dph:    call    douse
   7488	B532  0012			     dw	     18
   7489
   7490				     ; End of boot-up literals
   7491
   7492				     ;	     bytes 20-21	     reserved for locals
   7493
   7494				     ;	     CATCHER
   7495
   7496					     hdr     1,'CATCHER'
1  7497					     cseg
1  7498	0B96			     heads   segment public	     ;
1  7499	0B96  07			     db	     ??02F2	     ;
1  7500	0B97  43 41 54 43 48 45	52	     db	     'CATCHER'		     ;
1  7501	0B9E  0B8E			     dw	     lastl	     ;
1  7502	0BA0  0FF4r			     dw	     cfadr	     ;
1  7503	0BA2			     heads   ends
1  7504					     cseg	     ;
   7505	0FF4  E8 F288		     catchr: call    douse
   7506	0FF7  0016			     dw	     22
   7507
   7508				     ;	     BASE
   7509
   7510					     hdr     1,'BASE'
1  7511					     cseg
1  7512	0BA2			     heads   segment public	     ;
1  7513	0BA2  04			     db	     ??02F4	     ;
1  7514	0BA3  42 41 53 45		     db	     'BASE'	     ;
1  7515	0BA7  0B96			     dw	     lastl	     ;
1  7516	0BA9  0FF9r			     dw	     cfadr	     ;
1  7517	0BAB			     heads   ends
1  7518					     cseg	     ;
   7519	0FF9  E8 F283		     base:   call    douse
   7520	0FFC  0018			     dw	     24
   7521
   7522				     ;	     hld
   7523
   7524					     hdr     x,'HLD'	     ; FIG
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 133
kernel.asm



1  7525					     cseg	     ;
   7526	0FFE  E8 F27E		     hld:    call    douse
   7527	1001  001A			     dw	     26
   7528
   7529				     ;	     DPL
   7530
   7531					     hdr     1,'DPL'	     ; FIG
1  7532					     cseg
1  7533	0BAB			     heads   segment public	     ;
1  7534	0BAB  03			     db	     ??02F8	     ;
1  7535	0BAC  44 50 4C			     db	     'DPL'	     ;
1  7536	0BAF  0BA2			     dw	     lastl	     ;
1  7537	0BB1  1003r			     dw	     cfadr	     ;
1  7538	0BB3			     heads   ends
1  7539					     cseg	     ;
   7540	1003  E8 F279		     dpl:    call    douse
   7541	1006  001C			     dw	     28
   7542
   7543				     ;	     OUT
   7544
   7545					     hdr     1,'OUT'	     ; FIG
1  7546					     cseg
1  7547	0BB3			     heads   segment public	     ;
1  7548	0BB3  03			     db	     ??02FA	     ;
1  7549	0BB4  4F 55 54			     db	     'OUT'	     ;
1  7550	0BB7  0BAB			     dw	     lastl	     ;
1  7551	0BB9  1008r			     dw	     cfadr	     ;
1  7552	0BBB			     heads   ends
1  7553					     cseg	     ;
   7554	1008  E8 F274		     outt:   call    douse
   7555	100B  001E			     dw	     30
   7556
   7557				     ; User area bytes #USER onwards are available for user applications
   7558
   7559				     ;	     #USER  ( -- +n )
   7560
   7561					     hdr     1,'#USER',,1
1  7562					     cseg
1  7563					     aseg
1  7564	0BBB			     heads   segment public	     ;
1  7565	0BBB  05			     db	     ??02FC	     ;
1  7566	0BBC  23 55 53 45 52		     db	     '#USER'	     ;
1  7567	0BC1  0BB3			     dw	     lastl	     ;
1  7568	0BC3  B534r			     dw	     cfadr	     ;
1  7569	0BC5			     heads   ends
1  7570					     cseg	     ;
1  7571					     aseg
   7572	B534  E8 4E9B		     nusr:   call    doval
   7573	B537  0020			     dw	     32
   7574
   7575				     ;	     sys?  ( --	flag )	     sys @ 0<>
   7576
   7577					     hdr     x,'SYS?'
1  7578					     cseg	     ;
   7579	100D  FF 36 0FD0r	     sysq:   push    word ptr sys1
   7580	1011  E9 F61E			     jmp     zneq
   7581
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 134
kernel.asm



   7582				     ;	     state?  ( -- flag )     state @ 0<>
   7583
   7584					     hdr     x,'STATE?',,1
1  7585					     cseg	     ;
1  7586					     aseg
   7587	B539  FF 36 B50Dr	     stateq: push    word ptr state1
   7588	B53D  E9 50F2			     jmp     zneq
   7589
   7590				     ;	     check?  ( -- flag )     checking @	0<>
   7591
   7592					     hdr     x,'CHECK?',,1
1  7593					     cseg	     ;
1  7594					     aseg
   7595	B540  FF 36 B523r	     chkq:   push    word ptr check1
   7596	B544  E9 50EB			     jmp     zneq
   7597
   7598				     ;	     APPLICATION  ( -- )     sys off
   7599
   7600					     hdr     1,'APPLICATION'
1  7601					     cseg
1  7602	0BC5			     heads   segment public	     ;
1  7603	0BC5  0B			     db	     ??0304	     ;
1  7604	0BC6  41 50 50 4C 49 43	41+	     db	     'APPLICATION'	     ;
   7605	      54 49 4F 4E
1  7606	0BD1  0BBB			     dw	     lastl	     ;
1  7607	0BD3  1014r			     dw	     cfadr	     ;
1  7608	0BD5			     heads   ends
1  7609					     cseg	     ;
   7610	1014  BB 0FD0r		     app:    mov     bx,offset sys1
   7611	1017  E9 F442			     jmp     off1
   7612
   7613				     ;	     SYSTEM  ( -- )	     sys on
   7614
   7615					     hdr     1,'SYSTEM',,1
1  7616					     cseg
1  7617					     aseg
1  7618	0BD5			     heads   segment public	     ;
1  7619	0BD5  06			     db	     ??0306	     ;
1  7620	0BD6  53 59 53 54 45 4D		     db	     'SYSTEM'		     ;
1  7621	0BDC  0BC5			     dw	     lastl	     ;
1  7622	0BDE  B547r			     dw	     cfadr	     ;
1  7623	0BE0			     heads   ends
1  7624					     cseg	     ;
1  7625					     aseg
   7626	B547  BB 0FD0r		     system: mov     bx,offset sys1
   7627	B54A  E9 4F07			     jmp     on1
   7628
   7629				     ;	     h	( -- addr )	     sys @ if dps end dp
   7630
   7631					     hdr     x,'H'
1  7632					     cseg	     ;
   7633	101A  A1 0FD0r		     hh:     mov     ax,sys1
   7634	101D  0B C0			     or	     ax,ax
   7635	101F  75 02			     jnz     hh1
   7636	1021  EB C7			     jmp     dpp
   7637	1023  E9 A4FF		     hh1:    jmp     dps
   7638
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 135
kernel.asm



   7639				     ;	     HERE  ( --	addr )	     h @
   7640
   7641					     hdr     1,'HERE'
1  7642					     cseg
1  7643	0BE0			     heads   segment public	     ;
1  7644	0BE0  04			     db	     ??030A	     ;
1  7645	0BE1  48 45 52 45		     db	     'HERE'	     ;
1  7646	0BE5  0BD5			     dw	     lastl	     ;
1  7647	0BE7  1026r			     dw	     cfadr	     ;
1  7648	0BE9			     heads   ends
1  7649					     cseg	     ;
   7650	1026  E8 F24C		     here:   call    docol
   7651	1029  101Ar 03D2r		     dw	     hh,at
   7652	102D  0289r			     dw	     exit
   7653
   7654				     ;	     ALLOT  ( u	-- )	     dup unused	u> abort" no data space" h +!
   7655
   7656					     hdr     1,'ALLOT'	     ; non-standard
1  7657					     cseg
1  7658	0BE9			     heads   segment public	     ;
1  7659	0BE9  05			     db	     ??030C	     ;
1  7660	0BEA  41 4C 4C 4F 54		     db	     'ALLOT'	     ;
1  7661	0BEF  0BE0			     dw	     lastl	     ;
1  7662	0BF1  102Fr			     dw	     cfadr	     ;
1  7663	0BF3			     heads   ends
1  7664					     cseg	     ;
   7665	102F  E8 F243		     allot:  call    docol	     ; unsigned	values only
   7666	1032  0304r			     dw	     dupp
   7667	1034  113Fr 067Ar		     dw	     unus,ugrea
   7668	1038  1271r			     dw	     pabq
   7669					     dcs     'no data space'
1  7670	103A  0D			     db	     ??030E	     ;
1  7671	103B  6E 6F 20 64 61 74	61+  ??030F  db	     'no data space'
   7672	      20 73 70 61 63 65
   7673	1048  101Ar 044Cr	     allot1  dw	     hh,pstor
   7674	104C  0289r			     dw	     exit
   7675
   7676				     ;	     -ALLOT  ( u -- )	     negate h +!
   7677
   7678					     hdr     1,'-ALLOT'
1  7679					     cseg
1  7680	0BF3			     heads   segment public	     ;
1  7681	0BF3  06			     db	     ??0310	     ;
1  7682	0BF4  2D 41 4C 4C 4F 54		     db	     '-ALLOT'		     ;
1  7683	0BFA  0BE9			     dw	     lastl	     ;
1  7684	0BFC  104Er			     dw	     cfadr	     ;
1  7685	0BFE			     heads   ends
1  7686					     cseg	     ;
   7687	104E  E8 F224		     dallot: call    docol
   7688	1051  0749r			     dw	     negat
   7689	1053  0A8Dr 1048r		     dw	     bran,allot1
   7690
   7691				     ;	     RESERVE  (	u -- addr )  here swap allot
   7692
   7693					     hdr     1,'RESERVE'
1  7694					     cseg
1  7695	0BFE			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 136
kernel.asm



1  7696	0BFE  07			     db	     ??0312	     ;
1  7697	0BFF  52 45 53 45 52 56	45	     db	     'RESERVE'		     ;
1  7698	0C06  0BF3			     dw	     lastl	     ;
1  7699	0C08  1057r			     dw	     cfadr	     ;
1  7700	0C0A			     heads   ends
1  7701					     cseg	     ;
   7702	1057  E8 F21B		     resv:   call    docol
   7703	105A  1026r 0315r 102Fr		     dw	     here,swap,allot
   7704	1060  0289r			     dw	     exit
   7705
   7706				     ;	     C,	 ( char	-- )	     1 reserve c!
   7707
   7708					     hdr     1,'C,'
1  7709					     cseg
1  7710	0C0A			     heads   segment public	     ;
1  7711	0C0A  02			     db	     ??0314	     ;
1  7712	0C0B  43 2C			     db	     'C,'	     ;
1  7713	0C0D  0BFE			     dw	     lastl	     ;
1  7714	0C0F  1062r			     dw	     cfadr	     ;
1  7715	0C11			     heads   ends
1  7716					     cseg	     ;
   7717	1062  E8 F210		     ccomm:  call    docol
   7718	1065  0F7Fr 1057r		     dw	     one,resv
   7719	1069  03E7r			     dw	     cstor
   7720	106B  0289r			     dw	     exit
   7721
   7722				     ;	     ,	( x -- )	     2 reserve !
   7723
   7724					     hdr     1,','
1  7725					     cseg
1  7726	0C11			     heads   segment public	     ;
1  7727	0C11  01			     db	     ??0316	     ;
1  7728	0C12  2C			     db	     ','	     ;
1  7729	0C13  0C0A			     dw	     lastl	     ;
1  7730	0C15  106Dr			     dw	     cfadr	     ;
1  7731	0C17			     heads   ends
1  7732					     cseg	     ;
   7733	106D  E8 F205		     comma:  call    docol
   7734	1070  0F83r 1057r		     dw	     two,resv
   7735	1074  03D8r			     dw	     store
   7736	1076  0289r			     dw	     exit
   7737
   7738				     ;	     >BODY  ( xt -- addr )   3 +
   7739
   7740					     hdr     1,'>BODY'
1  7741					     cseg
1  7742	0C17			     heads   segment public	     ;
1  7743	0C17  05			     db	     ??0318	     ;
1  7744	0C18  3E 42 4F 44 59		     db	     '>BODY'	     ;
1  7745	0C1D  0C11			     dw	     lastl	     ;
1  7746	0C1F  1078r			     dw	     cfadr	     ;
1  7747	0C21			     heads   ends
1  7748					     cseg	     ;
   7749	1078  58		     tbody:  pop     ax
   7750	1079  05 0003			     add     ax,3
   7751	107C  E9 F13A			     jmp     apush
   7752
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 137
kernel.asm



   7753				     ;	     body>  ( addr -- xt )   3 -
   7754				     ;
   7755				     ;	     hdr     x,'BODY>'
   7756				     ;fbody: pop     ax
   7757				     ;	     sub     ax,3
   7758				     ;	     jmp     apush
   7759
   7760				     ;	     n>count  (	nfa -- h-addr len )  dup 1+ swap hc@ 31	and
   7761
   7762					     hdr     x,'N>COUNT',,1
1  7763					     cseg	     ;
1  7764					     aseg
   7765	B54D  5B		     ncnt:   pop     bx
   7766	B54E  8E 06 03D0r		     mov     es,hseg1
   7767	B552  26: 8A 07			     mov     al,es:[bx]
   7768	B555  43			     inc     bx
   7769	B556  53			     push    bx
   7770	B557  25 001F			     and     ax,31
   7771	B55A  E9 4C5C			     jmp     apush
   7772
   7773				     ;	     n>link  ( nfa -- lfa )	     n>count +
   7774
   7775					     hdr     x,'N>LINK',,1
1  7776					     cseg	     ;
1  7777					     aseg
   7778	B55D  E8 4D15		     nlnk:   call    docol
   7779	B560  B54Dr 076Dr		     dw	     ncnt,plus
   7780	B564  0289r			     dw	     exit
   7781
   7782				     ;	     N>NAME  ( nfa1 -- nfa2 | 0	)    n>link h@
   7783
   7784					     hdr     1,'N>NAME',,1
1  7785					     cseg
1  7786					     aseg
1  7787	0C21			     heads   segment public	     ;
1  7788	0C21  06			     db	     ??031E	     ;
1  7789	0C22  4E 3E 4E 41 4D 45		     db	     'N>NAME'		     ;
1  7790	0C28  0C17			     dw	     lastl	     ;
1  7791	0C2A  B566r			     dw	     cfadr	     ;
1  7792	0C2C			     heads   ends
1  7793					     cseg	     ;
1  7794					     aseg
   7795	B566  E8 4D0C		     ntnam:  call    docol
   7796	B569  B55Dr B000r		     dw	     nlnk,hat
   7797	B56D  0289r			     dw	     exit
   7798
   7799				     ;	     name>  ( nfa -- xt	)	     n>link cell+ h@
   7800
   7801					     hdr     x,'NAME>',,1
1  7802					     cseg	     ;
1  7803					     aseg
   7804	B56F  E8 4D03		     namef:  call    docol
   7805	B572  B55Dr 079Er		     dw	     nlnk,cellp
   7806	B576  B000r			     dw	     hat
   7807	B578  0289r			     dw	     exit
   7808
   7809				     ;	     W>NAME  ( wid -- nfa | 0 )	     @ h@
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 138
kernel.asm



   7810
   7811					     hdr     1,'W>NAME',,1
1  7812					     cseg
1  7813					     aseg
1  7814	0C2C			     heads   segment public	     ;
1  7815	0C2C  06			     db	     ??0322	     ;
1  7816	0C2D  57 3E 4E 41 4D 45		     db	     'W>NAME'		     ;
1  7817	0C33  0C21			     dw	     lastl	     ;
1  7818	0C35  B57Ar			     dw	     cfadr	     ;
1  7819	0C37			     heads   ends
1  7820					     cseg	     ;
1  7821					     aseg
   7822	B57A  5B		     wtnam:  pop     bx
   7823	B57B  FF 37			     push    [bx]
   7824	B57D  E9 FA80			     jmp     hat
   7825
   7826				     ;	     -alias  ( nfa -- nfa flag )     dup hc@ $80 <
   7827
   7828					     hdr     x,'-ALIAS',,1   ; false if	alias
1  7829					     cseg	     ;
1  7830					     aseg
   7831	B580  E8 4CF2		     dalias: call    docol
   7832	B583  0304r B012r		     dw	     dupp,hcat
   7833	B587  02A1r			     dw	     clit
   7834	B589  80			     db	     80h
   7835	B58A  0668r			     dw	     less
   7836	B58C  0289r			     dw	     exit
   7837
   7838				     ;	     >NAME  ( xt -- nfa	| 0 )
   7839				     ;				     voc-link begin @ dup while	tuck cell- w>name
   7840				     ;				     begin ?dup	while -alias if	2dup name> = if
   7841				     ;				     -rot 2drop	end then n>name	repeat swap
   7842				     ;				     repeat nip
   7843
   7844					     hdr     1,'>NAME',,1
1  7845					     cseg
1  7846					     aseg
1  7847	0C37			     heads   segment public	     ;
1  7848	0C37  05			     db	     ??0326	     ;
1  7849	0C38  3E 4E 41 4D 45		     db	     '>NAME'	     ;
1  7850	0C3D  0C2C			     dw	     lastl	     ;
1  7851	0C3F  B58Er			     dw	     cfadr	     ;
1  7852	0C41			     heads   ends
1  7853					     cseg	     ;
1  7854					     aseg
   7855	B58E  E8 4CE4		     tnam:   call    docol
   7856	B591  B52Ar			     dw	     vocl
   7857	B593  03D2r		     tnam1   dw	     at
   7858	B595  0304r			     dw	     dupp
   7859	B597  0A92r B5C9r		     dw	     zbran,tnam5
   7860	B59B  036Ar			     dw	     tuck
   7861	B59D  07ACr			     dw	     cellm
   7862	B59F  B57Ar			     dw	     wtnam
   7863	B5A1  030Br		     tnam2   dw	     qdup
   7864	B5A3  0A92r B5C3r		     dw	     zbran,tnam4
   7865	B5A7  B580r			     dw	     dalias	     ; skip if alias
   7866	B5A9  0A92r B5BDr		     dw	     zbran,tnam3
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 139
kernel.asm



   7867	B5AD  037Er B56Fr		     dw	     tdup,namef
   7868	B5B1  063Br			     dw	     equal
   7869	B5B3  0A92r B5BDr		     dw	     zbran,tnam3
   7870	B5B7  032Dr 0378r		     dw	     drot,tdrop
   7871	B5BB  0289r			     dw	     exit
   7872	B5BD  B566r		     tnam3   dw	     ntnam
   7873	B5BF  0A8Dr B5A1r		     dw	     bran,tnam2
   7874	B5C3  0315r		     tnam4   dw	     swap
   7875	B5C5  0A8Dr B593r		     dw	     bran,tnam1
   7876	B5C9  0362r		     tnam5   dw	     nip
   7877	B5CB  0289r			     dw	     exit	     ; not found
   7878
   7879				     ;	     (NAME)  ( nfa -- c-addr u )     n>count <#	begin dup while
   7880				     ;					     1-	2dup + hc@ hold	repeat #>
   7881
   7882					     hdr     1,'(NAME)',,1
1  7883					     cseg
1  7884					     aseg
1  7885	0C41			     heads   segment public	     ;
1  7886	0C41  06			     db	     ??0328	     ;
1  7887	0C42  28 4E 41 4D 45 29		     db	     '(NAME)'		     ;
1  7888	0C48  0C37			     dw	     lastl	     ;
1  7889	0C4A  B5CDr			     dw	     cfadr	     ;
1  7890	0C4C			     heads   ends
1  7891					     cseg	     ;
1  7892					     aseg
   7893	B5CD  E8 4CA5		     pname:  call    docol
   7894	B5D0  B54Dr			     dw	     ncnt
   7895	B5D2  09CCr			     dw	     bdigs
   7896	B5D4  0304r		     pname1  dw	     dupp
   7897	B5D6  0A92r B5E8r		     dw	     zbran,pname2
   7898	B5DA  07A6r			     dw	     onem
   7899	B5DC  037Er 076Dr B012r		     dw	     tdup,plus,hcat
   7900	B5E2  0A34r			     dw	     hold
   7901	B5E4  0A8Dr B5D4r		     dw	     bran,pname1
   7902	B5E8  09D7r		     pname2  dw	     edigs
   7903	B5EA  0289r			     dw	     exit
   7904
   7905				     ;	     .ID  ( nfa	| 0 -- )     ?dup if dup name> limit u<	if (dnorm) else
   7906				     ;				     (dbold) then c@ over hc@ $40 and 3	rshift
   7907				     ;				     xor attrib	c! (name) type normal end
   7908				     ;				     ."	[noname]"
   7909
   7910					     hdr     1,'.ID',,1
1  7911					     cseg
1  7912					     aseg
1  7913	0C4C			     heads   segment public	     ;
1  7914	0C4C  03			     db	     ??032A	     ;
1  7915	0C4D  2E 49 44			     db	     '.ID'	     ;
1  7916	0C50  0C41			     dw	     lastl	     ;
1  7917	0C52  B5ECr			     dw	     cfadr	     ;
1  7918	0C54			     heads   ends
1  7919					     cseg	     ;
1  7920					     aseg
   7921	B5EC  E8 4C86		     dotid:  call    docol
   7922	B5EF  030Br			     dw	     qdup
   7923	B5F1  0A92r B62Ar		     dw	     zbran,dotid3
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 140
kernel.asm



   7924	B5F5  0304r B56Fr		     dw	     dupp,namef
   7925	B5F9  0F8Fr 0670r		     dw	     limit,uless
   7926	B5FD  0A92r B609r		     dw	     zbran,dotid1
   7927	B601  02A8r 0D17r		     dw	     lit,dnorm	     ; normal
   7928	B605  0A8Dr B60Dr		     dw	     bran,dotid2
   7929	B609  02A8r 0D19r	     dotid1  dw	     lit,dbold	     ; bold
   7930	B60D  03DEr		     dotid2  dw	     cat
   7931	B60F  031Cr B012r		     dw	     over,hcat
   7932	B613  02A1r			     dw	     clit	     ; immediate?
   7933	B615  40			     db	     40h
   7934	B616  0723r			     dw	     andd
   7935	B618  0F87r 08C1r		     dw	     three,rsh
   7936	B61C  0733r			     dw	     xorr	     ; toggle bright
   7937	B61E  0CF2r 03E7r		     dw	     attrib,cstor
   7938	B622  B5CDr 0EE4r		     dw	     pname,typee
   7939	B626  0D1Br			     dw	     vnorm
   7940	B628  0289r			     dw	     exit
   7941	B62A  144Dr		     dotid3  dw	     pdotq
   7942					     dcs     '[noname]'
1  7943	B62C  08			     db	     ??032C	     ;
1  7944	B62D  5B 6E 6F 6E 61 6D	65+  ??032D  db	     '[noname]'
   7945	      5D
   7946	B635  0289r			     dw	     exit
   7947
   7948				     ;	     .name  ( xt -- )	     >name .id
   7949
   7950					     hdr     x,'.NAME',,1
1  7951					     cseg	     ;
1  7952					     aseg
   7953	B637  E8 4C3B		     dotnam: call    docol
   7954	B63A  B58Er B5ECr		     dw	     tnam,dotid
   7955	B63E  0289r			     dw	     exit
   7956
   7957				     ;	     .VOC  ( wid -- )	     cell+ cell+ @ .id
   7958
   7959					     hdr     1,'.VOC',,1
1  7960					     cseg
1  7961					     aseg
1  7962	0C54			     heads   segment public	     ;
1  7963	0C54  04			     db	     ??0330	     ;
1  7964	0C55  2E 56 4F 43		     db	     '.VOC'	     ;
1  7965	0C59  0C4C			     dw	     lastl	     ;
1  7966	0C5B  B640r			     dw	     cfadr	     ;
1  7967	0C5D			     heads   ends
1  7968					     cseg	     ;
1  7969					     aseg
   7970	B640  5B		     dotvoc: pop     bx
   7971	B641  83 C3 04			     add     bx,cw*2
   7972	B644  FF 37			     push    [bx]
   7973	B646  EB A4			     jmp     dotid
   7974
   7975				     ;	     !CSP  ( --	)	     sp@ csp !
   7976
   7977					     hdr     1,'!CSP',,1     ; FIG
1  7978					     cseg
1  7979					     aseg
1  7980	0C5D			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 141
kernel.asm



1  7981	0C5D  04			     db	     ??0332	     ;
1  7982	0C5E  21 43 53 50		     db	     '!CSP'	     ;
1  7983	0C62  0C54			     dw	     lastl	     ;
1  7984	0C64  B648r			     dw	     cfadr	     ;
1  7985	0C66			     heads   ends
1  7986					     cseg	     ;
1  7987					     aseg
   7988	B648  8B C4		     scsp:   mov     ax,sp
   7989	B64A  A3 B51Er			     mov     cspp1,ax
   7990					     nextt
1  7991	B64D  AD			     lodsw
1  7992	B64E  FF E0			     jmp     ax
   7993
   7994				     ;	     ?CSP  ( --	)	     sp@ csp @ - ?bal
   7995
   7996					     hdr     1,'?CSP',,1     ; FIG
1  7997					     cseg
1  7998					     aseg
1  7999	0C66			     heads   segment public	     ;
1  8000	0C66  04			     db	     ??0334	     ;
1  8001	0C67  3F 43 53 50		     db	     '?CSP'	     ;
1  8002	0C6B  0C5D			     dw	     lastl	     ;
1  8003	0C6D  B650r			     dw	     cfadr	     ;
1  8004	0C6F			     heads   ends
1  8005					     cseg	     ;
1  8006					     aseg
   8007	B650  A1 B51Er		     qcsp:   mov     ax,cspp1
   8008	B653  2B C4			     sub     ax,sp
   8009	B655  50			     push    ax
   8010	B656  E9 F9D5			     jmp     qbal
   8011
   8012				     ;	     ?COMP  ( -- )	     state? 0= abort" compilation only"
   8013
   8014					     hdr     1,'?COMP',,1    ; FIG
1  8015					     cseg
1  8016					     aseg
1  8017	0C6F			     heads   segment public	     ;
1  8018	0C6F  05			     db	     ??0336	     ;
1  8019	0C70  3F 43 4F 4D 50		     db	     '?COMP'	     ;
1  8020	0C75  0C66			     dw	     lastl	     ;
1  8021	0C77  B659r			     dw	     cfadr	     ;
1  8022	0C79			     heads   ends
1  8023					     cseg	     ;
1  8024					     aseg
   8025	B659  E8 4C19		     qcomp:  call    docol
   8026	B65C  B539r			     dw	     stateq
   8027	B65E  0628r			     dw	     zequ
   8028	B660  1271r			     dw	     pabq
   8029					     dcs     'compilation only'
1  8030	B662  10			     db	     ??0338	     ;
1  8031	B663  63 6F 6D 70 69 6C	61+  ??0339  db	     'compilation only'
   8032	      74 69 6F 6E 20 6F	6E+
   8033	      6C 79
   8034	B673  0289r			     dw	     exit
   8035
   8036				     ;	     ?EXEC  ( -- )	     state? abort" execution only"
   8037
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 142
kernel.asm



   8038					     hdr     1,'?EXEC',,1    ; FIG
1  8039					     cseg
1  8040					     aseg
1  8041	0C79			     heads   segment public	     ;
1  8042	0C79  05			     db	     ??033A	     ;
1  8043	0C7A  3F 45 58 45 43		     db	     '?EXEC'	     ;
1  8044	0C7F  0C6F			     dw	     lastl	     ;
1  8045	0C81  B675r			     dw	     cfadr	     ;
1  8046	0C83			     heads   ends
1  8047					     cseg	     ;
1  8048					     aseg
   8049	B675  E8 4BFD		     qexec:  call    docol
   8050	B678  B539r			     dw	     stateq
   8051	B67A  1271r			     dw	     pabq
   8052					     dcs     'execution	only'
1  8053	B67C  0E			     db	     ??033C	     ;
1  8054	B67D  65 78 65 63 75 74	69+  ??033D  db	     'execution	only'
   8055	      6F 6E 20 6F 6E 6C	79
   8056	B68B  0289r			     dw	     exit
   8057
   8058				     ;	     ?STACK  ( -- )	     sp@ s0 @ 1+ pad within abort" stack?"
   8059				     ;				     rp@ r0 @ 1+ fs0 @ within abort" r-stack?"
   8060				     ;				     fsp @ fs0 @ dup 1+	swap (nfpm) @ -	within
   8061				     ;				     abort" f-stack?"
   8062
   8063					     hdr     1,'?STACK',,1   ; FIG
1  8064					     cseg
1  8065					     aseg
1  8066	0C83			     heads   segment public	     ;
1  8067	0C83  06			     db	     ??033E	     ;
1  8068	0C84  3F 53 54 41 43 4B		     db	     '?STACK'		     ;
1  8069	0C8A  0C79			     dw	     lastl	     ;
1  8070	0C8C  B68Dr			     dw	     cfadr	     ;
1  8071	0C8E			     heads   ends
1  8072					     cseg	     ;
1  8073					     aseg
   8074	B68D  E8 4BE5		     qstac:  call    docol
   8075	B690  02B6r			     dw	     spat
   8076	B692  0FE0r 03D2r		     dw	     szero,at
   8077	B696  0798r			     dw	     onep
   8078	B698  1115r			     dw	     pad
   8079	B69A  06B7r			     dw	     within
   8080	B69C  1271r			     dw	     pabq
   8081					     dcs     'stack?'
1  8082	B69E  06			     db	     ??0340	     ;
1  8083	B69F  73 74 61 63 6B 3F	     ??0341  db	     'stack?'
   8084	B6A5  02C1r			     dw	     rpat
   8085	B6A7  0FE5r 03D2r		     dw	     rzero,at
   8086	B6AB  0798r			     dw	     onep
   8087	B6AD  0FEFr 03D2r		     dw	     fszero,at	     ; = S0 if no float
   8088	B6B1  06B7r			     dw	     within
   8089	B6B3  1271r			     dw	     pabq
   8090					     dcs     'r-stack?'
1  8091	B6B5  08			     db	     ??0342	     ;
1  8092	B6B6  72 2D 73 74 61 63	6B+  ??0343  db	     'r-stack?'
   8093	      3F
   8094	B6BE  0FC1r 03D2r		     dw	     fsp,at
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 143
kernel.asm



   8095	B6C2  0FEFr 03D2r		     dw	     fszero,at
   8096	B6C6  0304r 0798r 0315r		     dw	     dupp,onep,swap
   8097	B6CC  02A8r 0FB0r		     dw	     lit,nfpm
   8098	B6D0  03D2r			     dw	     at
   8099	B6D2  0775r			     dw	     subb
   8100	B6D4  06B7r			     dw	     within
   8101	B6D6  1271r			     dw	     pabq
   8102					     dcs     'f-stack?'
1  8103	B6D8  08			     db	     ??0344	     ;
1  8104	B6D9  66 2D 73 74 61 63	6B+  ??0345  db	     'f-stack?'
   8105	      3F
   8106	B6E1  0289r			     dw	     exit
   8107
   8108				     ;	     ?defined  ( flag -- )   0=	abort" is undefined"
   8109
   8110					     hdr     x,'?DEFINED',,1
1  8111					     cseg	     ;
1  8112					     aseg
   8113	B6E3  E8 4B8F		     qdef:   call    docol
   8114	B6E6  0628r			     dw	     zequ
   8115	B6E8  1271r			     dw	     pabq
   8116					     dcs     'is undefined'
1  8117	B6EA  0C			     db	     ??0348	     ;
1  8118	B6EB  69 73 20 75 6E 64	65+  ??0349  db	     'is undefined'
   8119	      66 69 6E 65 64
   8120	B6F7  0289r			     dw	     exit
   8121
   8122				     ;	     [			     state off ;immediate
   8123
   8124					     hdr     1,'[',1,1
1  8125					     cseg
1  8126					     aseg
1  8127	0C8E			     heads   segment public	     ;
1  8128	0C8E  41			     db	     ??034A	     ;
1  8129	0C8F  5B			     db	     '['	     ;
1  8130	0C90  0C83			     dw	     lastl	     ;
1  8131	0C92  B6F9r			     dw	     cfadr	     ;
1  8132	0C94			     heads   ends
1  8133					     cseg	     ;
1  8134					     aseg
   8135	B6F9  BB B50Dr		     lbrac:  mov     bx,offset state1
   8136	B6FC  E9 4D5D			     jmp     off1
   8137
   8138				     ;	     ]			     state on
   8139
   8140					     hdr     1,']',,1
1  8141					     cseg
1  8142					     aseg
1  8143	0C94			     heads   segment public	     ;
1  8144	0C94  01			     db	     ??034C	     ;
1  8145	0C95  5D			     db	     ']'	     ;
1  8146	0C96  0C8E			     dw	     lastl	     ;
1  8147	0C98  B6FFr			     dw	     cfadr	     ;
1  8148	0C9A			     heads   ends
1  8149					     cseg	     ;
1  8150					     aseg
   8151	B6FF  BB B50Dr		     rbrac:  mov     bx,offset state1	     ; must be -1 for INTERPRET	to work
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 144
kernel.asm



   8152	B702  E9 4D4F			     jmp     on1
   8153
   8154				     ;	     (accept)  ( c-addr	+n1 -- +n2 )
   8155				     ;				     0 begin key dup >r	dup bl 255 between over
   8156				     ;				     127 <> and	2over -	and if dup emit	over 4
   8157				     ;				     pick + c! 1+ else 2dup dup	8 = swap esc =
   8158				     ;				     or	and if esc = if	0 swap else 1- 1 then
   8159				     ;				     begin 8 dup emit space emit 1- dup	0= until
   8160				     ;				     then drop then r> 13 = until nip nip
   8161
   8162					     hdr     x,'(ACCEPT)'
1  8163					     cseg	     ;
   8164	107F  E8 F1F3		     pacce:  call    docol
   8165	1082  0F79r			     dw	     zero
   8166	1084  0E8Fr		     pacce1  dw	     key
   8167	1086  0304r 02C9r		     dw	     dupp,tor
   8168	108A  0304r 0F8Br		     dw	     dupp,bll	     ; not control chars
   8169	108E  02A1r			     dw	     clit
   8170	1090  FF			     db	     255
   8171	1091  06C5r			     dw	     betw
   8172	1093  031Cr			     dw	     over	     ; nor del
   8173	1095  02A1r			     dw	     clit
   8174	1097  7F			     db	     127
   8175	1098  0648r 0723r		     dw	     nequ,andd
   8176	109C  0393r 0775r		     dw	     tover,subb	     ; nor buffer end
   8177	10A0  0723r			     dw	     andd
   8178	10A2  0A92r 10BBr		     dw	     zbran,pacce2
   8179	10A6  0304r 0ED1r		     dw	     dupp,emit
   8180	10AA  031Cr			     dw	     over
   8181	10AC  02A1r			     dw	     clit
   8182	10AE  04			     db	     4
   8183	10AF  0358r			     dw	     pick
   8184	10B1  076Dr			     dw	     plus
   8185	10B3  03E7r			     dw	     cstor
   8186	10B5  0798r			     dw	     onep
   8187	10B7  0A8Dr 10FFr		     dw	     bran,pacce6
   8188	10BB  037Er		     pacce2  dw	     tdup
   8189	10BD  0304r			     dw	     dupp
   8190	10BF  02A1r			     dw	     clit
   8191	10C1  08			     db	     bs		     ; backspace?
   8192	10C2  063Br 0315r		     dw	     equal,swap
   8193	10C6  02A1r			     dw	     clit
   8194	10C8  1B			     db	     escape	     ; escape?
   8195	10C9  063Br 072Br		     dw	     equal,orr
   8196	10CD  0723r			     dw	     andd
   8197	10CF  0A92r 10FDr		     dw	     zbran,pacce5
   8198	10D3  02A1r			     dw	     clit
   8199	10D5  1B			     db	     escape	     ; escape?
   8200	10D6  063Br			     dw	     equal
   8201	10D8  0A92r 10E4r		     dw	     zbran,pacce3
   8202	10DC  0F79r 0315r		     dw	     zero,swap
   8203	10E0  0A8Dr 10E8r		     dw	     bran,pacce4
   8204	10E4  07A6r 0F7Fr	     pacce3  dw	     onem,one
   8205	10E8  02A1r		     pacce4  dw	     clit
   8206	10EA  08			     db	     bs
   8207	10EB  0304r 0ED1r		     dw	     dupp,emit
   8208	10EF  0ECCr 0ED1r		     dw	     space,emit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 145
kernel.asm



   8209	10F3  07A6r			     dw	     onem
   8210	10F5  0304r 0628r		     dw	     dupp,zequ
   8211	10F9  0A92r 10E8r		     dw	     zbran,pacce4
   8212	10FD  02FEr		     pacce5  dw	     drop
   8213	10FF  02D2r		     pacce6  dw	     fromr
   8214	1101  02A1r			     dw	     clit
   8215	1103  0D			     db	     cr		     ; cr?
   8216	1104  063Br			     dw	     equal
   8217	1106  0A92r 1084r		     dw	     zbran,pacce1
   8218	110A  0362r 0362r		     dw	     nip,nip
   8219	110E  0289r			     dw	     exit
   8220
   8221				     ;	     ACCEPT  ( c-addr +n1 -- +n2 )   defer accept
   8222
   8223					     hdr     1,'ACCEPT'
1  8224					     cseg
1  8225	0C9A			     heads   segment public	     ;
1  8226	0C9A  06			     db	     ??0350	     ;
1  8227	0C9B  41 43 43 45 50 54		     db	     'ACCEPT'		     ;
1  8228	0CA1  0C94			     dw	     lastl	     ;
1  8229	0CA3  1110r			     dw	     cfadr	     ;
1  8230	0CA5			     heads   ends
1  8231					     cseg	     ;
   8232	1110  E8 F187		     accept: call    aexec
   8233	1113  107Fr			     dw	     pacce
   8234
   8235				     ;	     PAD  ( -- addr )	     dp	@ (npno) @ +
   8236
   8237					     hdr     1,'PAD'
1  8238					     cseg
1  8239	0CA5			     heads   segment public	     ;
1  8240	0CA5  03			     db	     ??0352	     ;
1  8241	0CA6  50 41 44			     db	     'PAD'	     ;
1  8242	0CA9  0C9A			     dw	     lastl	     ;
1  8243	0CAB  1115r			     dw	     cfadr	     ;
1  8244	0CAD			     heads   ends
1  8245					     cseg	     ;
   8246	1115  8B 1E 0FBFr	     pad:    mov     bx,upp
   8247	1119  8B 47 0A			     mov     ax,[bx+10]	     ; DP
   8248	111C  03 06 0FB6r		     add     ax,npno
   8249	1120  E9 F096			     jmp     apush
   8250
   8251				     ;	     >PAD  ( c-addr u -- c-addr2 u )  pad 0 +string
   8252
   8253					     hdr     1,'>PAD'
1  8254					     cseg
1  8255	0CAD			     heads   segment public	     ;
1  8256	0CAD  04			     db	     ??0354	     ;
1  8257	0CAE  3E 50 41 44		     db	     '>PAD'	     ;
1  8258	0CB2  0CA5			     dw	     lastl	     ;
1  8259	0CB4  1123r			     dw	     cfadr	     ;
1  8260	0CB6			     heads   ends
1  8261					     cseg	     ;
   8262	1123  E8 F14F		     tpad:   call    docol
   8263	1126  1115r			     dw	     pad
   8264	1128  0F79r 05E1r		     dw	     zero,pstr
   8265	112C  0289r			     dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 146
kernel.asm



   8266
   8267				     ;	     SOURCE  ( -- c-addr u )	     'source 2@
   8268
   8269					     hdr     1,'SOURCE',,1
1  8270					     cseg
1  8271					     aseg
1  8272	0CB6			     heads   segment public	     ;
1  8273	0CB6  06			     db	     ??0356	     ;
1  8274	0CB7  53 4F 55 52 43 45		     db	     'SOURCE'		     ;
1  8275	0CBD  0CAD			     dw	     lastl	     ;
1  8276	0CBF  B705r			     dw	     cfadr	     ;
1  8277	0CC1			     heads   ends
1  8278					     cseg	     ;
1  8279					     aseg
   8280	B705  BB B506r		     source: mov     bx,offset tsour1
   8281	B708  E9 4CE4			     jmp     tat1
   8282
   8283				     ;	     PARSE  ( char -- c-addr u )     0 (parse)
   8284
   8285					     hdr     1,'PARSE',,1
1  8286					     cseg
1  8287					     aseg
1  8288	0CC1			     heads   segment public	     ;
1  8289	0CC1  05			     db	     ??0358	     ;
1  8290	0CC2  50 41 52 53 45		     db	     'PARSE'	     ;
1  8291	0CC7  0CB6			     dw	     lastl	     ;
1  8292	0CC9  B70Br			     dw	     cfadr	     ;
1  8293	0CCB			     heads   ends
1  8294					     cseg	     ;
1  8295					     aseg
   8296	B70B  B8 0000		     parse:  mov     ax,0	     ; do not change - keep at 4 bytes below (PARSE)
   8297	B70E  50			     push    ax
   8298
   8299				     ;	     (parse)  (	char f -- c-addr u ) 2>r source	>in @ /string r> if tuck
   8300				     ;					     r@	skip over - >in	+! then	2dup r>
   8301				     ;					     scan nip tuck - dup rot 0<> - >in +!
   8302
   8303	B70F  E8 4B63		     ppars:  call    docol
   8304	B712  02E1r			     dw	     ttor
   8305	B714  B705r			     dw	     source
   8306	B716  B4FEr 03D2r 0538r		     dw	     inn,at,sstr
   8307	B71C  02D2r			     dw	     fromr
   8308	B71E  0A92r B732r		     dw	     zbran,ppars1
   8309	B722  036Ar			     dw	     tuck
   8310	B724  02DBr 04E6r		     dw	     rat,skip
   8311	B728  0324r 031Cr 0775r		     dw	     rot,over,subb
   8312	B72E  B4FEr 044Cr		     dw	     inn,pstor
   8313	B732  037Er		     ppars1  dw	     tdup
   8314	B734  02D2r			     dw	     fromr
   8315	B736  04D2r 0362r		     dw	     scan,nip
   8316	B73A  036Ar			     dw	     tuck
   8317	B73C  0775r 0304r		     dw	     subb,dupp
   8318	B740  0324r 0632r		     dw	     rot,zneq
   8319	B744  0775r			     dw	     subb
   8320	B746  B4FEr 044Cr		     dw	     inn,pstor
   8321	B74A  0289r			     dw	     exit
   8322
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 147
kernel.asm



   8323					     hdr     x,'(PARSE)',,1,ppars
1  8324					     cseg	     ;
1  8325					     aseg
   8326
   8327				     ;	     +psb  ( a1	n1 n2 -- n3 )	     >r	(pssiz)	r@ - umin r> 2dup + >r
   8328				     ;					     (psb) + swap cmove	r>
   8329
   8330					     hdr     x,'+PSB',,1
1  8331					     cseg	     ;
1  8332					     aseg
   8333	B74C  5B		     ppsb:   pop     bx
   8334	B74D  59			     pop     cx
   8335	B74E  BF 00FF			     mov     di,pssiz
   8336	B751  2B FB			     sub     di,bx
   8337	B753  3B F9			     cmp     di,cx
   8338	B755  73 02			     jnc     ppsb1
   8339	B757  8B CF			     mov     cx,di
   8340	B759  BF FECDr		     ppsb1:  mov     di,offset orig+psb
   8341	B75C  03 FB			     add     di,bx
   8342	B75E  03 D9			     add     bx,cx
   8343	B760  58			     pop     ax
   8344	B761  53			     push    bx
   8345	B762  E9 4D19			     jmp     cmove1
   8346
   8347				     ;	     "parse			     [char] " /parse
   8348
   8349					     hdr     x,'"PARSE',,1
1  8350					     cseg	     ;
1  8351					     aseg
   8352	B765  B8 0022		     parsq:  mov     ax,22h
   8353	B768  50			     push    ax
   8354
   8355				     ;	     /PARSE  ( char "ccc" -- a n )   0 begin >r	dup parse 2dup r> +psb >r
   8356				     ;					     1+	+ dup source + u< while	2dup c@	=
   8357				     ;					     while 1 dup >in +!	r> +psb	repeat
   8358				     ;					     then 2drop	(psb) r>
   8359
   8360	B769  E8 4B09		     spars:  call    docol
   8361	B76C  0F79r			     dw	     zero
   8362	B76E  02C9r		     spars1  dw	     tor
   8363	B770  0304r B70Br		     dw	     dupp,parse
   8364	B774  037Er			     dw	     tdup
   8365	B776  02D2r B74Cr		     dw	     fromr,ppsb
   8366	B77A  02C9r			     dw	     tor
   8367	B77C  0798r 076Dr		     dw	     onep,plus
   8368	B780  0304r			     dw	     dupp
   8369	B782  B705r 076Dr		     dw	     source,plus
   8370	B786  0670r			     dw	     uless
   8371	B788  0A92r B7A6r		     dw	     zbran,spars2
   8372	B78C  037Er 03DEr		     dw	     tdup,cat
   8373	B790  063Br			     dw	     equal
   8374	B792  0A92r B7A6r		     dw	     zbran,spars2
   8375	B796  0F7Fr 0304r		     dw	     one,dupp
   8376	B79A  B4FEr 044Cr		     dw	     inn,pstor
   8377	B79E  02D2r B74Cr		     dw	     fromr,ppsb
   8378	B7A2  0A8Dr B76Er		     dw	     bran,spars1
   8379	B7A6  0378r		     spars2  dw	     tdrop
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 148
kernel.asm



   8380	B7A8  02A8r FECD		     dw	     lit,psb
   8381	B7AC  02D2r			     dw	     fromr
   8382	B7AE  0289r			     dw	     exit
   8383
   8384					     hdr     1,'/PARSE',,1,spars
1  8385					     cseg
1  8386					     aseg
1  8387	0CCB			     heads   segment public	     ;
1  8388	0CCB  06			     db	     ??0360	     ;
1  8389	0CCC  2F 50 41 52 53 45		     db	     '/PARSE'		     ;
1  8390	0CD2  0CC1			     dw	     lastl	     ;
1  8391	0CD4  B769r			     dw	     cfadr	     ;
1  8392	0CD6			     heads   ends
1  8393					     cseg	     ;
1  8394					     aseg
   8395
   8396				     ;	     pwa  ( -- adr )	     parsed word address
   8397
   8398					     hdr     x,'PWA',,1
1  8399					     cseg	     ;
1  8400					     aseg
   8401	B7B0  E8 4C1F		     pwa:    call    doval
   8402	B7B3  ????			     dw	     ?
   8403
   8404				     ;	     wpack  ( c-addr1 u	-- c-addr2 )
   8405				     ;				     255 umin (em-5) over 31 max - dup to pwa
   8406				     ;				     pack bl affix
   8407
   8408					     hdr     x,'WPACK',,1    ; pack string into	WORD's buffer
1  8409					     cseg	     ;
1  8410					     aseg
   8411	B7B5  E8 4ABD		     wpack:  call    docol
   8412	B7B8  02A1r			     dw	     clit
   8413	B7BA  FF			     db	     255
   8414	B7BB  069Fr			     dw	     umin
   8415	B7BD  02A8r FFEB		     dw	     lit,em-5	     ; allow for header	fields
   8416	B7C1  031Cr			     dw	     over
   8417	B7C3  02A1r			     dw	     clit	     ; word buffer 31+5	chars min (F94)
   8418	B7C5  1F			     db	     31
   8419	B7C6  0693r			     dw	     max
   8420	B7C8  0775r			     dw	     subb
   8421	B7CA  0304r			     dw	     dupp
   8422	B7CC  0F50r B7B0r		     dw	     pto,pwa
   8423	B7D0  04AFr			     dw	     pack
   8424	B7D2  0F8Br 04C5r		     dw	     bll,affix	     ; trailing	blank
   8425	B7D6  0289r			     dw	     exit
   8426
   8427				     ;	     bl-word  (	-- c-addr )  bl	word
   8428
   8429					     hdr     x,'BL-WORD',,1
1  8430					     cseg	     ;
1  8431					     aseg
   8432	B7D8  B8 0020		     blword: mov     ax,20h
   8433	B7DB  50			     push    ax
   8434
   8435				     ;	     WORD  ( char -- c-addr )  true (parse) wpack
   8436
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 149
kernel.asm



   8437	B7DC  E8 4A96		     wordd:  call    docol
   8438	B7DF  0F72r B70Fr		     dw	     true,ppars
   8439	B7E3  B7B5r			     dw	     wpack
   8440	B7E5  0289r			     dw	     exit
   8441
   8442					     hdr     1,'WORD',,1,wordd
1  8443					     cseg
1  8444					     aseg
1  8445	0CD6			     heads   segment public	     ;
1  8446	0CD6  04			     db	     ??0368	     ;
1  8447	0CD7  57 4F 52 44		     db	     'WORD'	     ;
1  8448	0CDB  0CCB			     dw	     lastl	     ;
1  8449	0CDD  B7DCr			     dw	     cfadr	     ;
1  8450	0CDF			     heads   ends
1  8451					     cseg	     ;
1  8452					     aseg
   8453
   8454				     ;	     TOKEN  ( -- c-addr	u )  bl-word count
   8455
   8456					     hdr     1,'TOKEN',,1
1  8457					     cseg
1  8458					     aseg
1  8459	0CDF			     heads   segment public	     ;
1  8460	0CDF  05			     db	     ??036A	     ;
1  8461	0CE0  54 4F 4B 45 4E		     db	     'TOKEN'	     ;
1  8462	0CE5  0CD6			     dw	     lastl	     ;
1  8463	0CE7  B7E7r			     dw	     cfadr	     ;
1  8464	0CE9			     heads   ends
1  8465					     cseg	     ;
1  8466					     aseg
   8467	B7E7  E8 4A8B		     token:  call    docol
   8468	B7EA  B7D8r 04A5r		     dw	     blword,count
   8469	B7EE  0289r			     dw	     exit
   8470
   8471				     ;	     defined  (	-- c-addr 0 | xt -1 | xt 1 ) bl-word find
   8472
   8473					     hdr     x,'DEFINED',,1
1  8474					     cseg	     ;
1  8475					     aseg
   8476	B7F0  E8 4A82		     defined:call    docol
   8477	B7F3  B7D8r B2D5r		     dw	     blword,find
   8478	B7F7  0289r			     dw	     exit
   8479
   8480				     ;	     '	( -- xt	)	     defined ?defined
   8481
   8482					     hdr     1,"'",,1
1  8483					     cseg
1  8484					     aseg
1  8485	0CE9			     heads   segment public	     ;
1  8486	0CE9  01			     db	     ??036E	     ;
1  8487	0CEA  27			     db	     "'"	     ;
1  8488	0CEB  0CDF			     dw	     lastl	     ;
1  8489	0CED  B7F9r			     dw	     cfadr	     ;
1  8490	0CEF			     heads   ends
1  8491					     cseg	     ;
1  8492					     aseg
   8493	B7F9  E8 4A79		     tick:   call    docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 150
kernel.asm



   8494	B7FC  B7F0r			     dw	     defined
   8495	B7FE  B6E3r			     dw	     qdef
   8496	B800  0289r			     dw	     exit
   8497
   8498				     ;	     [UNDEFINED]  ( -- flag )  defined nip 0= ;immediate
   8499
   8500					     hdr     1,'[UNDEFINED]',1,1
1  8501					     cseg
1  8502					     aseg
1  8503	0CEF			     heads   segment public	     ;
1  8504	0CEF  4B			     db	     ??0370	     ;
1  8505	0CF0  5B 55 4E 44 45 46	49+	     db	     '[UNDEFINED]'	     ;
   8506	      4E 45 44 5D
1  8507	0CFB  0CE9			     dw	     lastl	     ;
1  8508	0CFD  B802r			     dw	     cfadr	     ;
1  8509	0CFF			     heads   ends
1  8510					     cseg	     ;
1  8511					     aseg
   8512	B802  E8 4A70		     budef:  call    docol
   8513	B805  B7F0r			     dw	     defined
   8514	B807  0362r			     dw	     nip
   8515	B809  0628r			     dw	     zequ
   8516	B80B  0289r			     dw	     exit
   8517
   8518				     ;	     [DEFINED]	( -- flag )  postpone [undefined] 0= ;immediate
   8519
   8520					     hdr     1,'[DEFINED]',1,1
1  8521					     cseg
1  8522					     aseg
1  8523	0CFF			     heads   segment public	     ;
1  8524	0CFF  49			     db	     ??0372	     ;
1  8525	0D00  5B 44 45 46 49 4E	45+	     db	     '[DEFINED]'	     ;
   8526	      44 5D
1  8527	0D09  0CEF			     dw	     lastl	     ;
1  8528	0D0B  B80Dr			     dw	     cfadr	     ;
1  8529	0D0D			     heads   ends
1  8530					     cseg	     ;
1  8531					     aseg
   8532	B80D  E8 4A65		     bdef:   call    docol
   8533	B810  B802r 0628r		     dw	     budef,zequ
   8534	B814  0289r			     dw	     exit
   8535
   8536				     ;	     IMMEDIATE	( -- )	     $40 xnfa
   8537
   8538					     hdr     1,'IMMEDIATE',,1
1  8539					     cseg
1  8540					     aseg
1  8541	0D0D			     heads   segment public	     ;
1  8542	0D0D  09			     db	     ??0374	     ;
1  8543	0D0E  49 4D 4D 45 44 49	41+	     db	     'IMMEDIATE'	     ;
   8544	      54 45
1  8545	0D17  0CFF			     dw	     lastl	     ;
1  8546	0D19  B816r			     dw	     cfadr	     ;
1  8547	0D1B			     heads   ends
1  8548					     cseg	     ;
1  8549					     aseg
   8550	B816  B2 40		     immed:  mov     dl,40h
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 151
kernel.asm



   8551					     ignore1
1  8552	B818  A8			     db	     0a8h    ;
   8553
   8554				     ;	     xnfa  ( x -- )	     toggle nfa	bit
   8555
   8556	B819  5A		     xnfa:   pop     dx
   8557	B81A  8B 1E B4F5r		     mov     bx,last1
   8558	B81E  8E 06 03D0r		     mov     es,hseg1
   8559	B822  26: 30 17			     xor     es:[bx],dl
   8560					     nextt
1  8561	B825  AD			     lodsw
1  8562	B826  FF E0			     jmp     ax
   8563
   8564				     ;	     SMUDGE  ( -- )	     $20 xnfa
   8565
   8566					     hdr     1,'SMUDGE',,1   ; FIG
1  8567					     cseg
1  8568					     aseg
1  8569	0D1B			     heads   segment public	     ;
1  8570	0D1B  06			     db	     ??0376	     ;
1  8571	0D1C  53 4D 55 44 47 45		     db	     'SMUDGE'		     ;
1  8572	0D22  0D0D			     dw	     lastl	     ;
1  8573	0D24  B828r			     dw	     cfadr	     ;
1  8574	0D26			     heads   ends
1  8575					     cseg	     ;
1  8576					     aseg
   8577	B828  B2 20		     smudg:  mov     dl,20h
   8578	B82A  EB EE			     jmp     xnfa+1
   8579
   8580				     ;	     \	( "ccc"	-- )	     source blk	@ if c/l >in @ over / 1+ *
   8581				     ;				     min then >in ! drop ;immediate
   8582
   8583					     hdr     1,'\',1,1
1  8584					     cseg
1  8585					     aseg
1  8586	0D26			     heads   segment public	     ;
1  8587	0D26  41			     db	     ??0378	     ;
1  8588	0D27  5C			     db	     '\'	     ;
1  8589	0D28  0D1B			     dw	     lastl	     ;
1  8590	0D2A  B82Cr			     dw	     cfadr	     ;
1  8591	0D2C			     heads   ends
1  8592					     cseg	     ;
1  8593					     aseg
   8594	B82C  E8 4A46		     bslas:  call    docol
   8595	B82F  B705r			     dw	     source
   8596	B831  B4F9r 03D2r		     dw	     blk,at
   8597	B835  0A92r B849r		     dw	     zbran,bslas1
   8598	B839  B4E8r			     dw	     csll	     ; works with any c/l - not	just 2^n
   8599	B83B  B4FEr 03D2r		     dw	     inn,at
   8600	B83F  031Cr 0841r		     dw	     over,slash
   8601	B843  0798r 07C6r		     dw	     onep,star
   8602	B847  0684r			     dw	     min
   8603	B849  B4FEr 03D8r	     bslas1  dw	     inn,store
   8604	B84D  02FEr			     dw	     drop
   8605	B84F  0289r			     dw	     exit
   8606
   8607				     ;	     \\	 ( "ccc" -- )	     source >in	! drop ;immediate
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 152
kernel.asm



   8608
   8609					     hdr     1,'\\',1,1
1  8610					     cseg
1  8611					     aseg
1  8612	0D2C			     heads   segment public	     ;
1  8613	0D2C  42			     db	     ??037A	     ;
1  8614	0D2D  5C 5C			     db	     '\\'	     ;
1  8615	0D2F  0D26			     dw	     lastl	     ;
1  8616	0D31  B851r			     dw	     cfadr	     ;
1  8617	0D33			     heads   ends
1  8618					     cseg	     ;
1  8619					     aseg
   8620	B851  E8 4A21		     bslss:  call    docol
   8621	B854  B705r			     dw	     source
   8622	B856  0A8Dr B849r		     dw	     bran,bslas1
   8623
   8624				     ;	     (	( "ccc<delim>" )     [char] ) parse 2drop ;immediate
   8625
   8626					     hdr     1,'(',1,1
1  8627					     cseg
1  8628					     aseg
1  8629	0D33			     heads   segment public	     ;
1  8630	0D33  41			     db	     ??037C	     ;
1  8631	0D34  28			     db	     '('	     ;
1  8632	0D35  0D2C			     dw	     lastl	     ;
1  8633	0D37  B85Ar			     dw	     cfadr	     ;
1  8634	0D39			     heads   ends
1  8635					     cseg	     ;
1  8636					     aseg
   8637	B85A  E8 4A18		     paren:  call    docol
   8638	B85D  02A1r			     dw	     clit
   8639	B85F  29			     db	     ')'
   8640	B860  B70Br 0378r		     dw	     parse,tdrop
   8641	B864  0289r			     dw	     exit
   8642
   8643				     ;	     LINK,  ( a	-- )	     here over @ , swap	!
   8644
   8645					     hdr     1,'LINK,'
1  8646					     cseg
1  8647	0D39			     heads   segment public	     ;
1  8648	0D39  05			     db	     ??037E	     ;
1  8649	0D3A  4C 49 4E 4B 2C		     db	     'LINK,'	     ;
1  8650	0D3F  0D33			     dw	     lastl	     ;
1  8651	0D41  112Er			     dw	     cfadr	     ;
1  8652	0D43			     heads   ends
1  8653					     cseg	     ;
   8654	112E  E8 F144		     linkc:  call    docol
   8655	1131  1026r			     dw	     here
   8656	1133  031Cr 03D2r		     dw	     over,at
   8657	1137  106Dr			     dw	     comma
   8658	1139  0315r 03D8r		     dw	     swap,store
   8659	113D  0289r			     dw	     exit
   8660
   8661				     ;	     WORDLIST  ( -- wid	)    here dph @	$2001 over h! cell+ 0 over h!
   8662				     ;				     [ 2 cells ] literal dph +!	, voc-link link,
   8663				     ;				     0 ,
   8664
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 153
kernel.asm



   8665					     hdr     x,'WORDLIST',,1
1  8666					     cseg	     ;
1  8667					     aseg
   8668	B866  E8 4A0C		     wlist:  call    docol
   8669	B869  1026r			     dw	     here
   8670	B86B  B52Fr 03D2r		     dw	     dph,at
   8671	B86F  02A8r 2001		     dw	     lit,2001h
   8672	B873  031Cr B009r		     dw	     over,hstor
   8673	B877  079Er			     dw	     cellp
   8674	B879  0F79r			     dw	     zero	     ; nfa of top word in vocabulary
   8675	B87B  031Cr B009r		     dw	     over,hstor
   8676	B87F  02A1r			     dw	     clit
   8677	B881  04			     db	     cw*2
   8678	B882  B52Fr 044Cr		     dw	     dph,pstor
   8679	B886  106Dr			     dw	     comma
   8680	B888  B52Ar 112Er		     dw	     vocl,linkc	     ; link in wordlist
   8681	B88C  0F79r 106Dr		     dw	     zero,comma	     ; null name
   8682	B890  0289r			     dw	     exit
   8683
   8684				     ;	     VOCABULARY	 ( "name" )  sys? system wordlist dup value last @
   8685				     ;				     swap cell+	cell+ !	sys ! does> @ context !
   8686
   8687					     hdr     1,'VOCABULARY',,1
1  8688					     cseg
1  8689					     aseg
1  8690	0D43			     heads   segment public	     ;
1  8691	0D43  0A			     db	     ??0382	     ;
1  8692	0D44  56 4F 43 41 42 55	4C+	     db	     'VOCABULARY'	     ;
   8693	      41 52 59
1  8694	0D4E  0D39			     dw	     lastl	     ;
1  8695	0D50  B892r			     dw	     cfadr	     ;
1  8696	0D52			     heads   ends
1  8697					     cseg	     ;
1  8698					     aseg
   8699	B892  E8 49E0		     vocab:  call    docol
   8700	B895  100Dr			     dw	     sysq
   8701	B897  B547r			     dw	     system
   8702	B899  B866r			     dw	     wlist
   8703	B89B  0304r B446r		     dw	     dupp,value
   8704	B89F  B4F2r 03D2r		     dw	     last,at	     ; set name	field in wordlist struct
   8705	B8A3  0315r			     dw	     swap
   8706	B8A5  079Er 079Er		     dw	     cellp,cellp
   8707	B8A9  03D8r			     dw	     store
   8708	B8AB  0FCDr 03D8r		     dw	     sys,store
   8709	B8AF  B418r			     dw	     pscod
   8710	B8B1  E8 49C1		     dovoc:  call    docol
   8711	B8B4  03D2r			     dw	     at
   8712	B8B6  B22Ar 03D8r		     dw	     cont,store
   8713	B8BA  0289r			     dw	     exit
   8714
   8715				     ;	     DEFINITIONS  ( -- )     get-context set-current
   8716
   8717					     hdr     1,'DEFINITIONS',,1
1  8718					     cseg
1  8719					     aseg
1  8720	0D52			     heads   segment public	     ;
1  8721	0D52  0B			     db	     ??0384	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 154
kernel.asm



1  8722	0D53  44 45 46 49 4E 49	54+	     db	     'DEFINITIONS'	     ;
   8723	      49 4F 4E 53
1  8724	0D5E  0D43			     dw	     lastl	     ;
1  8725	0D60  B8BCr			     dw	     cfadr	     ;
1  8726	0D62			     heads   ends
1  8727					     cseg	     ;
1  8728					     aseg
   8729	B8BC  E8 49B6		     defin:  call    docol
   8730	B8BF  B233r			     dw	     getcon
   8731	B8C1  B241r			     dw	     setcur
   8732	B8C3  0289r			     dw	     exit
   8733
   8734				     ;	     wordlist structure
   8735
   8736	0D62			     heads   segment public
   8737
   8738	0D62  2001			     dw	     2001h	     ; dummy nfa for vocab chaining
   8739	0D64  147A		     forth0  dw	     topnfa	     ; nfa of top word in vocabulary
   8740
   8741	0D66			     heads   ends
   8742
   8743					     aseg
   8744
   8745	B8C5  0D64		     forth1  dw	     forth0-horig    ; top word	pointer
   8746	B8C7  0000		     forth2  dw	     0		     ; previous	vocabulary
   8747	B8C9  0D66			     dw	     forth3	     ; vocab nfa
   8748
   8749				     ;	     FORTH		     vocabulary	forth
   8750
   8751					     hdr     1,'FORTH',1,1
1  8752					     cseg
1  8753					     aseg
1  8754	0D66			     heads   segment public	     ;
1  8755	0D66  45			     db	     ??0386	     ;
1  8756	0D67  46 4F 52 54 48		     db	     'FORTH'	     ;
1  8757	0D6C  0D52			     dw	     lastl	     ;
1  8758	0D6E  B8CBr			     dw	     cfadr	     ;
1  8759	0D70			     heads   ends
1  8760					     cseg	     ;
1  8761					     aseg
   8762	B8CB  E8 FFE3		     forth:  call    dovoc
   8763	B8CE  B8C5r			     dw	     forth1	     ; address of wid
   8764
   8765	      =0D66		     forth3  =	     lastl
   8766
   8767				     ;	     UNUSED  ( -- u )	     sys? if (esm) else	s0 then	@ here
   8768				     ;				     255 + 2dup	u> -rot	- and
   8769
   8770					     hdr     1,'UNUSED'
1  8771					     cseg
1  8772	0D70			     heads   segment public	     ;
1  8773	0D70  06			     db	     ??0388	     ;
1  8774	0D71  55 4E 55 53 45 44		     db	     'UNUSED'		     ;
1  8775	0D77  0D66			     dw	     lastl	     ;
1  8776	0D79  113Fr			     dw	     cfadr	     ;
1  8777	0D7B			     heads   ends
1  8778					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 155
kernel.asm



   8779	113F  E8 F133		     unus:   call    docol
   8780	1142  100Dr			     dw	     sysq
   8781	1144  0A92r 1150r		     dw	     zbran,unus1
   8782	1148  02A8r 01D6r		     dw	     lit,esm
   8783	114C  0A8Dr 1152r		     dw	     bran,unus2
   8784	1150  0FE0r		     unus1   dw	     szero
   8785	1152  03D2r		     unus2   dw	     at
   8786	1154  1026r			     dw	     here
   8787	1156  02A1r			     dw	     clit	     ; allow margin
   8788	1158  FF			     db	     255
   8789	1159  076Dr			     dw	     plus
   8790	115B  037Er			     dw	     tdup
   8791	115D  067Ar			     dw	     ugrea
   8792	115F  032Dr			     dw	     drot
   8793	1161  0775r			     dw	     subb
   8794	1163  0723r			     dw	     andd
   8795	1165  0289r			     dw	     exit
   8796
   8797				     ;	     number ( c-addr --	n|d|r xt )
   8798				     ;				     count base	@ >r over c@ cond [char] %
   8799				     ;				     of	binary 1 else [char] $ of hex 1	else
   8800				     ;				     [char] # of decimal 1 else	drop 0 cont
   8801				     ;				     /string 2dup number? if 2nip dpl @	0< if
   8802				     ;				     drop ['] literal else ['] 2literal	then
   8803				     ;				     true else fnumber then r> base ! ?defined
   8804
   8805					     hdr     x,'NUMBER',,1
1  8806					     cseg	     ;
1  8807					     aseg
   8808	B8D0  E8 49A2		     numb:   call    docol
   8809	B8D3  04A5r			     dw	     count
   8810	B8D5  0FF9r 03D2r 02C9r		     dw	     base,at,tor
   8811	B8DB  031Cr 03DEr		     dw	     over,cat
   8812	B8DF  02A1r			     dw	     clit
   8813	B8E1  25			     db	     '%'
   8814	B8E2  0A86r B8EEr		     dw	     pof,numb1
   8815	B8E6  08DCr 0F7Fr		     dw	     bin,one
   8816	B8EA  0A8Dr B910r		     dw	     bran,numb4
   8817	B8EE  02A1r		     numb1   dw	     clit
   8818	B8F0  24			     db	     '$'
   8819	B8F1  0A86r B8FDr		     dw	     pof,numb2
   8820	B8F5  08D8r 0F7Fr		     dw	     hex,one
   8821	B8F9  0A8Dr B910r		     dw	     bran,numb4
   8822	B8FD  02A1r		     numb2   dw	     clit
   8823	B8FF  23			     db	     '#'
   8824	B900  0A86r B90Cr		     dw	     pof,numb3
   8825	B904  08D4r 0F7Fr		     dw	     decim,one
   8826	B908  0A8Dr B910r		     dw	     bran,numb4
   8827	B90C  02FEr 0F79r	     numb3   dw	     drop,zero
   8828	B910  0538r		     numb4   dw	     sstr
   8829	B912  037Er			     dw	     tdup
   8830	      =MAIN:B914	     pnumb   equ     $
   8831	B914  0975r			     dw	     numq	     ; NUMBER patch
   8832	B916  0A92r B93Ar		     dw	     zbran,numb7
   8833	B91A  03ADr			     dw	     tnip
   8834	B91C  1003r 03D2r 0654r		     dw	     dpl,at,zless
   8835	B922  0A92r B930r		     dw	     zbran,numb5
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 156
kernel.asm



   8836	B926  02FEr			     dw	     drop
   8837	B928  02A8r BE5Br		     dw	     lit,liter
   8838	B92C  0A8Dr B934r		     dw	     bran,numb6
   8839	B930  02A8r BE74r	     numb5   dw	     lit,tlite
   8840	B934  0F72r		     numb6   dw	     true
   8841	B936  0A8Dr B93Cr		     dw	     bran,numb8
   8842	      =MAIN:B93A	     pfnum   equ     $
   8843	B93A  C44Ar		     numb7   dw	     fnu	     ; FNUMBER patch
   8844	B93C  02D2r 0FF9r 03D8r	     numb8   dw	     fromr,base,store
   8845	B942  B6E3r			     dw	     qdef
   8846	B944  0289r			     dw	     exit
   8847
   8848				     ;	     INTERPRET	( -- )	     begin bl-word dup c@ while	find ?dup if
   8849				     ;				     state? = if compile, else execute then
   8850				     ;				     else number state?	and ?dup if execute
   8851				     ;				     then then ?stack repeat drop
   8852
   8853					     hdr     1,'INTERPRET',,1
1  8854					     cseg
1  8855					     aseg
1  8856	0D7B			     heads   segment public	     ;
1  8857	0D7B  09			     db	     ??038C	     ;
1  8858	0D7C  49 4E 54 45 52 50	52+	     db	     'INTERPRET'	     ;
   8859	      45 54
1  8860	0D85  0D70			     dw	     lastl	     ;
1  8861	0D87  B946r			     dw	     cfadr	     ;
1  8862	0D89			     heads   ends
1  8863					     cseg	     ;
1  8864					     aseg
   8865	B946  E8 492C		     inte:   call    docol
   8866	B949  B7D8r		     inte1   dw	     blword
   8867	B94B  0304r 03DEr		     dw	     dupp,cat
   8868	B94F  0A92r B983r		     dw	     zbran,inte6     ; while not end of	input stream
   8869	B953  B2D5r			     dw	     find
   8870	B955  030Br			     dw	     qdup
   8871	B957  0A92r B96Fr		     dw	     zbran,inte4     ; if found
   8872	B95B  B539r			     dw	     stateq
   8873	B95D  063Br			     dw	     equal
   8874	B95F  0A92r B969r		     dw	     zbran,inte2     ; if compiling and	not immediate
   8875	B963  BDABr			     dw	     comxt
   8876	B965  0A8Dr B96Br		     dw	     bran,inte3
   8877	B969  0299r		     inte2   dw	     exec
   8878	B96B  0A8Dr B97Dr	     inte3   dw	     bran,inte5
   8879	B96F  B8D0r		     inte4   dw	     numb
   8880	B971  B539r			     dw	     stateq
   8881	B973  0723r 030Br		     dw	     andd,qdup
   8882	B977  0A92r B97Dr		     dw	     zbran,inte5
   8883	B97B  0299r			     dw	     exec
   8884	B97D  B68Dr		     inte5   dw	     qstac
   8885	B97F  0A8Dr B949r		     dw	     bran,inte1
   8886	B983  02FEr		     inte6   dw	     drop
   8887	B985  0289r			     dw	     exit
   8888
   8889				     ;	     (eval)  ( c-addr u	blk -- )     blk @ >in @ 2>r source 2>r	blk !
   8890				     ;					     'source 2!	>in off	interpret
   8891				     ;					     2r> 'source 2! 2r>	>in ! blk !
   8892
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 157
kernel.asm



   8893					     hdr     x,'(EVAL)',,1	     ; does not	restore	block contents
1  8894					     cseg	     ;
1  8895					     aseg
   8896	B987  E8 48EB		     peval:  call    docol
   8897	B98A  B4F9r 03D2r		     dw	     blk,at
   8898	B98E  B4FEr 03D2r		     dw	     inn,at
   8899	B992  02E1r			     dw	     ttor
   8900	B994  B705r 02E1r		     dw	     source,ttor
   8901	B998  B4F9r 03D8r		     dw	     blk,store
   8902	B99C  B503r 03F7r		     dw	     tsourc,tstor
   8903	B9A0  B4FEr 045Br		     dw	     inn,off		     ; reset >IN
   8904	B9A4  B946r			     dw	     inte
   8905	B9A6  02EDr			     dw	     tfrom
   8906	B9A8  B503r 03F7r		     dw	     tsourc,tstor
   8907	B9AC  02EDr			     dw	     tfrom
   8908	B9AE  B4FEr 03D8r		     dw	     inn,store
   8909	B9B2  B4F9r 03D8r		     dw	     blk,store
   8910	B9B6  0289r			     dw	     exit
   8911
   8912				     ;	     ?BLOCK   (	-- )		     blk @ dup if block	then drop
   8913
   8914					     hdr     1,'?BLOCK',,1	     ; reload block
1  8915					     cseg
1  8916					     aseg
1  8917	0D89			     heads   segment public	     ;
1  8918	0D89  06			     db	     ??0390	     ;
1  8919	0D8A  3F 42 4C 4F 43 4B		     db	     '?BLOCK'		     ;
1  8920	0D90  0D7B			     dw	     lastl	     ;
1  8921	0D92  B9B8r			     dw	     cfadr	     ;
1  8922	0D94			     heads   ends
1  8923					     cseg	     ;
1  8924					     aseg
   8925	B9B8  E8 48BA		     qblock: call    docol
   8926	B9BB  B4F9r 03D2r		     dw	     blk,at
   8927	B9BF  0304r			     dw	     dupp
   8928	B9C1  0A92r B9C7r		     dw	     zbran,qblock1
   8929	B9C5  C036r			     dw	     block
   8930	B9C7  02FEr		     qblock1 dw	     drop
   8931	B9C9  0289r			     dw	     exit
   8932
   8933				     ;	     EVALUATE  ( c-addr	u -- )	     0 (eval) ?block
   8934
   8935					     hdr     1,'EVALUATE',,1
1  8936					     cseg
1  8937					     aseg
1  8938	0D94			     heads   segment public	     ;
1  8939	0D94  08			     db	     ??0392	     ;
1  8940	0D95  45 56 41 4C 55 41	54+	     db	     'EVALUATE'		     ;
   8941	      45
1  8942	0D9D  0D89			     dw	     lastl	     ;
1  8943	0D9F  B9CBr			     dw	     cfadr	     ;
1  8944	0DA1			     heads   ends
1  8945					     cseg	     ;
1  8946					     aseg
   8947	B9CB  E8 48A7		     eval:   call    docol
   8948	B9CE  0F79r B987r		     dw	     zero,peval
   8949	B9D2  B9B8r			     dw	     qblock
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 158
kernel.asm



   8950	B9D4  0289r			     dw	     exit
   8951
   8952				     ;	     (refill)  ( -- flag )   blk @ ?dup	if 1+ dup #screens u< and dup
   8953				     ;				     while dup blk ! block b/buf else (tib)
   8954				     ;				     dup (tibsiz) accept space then 'source 2!
   8955				     ;				     >in off true then
   8956
   8957					     hdr     x,'(REFILL)',,1	     ; doesn't correctly handle	source
1  8958					     cseg	     ;
1  8959					     aseg
   8960	B9D6  E8 489C		     prefil: call    docol		     ; from EVALUATE
   8961	B9D9  B4F9r 03D2r		     dw	     blk,at
   8962	B9DD  030Br			     dw	     qdup
   8963	B9DF  0A92r BA01r		     dw	     zbran,prefil1
   8964	B9E3  0798r 0304r		     dw	     onep,dupp
   8965	B9E7  BF61r 0670r		     dw	     nscr,uless
   8966	B9EB  0723r 0304r		     dw	     andd,dupp
   8967	B9EF  0A92r BA18r		     dw	     zbran,prefil3
   8968	B9F3  0304r B4F9r 03D8r		     dw	     dupp,blk,store
   8969	B9F9  C036r B4E3r		     dw	     block,bbuf
   8970	B9FD  0A8Dr BA0Er		     dw	     bran,prefil2
   8971	BA01  02A8r FE7D	     prefil1 dw	     lit,tib
   8972	BA05  0304r			     dw	     dupp
   8973	BA07  02A1r			     dw	     clit
   8974	BA09  50			     db	     tibsiz
   8975	BA0A  1110r			     dw	     accept
   8976	BA0C  0ECCr			     dw	     space
   8977	BA0E  B503r 03F7r	     prefil2 dw	     tsourc,tstor
   8978	BA12  B4FEr 045Br		     dw	     inn,off
   8979	BA16  0F72r			     dw	     true
   8980	BA18  0289r		     prefil3 dw	     exit
   8981
   8982				     ;	     REFILL  ( -- flag )
   8983
   8984					     hdr     1,'REFILL',,1
1  8985					     cseg
1  8986					     aseg
1  8987	0DA1			     heads   segment public	     ;
1  8988	0DA1  06			     db	     ??0396	     ;
1  8989	0DA2  52 45 46 49 4C 4C		     db	     'REFILL'		     ;
1  8990	0DA8  0D94			     dw	     lastl	     ;
1  8991	0DAA  BA1Ar			     dw	     cfadr	     ;
1  8992	0DAC			     heads   ends
1  8993					     cseg	     ;
1  8994					     aseg
   8995	BA1A  E8 487D		     refil:  call    aexec
   8996	BA1D  B9D6r			     dw	     prefil
   8997
   8998				     ;	     reset  ( -- )	     catcher off cseg sseg ! -caps bios-io
   8999				     ;				     console
   9000
   9001					     hdr     x,'RESET'
1  9002					     cseg	     ;
   9003	1167  E8 F10B		     reset:  call    docol
   9004	116A  0FF4r 045Br		     dw	     catchr,off	     ; reset error handler
   9005	116E  03C3r			     dw	     csegg	     ; set search segment
   9006	1170  03C8r 03D8r		     dw	     sseg,store
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 159
kernel.asm



   9007	1174  054Fr			     dw	     dcaps	     ; reset COMPARE/SEARCH caps
   9008	1176  0E3Er			     dw	     biosio	     ; default i/o mode
   9009	1178  0F20r			     dw	     consol	     ; set EMIT	vector
   9010	117A  0289r			     dw	     exit
   9011
   9012				     ;	     /interpret	 ( -- )	     blk off >in off postpone [
   9013
   9014					     hdr     x,'/INTERPRET',,1
1  9015					     cseg	     ;
1  9016					     aseg
   9017	BA1F  2B C0		     sinte:  sub     ax,ax
   9018	BA21  A3 B4FCr			     mov     blk1,ax
   9019	BA24  A3 B501r			     mov     inn1,ax
   9020	BA27  E9 FCCF			     jmp     lbrac
   9021
   9022				     ;	     forth-reset  ( -- )     (em) set-limit empty warning on checking
   9023				     ;				     on	(fdbs) (fdsiz*nfd) erase empty-buffers
   9024				     ;				     /interpret	'source	off bl-word drop !csp
   9025
   9026					     hdr     x,'FORTH-RESET',,1
1  9027					     cseg	     ;
1  9028					     aseg
   9029	BA2A  E8 4848		     freset: call    docol
   9030	BA2D  02A8r FFF0		     dw	     lit,em
   9031	BA31  BB9Fr			     dw	     setlim
   9032	BA33  BD49r			     dw	     empty	     ; reset vocabulary	pointers
   9033	BA35  B516r 0453r		     dw	     warnn,on	     ; enable warnings
   9034	BA39  B520r 0453r		     dw	     check,on	     ; enable checking
   9035	BA3D  02A8r F76D		     dw	     lit,fdbs	     ; clear files
   9036	BA41  02A8r 0210		     dw	     lit,fdsiz*nfd   ;
   9037	BA45  0466r			     dw	     erase	     ;
   9038	BA47  BF6Cr			     dw	     mtbuf	     ; mark screen buffer as empty
   9039	BA49  BA1Fr			     dw	     sinte	     ; reset interpreter
   9040	BA4B  B503r 045Br		     dw	     tsourc,off	     ; clear parsed word buffer
   9041	BA4F  B7D8r 02FEr		     dw	     blword,drop     ;
   9042	BA53  B648r			     dw	     scsp	     ; set CF stack base to safe value
   9043	BA55  0289r			     dw	     exit
   9044
   9045				     ;	     (quit)  ( -- )	     r0	@ rp! reset normal /interpret begin
   9046				     ;				     cr	(refill) drop interpret	state? 0= if
   9047				     ;				     ."	 ok" then again
   9048
   9049					     hdr     x,'(QUIT)',,1
1  9050					     cseg	     ;
1  9051					     aseg
   9052	BA57  E8 481B		     pqui:   call    docol
   9053	BA5A  0FE5r 03D2r		     dw	     rzero,at
   9054	BA5E  02C5r			     dw	     rpsto
   9055	BA60  1167r			     dw	     reset
   9056	BA62  0D1Br			     dw	     vnorm
   9057	BA64  BA1Fr			     dw	     sinte
   9058	BA66  0F13r		     pqui1   dw	     crr
   9059	BA68  B9D6r 02FEr		     dw	     prefil,drop
   9060	BA6C  B946r			     dw	     inte
   9061	BA6E  B539r			     dw	     stateq
   9062	BA70  0628r			     dw	     zequ
   9063	BA72  0A92r BA7Cr		     dw	     zbran,pqui2
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 160
kernel.asm



   9064	BA76  144Dr			     dw	     pdotq
   9065					     dcs     ' ok'
1  9066	BA78  03			     db	     ??03A0	     ;
1  9067	BA79  20 6F 6B		     ??03A1  db	     ' ok'
   9068	BA7C  0A8Dr BA66r	     pqui2   dw	     bran,pqui1
   9069
   9070				     ;	     RETURN  ( x -- )	     exit to DOS with return code x
   9071
   9072					     hdr     1,'RETURN'
1  9073					     cseg
1  9074	0DAC			     heads   segment public	     ;
1  9075	0DAC  06			     db	     ??03A2	     ;
1  9076	0DAD  52 45 54 55 52 4E		     db	     'RETURN'		     ;
1  9077	0DB3  0DA1			     dw	     lastl	     ;
1  9078	0DB5  117Cr			     dw	     cfadr	     ;
1  9079	0DB7			     heads   ends
1  9080					     cseg	     ;
   9081	117C  A0 01BFr		     retrn:  mov     al,iattr		     ; restore video attribute
   9082	117F  A2 0103r			     mov     cattr,al
   9083	1182  B0 0D			     mov     al,cr		     ; force update - this kludge
   9084	1184  E8 FC2A			     call    bcono		     ; works if	cursor is located
   9085	1187  B0 0A			     mov     al,lf		     ; on bottom screen	row
   9086	1189  E8 FC25			     call    bcono
   9087	118C  E8 F075			     call    gmode		     ; restore video mode
   9088	118F  A1 01BDr			     mov     ax,word ptr imode
   9089	1192  3B 06 0105r		     cmp     ax,word ptr cmode
   9090	1196  74 04			     jz	     retrn1
   9091	1198  2A E4			     sub     ah,ah
   9092	119A  CD 10			     int     10h
   9093	119C  8A 16 01DEr	     retrn1: mov     dl,defdrv		     ; restore drive
   9094	11A0  B4 0E			     mov     ah,0eh
   9095	11A2  CD 21			     int     21h
   9096	11A4  58			     pop     ax
   9097	11A5  B4 4C			     mov     ah,4Ch
   9098	11A7  CD 21			     int     21h
   9099
   9100				     ;	     BYE  ( -- )	     close-all console normal 0	return
   9101
   9102					     hdr     1,'BYE',,1
1  9103					     cseg
1  9104					     aseg
1  9105	0DB7			     heads   segment public	     ;
1  9106	0DB7  03			     db	     ??03A4	     ;
1  9107	0DB8  42 59 45			     db	     'BYE'	     ;
1  9108	0DBB  0DAC			     dw	     lastl	     ;
1  9109	0DBD  BA80r			     dw	     cfadr	     ;
1  9110	0DBF			     heads   ends
1  9111					     cseg	     ;
1  9112					     aseg
   9113	BA80  E8 47F2		     bye:    call    docol
   9114	BA83  C12Br			     dw	     closa
   9115	BA85  0F20r			     dw	     consol
   9116	BA87  0D1Br			     dw	     vnorm
   9117	BA89  0F79r 117Cr		     dw	     zero,retrn
   9118
   9119				     ;	     boot?  ( -- bootword )  (iboot) @
   9120
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 161
kernel.asm



   9121					     hdr     x,'BOOT?'
1  9122					     cseg	     ;
   9123	11A9  A1 01D8r		     bootq:  mov     ax,iboot
   9124	11AC  E9 F00A			     jmp     apush
   9125
   9126				     ;	     QUIT    ( i*x -- i*x )  0 ?return
   9127
   9128					     hdr     1,'QUIT'
1  9129					     cseg
1  9130	0DBF			     heads   segment public	     ;
1  9131	0DBF  04			     db	     ??03A8	     ;
1  9132	0DC0  51 55 49 54		     db	     'QUIT'	     ;
1  9133	0DC4  0DB7			     dw	     lastl	     ;
1  9134	0DC6  11AFr			     dw	     cfadr	     ;
1  9135	0DC8			     heads   ends
1  9136					     cseg	     ;
   9137	11AF  2B C0		     quit:   sub     ax,ax
   9138	11B1  50			     push    ax
   9139				     ;	     jmp     qret
   9140
   9141				     ;	     ?return ( code -- )     boot? if return then drop (quit)
   9142
   9143					     hdr     x,'?RETURN'
1  9144					     cseg	     ;
   9145	11B2  E8 F0C0		     qret:   call    docol
   9146	11B5  11A9r			     dw	     bootq
   9147	11B7  0A92r 11BDr		     dw	     zbran,qret1
   9148	11BB  117Cr			     dw	     retrn
   9149	11BD  02FEr		     qret1   dw	     drop
   9150	11BF  BA57r			     dw	     pqui
   9151
   9152				     ;	     (abort)  (	-- )	     s0	@ sp! fs0 @ fsp	! 1 ?return
   9153
   9154					     hdr     x,'(ABORT)'
1  9155					     cseg	     ;
   9156	11C1  E8 F0B1		     pabor:  call    docol
   9157	11C4  0FE0r 03D2r		     dw	     szero,at
   9158	11C8  02BBr			     dw	     spsto
   9159	11CA  0FEFr 03D2r		     dw	     fszero,at
   9160	11CE  0FC1r 03D8r		     dw	     fsp,store
   9161	11D2  0F7Fr 11B2r		     dw	     one,qret
   9162
   9163				     ;	     .error  ( -- )	     cr	blk @ ?dup if screen? and if loadfile type
   9164				     ;				     >in @ 2- 0max blk @ 2dup scr 2! ."	 Scr "
   9165				     ;				     u.	c/l / ." Line "	. cr then then ." Error: "
   9166				     ;				     [char] " dup emit pwa count 31 min	type emit
   9167
   9168					     hdr     x,'.ERROR',,1
1  9169					     cseg	     ;
1  9170					     aseg
   9171	BA8D  E8 47E5		     doterr: call    docol
   9172	BA90  0F13r			     dw	     crr
   9173	BA92  B4F9r 03D2r		     dw	     blk,at
   9174	BA96  030Br			     dw	     qdup
   9175	BA98  0A92r BAD7r		     dw	     zbran,doterr1
   9176	BA9C  BF35r			     dw	     scrnq
   9177	BA9E  0723r			     dw	     andd	     ; screen file open	and loading from block?
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 162
kernel.asm



   9178	BAA0  0A92r BAD7r		     dw	     zbran,doterr1
   9179	BAA4  BF40r 0EE4r		     dw	     loadf,typee
   9180	BAA8  B4FEr 03D2r		     dw	     inn,at
   9181	BAAC  07ACr			     dw	     twom	     ; adjust pointer
   9182	BAAE  0690r			     dw	     zmax
   9183	BAB0  B4F9r 03D2r		     dw	     blk,at
   9184	BAB4  037Er			     dw	     tdup	     ; set error block,	offset
   9185	BAB6  B50Fr 03F7r		     dw	     scr,tstor
   9186	BABA  144Dr			     dw	     pdotq
   9187					     dcs     ' Screen '
1  9188	BABC  08			     db	     ??03B0	     ;
1  9189	BABD  20 53 63 72 65 65	6E+  ??03B1  db	     ' Screen '
   9190	      20
   9191	BAC5  0B0Cr			     dw	     udot
   9192	BAC7  B4E8r			     dw	     csll
   9193	BAC9  0841r			     dw	     slash
   9194	BACB  144Dr			     dw	     pdotq
   9195					     dcs     'Line '
1  9196	BACD  05			     db	     ??03B2	     ;
1  9197	BACE  4C 69 6E 65 20	     ??03B3  db	     'Line '
   9198	BAD3  0B37r			     dw	     dot
   9199	BAD5  0F13r			     dw	     crr
   9200	BAD7  144Dr		     doterr1 dw	     pdotq
   9201					     dcs     'Error: '
1  9202	BAD9  07			     db	     ??03B4	     ;
1  9203	BADA  45 72 72 6F 72 3A	20   ??03B5  db	     'Error: '
   9204	BAE1  02A1r			     dw	     clit
   9205	BAE3  22			     db	     '"'
   9206	BAE4  0304r 0ED1r		     dw	     dupp,emit
   9207	BAE8  B7B0r 04A5r		     dw	     pwa,count
   9208	BAEC  02A1r			     dw	     clit
   9209	BAEE  1F			     db	     31
   9210	BAEF  0684r			     dw	     min
   9211	BAF1  0EE4r			     dw	     typee
   9212	BAF3  0ED1r			     dw	     emit
   9213	BAF5  0289r			     dw	     exit
   9214
   9215				     ;	     error  ( n	-- )	     -1	of (abort) then	-2 of boot cell+ @ 0=
   9216				     ;				     if	.error then space errmsg 2@ type
   9217				     ;				     (abort) then ."  exception	= " . (abort)
   9218
   9219					     hdr     x,'ERROR'
1  9220					     cseg	     ;
   9221	11D6  E8 F09C		     error:  call    docol
   9222	11D9  0F72r			     dw	     true	     ; -1
   9223	11DB  0A86r 11E1r		     dw	     pof,error1
   9224	11DF  11C1r			     dw	     pabor
   9225	11E1  02A8r FFFE	     error1  dw	     lit,-2
   9226	11E5  0A86r 1201r		     dw	     pof,error3
   9227	11E9  0FC6r 079Er 03D2r		     dw	     boot,cellp,at
   9228	11EF  0628r			     dw	     zequ
   9229	11F1  0A92r 11F7r		     dw	     zbran,error2
   9230	11F5  BA8Dr			     dw	     doterr	     ; skipped by applications
   9231	11F7  0ECCr		     error2  dw	     space
   9232	11F9  0FD2r 03EEr		     dw	     errmsg,tat
   9233	11FD  0EE4r			     dw	     typee
   9234	11FF  11C1r			     dw	     pabor
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 163
kernel.asm



   9235	1201  144Dr		     error3  dw	     pdotq
   9236					     dcs     ' exception = '
1  9237	1203  0D			     db	     ??03B8	     ;
1  9238	1204  20 65 78 63 65 70	74+  ??03B9  db	     ' exception = '
   9239	      69 6F 6E 20 3D 20
   9240	1211  0B37r			     dw	     dot
   9241	1213  11C1r			     dw	     pabor
   9242
   9243				     ;	     ABORT  ( -- )	     -1	throw
   9244
   9245					     hdr     1,'ABORT'
1  9246					     cseg
1  9247	0DC8			     heads   segment public	     ;
1  9248	0DC8  05			     db	     ??03BA	     ;
1  9249	0DC9  41 42 4F 52 54		     db	     'ABORT'	     ;
1  9250	0DCE  0DBF			     dw	     lastl	     ;
1  9251	0DD0  1215r			     dw	     cfadr	     ;
1  9252	0DD2			     heads   ends
1  9253					     cseg	     ;
   9254	1215  B8 FFFF		     abort:  mov     ax,-1
   9255	1218  50			     push    ax
   9256				     ;	     jmp     throw
   9257
   9258				     ;	     THROW  ( n	-- )	     ?dup if catcher @ ?dup 0= if error	then rp!
   9259				     ;				     r>	catcher	! 2r> fsp ! swap >r sp!	drop r>
   9260				     ;				     then
   9261
   9262					     hdr     1,'THROW'
1  9263					     cseg
1  9264	0DD2			     heads   segment public	     ;
1  9265	0DD2  05			     db	     ??03BC	     ;
1  9266	0DD3  54 48 52 4F 57		     db	     'THROW'	     ;
1  9267	0DD8  0DC8			     dw	     lastl	     ;
1  9268	0DDA  1219r			     dw	     cfadr	     ;
1  9269	0DDC			     heads   ends
1  9270					     cseg	     ;
   9271	1219  E8 F059		     throw:  call    docol
   9272	121C  030Br			     dw	     qdup
   9273	121E  0A92r 1248r		     dw	     zbran,throw2
   9274	1222  0FF4r 03D2r		     dw	     catchr,at
   9275	1226  030Br 0628r		     dw	     qdup,zequ
   9276	122A  0A92r 1230r		     dw	     zbran,throw1
   9277	122E  11D6r			     dw	     error
   9278	1230  02C5r		     throw1  dw	     rpsto
   9279	1232  02D2r 0FF4r 03D8r		     dw	     fromr,catchr,store
   9280	1238  02EDr 0FC1r 03D8r		     dw	     tfrom,fsp,store
   9281	123E  0315r 02C9r		     dw	     swap,tor
   9282	1242  02BBr			     dw	     spsto
   9283	1244  02FEr			     dw	     drop
   9284	1246  02D2r			     dw	     fromr
   9285	1248  0289r		     throw2  dw	     exit
   9286
   9287				     ;	     CATCH  ( xt -- n |	0 )  sp@ fsp @ 2>r catcher @ >r	rp@ catcher
   9288				     ;				     ! execute 0 r> catcher ! 2r> 2drop
   9289
   9290					     hdr     1,'CATCH'
1  9291					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 164
kernel.asm



1  9292	0DDC			     heads   segment public	     ;
1  9293	0DDC  05			     db	     ??03BE	     ;
1  9294	0DDD  43 41 54 43 48		     db	     'CATCH'	     ;
1  9295	0DE2  0DD2			     dw	     lastl	     ;
1  9296	0DE4  124Ar			     dw	     cfadr	     ;
1  9297	0DE6			     heads   ends
1  9298					     cseg	     ;
   9299	124A  E8 F028		     catch:  call    docol
   9300	124D  02B6r			     dw	     spat
   9301	124F  0FC1r 03D2r		     dw	     fsp,at
   9302	1253  02E1r			     dw	     ttor
   9303	1255  0FF4r 03D2r 02C9r		     dw	     catchr,at,tor
   9304	125B  02C1r 0FF4r 03D8r		     dw	     rpat,catchr,store
   9305	1261  0299r			     dw	     exec
   9306	1263  0F79r			     dw	     zero
   9307	1265  02D2r 0FF4r 03D8r		     dw	     fromr,catchr,store
   9308	126B  02EDr			     dw	     tfrom
   9309	126D  0378r		     catch1  dw	     tdrop
   9310	126F  0289r			     dw	     exit
   9311
   9312				     ;	     (abort")  ( n -- )	     r>	count 2dup + >r	?abort
   9313
   9314					     hdr     x,'(ABORT")'
1  9315					     cseg	     ;
   9316	1271  E8 EFF7		     pabq:   call    strr
   9317				     ;	     jmp     qabor
   9318
   9319				     ;	     ?ABORT  ( n c-addr	u -- )	rot if errmsg 2! -2 throw then 2drop
   9320
   9321					     hdr     1,'?ABORT'
1  9322					     cseg
1  9323	0DE6			     heads   segment public	     ;
1  9324	0DE6  06			     db	     ??03C2	     ;
1  9325	0DE7  3F 41 42 4F 52 54		     db	     '?ABORT'		     ;
1  9326	0DED  0DDC			     dw	     lastl	     ;
1  9327	0DEF  1274r			     dw	     cfadr	     ;
1  9328	0DF1			     heads   ends
1  9329					     cseg	     ;
   9330	1274  E8 EFFE		     qabor:  call    docol
   9331	1277  0324r			     dw	     rot
   9332	1279  0A92r 126Dr		     dw	     zbran,catch1
   9333	127D  0FD2r 03F7r		     dw	     errmsg,tstor    ; only change msg on error
   9334	1281  02A8r FFFE		     dw	     lit,-2
   9335	1285  1219r			     dw	     throw
   9336
   9337				     ;	     ABORT"		     state? if postpone	(abort") ," end
   9338				     ;				     postpone s" ?abort	;immediate
   9339
   9340					     hdr     1,'ABORT"',1,1
1  9341					     cseg
1  9342					     aseg
1  9343	0DF1			     heads   segment public	     ;
1  9344	0DF1  46			     db	     ??03C4	     ;
1  9345	0DF2  41 42 4F 52 54 22		     db	     'ABORT"'		     ;
1  9346	0DF8  0DE6			     dw	     lastl	     ;
1  9347	0DFA  BAF7r			     dw	     cfadr	     ;
1  9348	0DFC			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 165
kernel.asm



1  9349					     cseg	     ;
1  9350					     aseg
   9351	BAF7  E8 477B		     aborq:  call    docol
   9352	BAFA  B539r			     dw	     stateq
   9353	BAFC  0A92r BB08r		     dw	     zbran,aborq1
   9354	BB00  BDDEr 1271r		     dw	     comp,pabq
   9355	BB04  BE1Ar			     dw	     comq
   9356	BB06  0289r			     dw	     exit
   9357	BB08  BE2Er		     aborq1  dw	     squot
   9358	BB0A  1274r			     dw	     qabor
   9359	BB0C  0289r			     dw	     exit
   9360
   9361				     ;	     CMDTAIL  (	-- c-addr u )  (dosbuf)	count 2dup >blanks -blanks
   9362
   9363					     hdr     1,'CMDTAIL'
1  9364					     cseg
1  9365	0DFC			     heads   segment public	     ;
1  9366	0DFC  07			     db	     ??03C6	     ;
1  9367	0DFD  43 4D 44 54 41 49	4C	     db	     'CMDTAIL'		     ;
1  9368	0E04  0DF1			     dw	     lastl	     ;
1  9369	0E06  1287r			     dw	     cfadr	     ;
1  9370	0E08			     heads   ends
1  9371					     cseg	     ;
   9372	1287  E8 EFEB		     cmdtail:call    docol
   9373	128A  02A1r			     dw	     clit
   9374	128C  80			     db	     dosbuf
   9375	128D  04A5r			     dw	     count
   9376	128F  037Er 0520r		     dw	     tdup,tblan
   9377	1293  0515r			     dw	     dblan
   9378	1295  0289r			     dw	     exit
   9379
   9380				     ; Cold start from DOS
   9381
   9382					     cseg
   9383
   9384	1297  77 72 6F 6E 67 20	44+  nodos   db	     'wrong DOS	version',cr,lf,'$'
   9385	      4F 53 20 76 65 72	73+
   9386	      69 6F 6E 0D 0A 24
   9387	12AB  6E 6F 74 20 65 6E	6F+  noram   db	     'not enough RAM',cr,lf,'$'
   9388	      75 67 68 20 52 41	4D+
   9389	      0D 0A 24
   9390
   9391	12BC  FC		     cldd:   cld
   9392	12BD  8C C8			     mov     ax,cs
   9393	12BF  8E D8			     mov     ds,ax
   9394	12C1  A3 03C6r			     mov     cseg1,ax
   9395	12C4  A3 03D0r			     mov     hseg1,ax		     ; adjusted	later
   9396	12C7  BC 01B0r			     mov     sp,offset tmpstk
   9397
   9398	12CA  B8 3000			     mov     ax,3000h		     ; check dos version
   9399	12CD  CD 21			     int     21h
   9400	12CF  A2 01DAr			     mov     byte ptr dosv,al
   9401	12D2  88 26 01DCr		     mov     byte ptr dosv+cw,ah
   9402	12D6  3C 02			     cmp     al,2
   9403	12D8  BA 1297r			     mov     dx,offset nodos
   9404	12DB  B4 00			     mov     ah,0
   9405	12DD  72 2A			     jc	     cldd2
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 166
kernel.asm



   9406
   9407	12DF  A1 0FC9r			     mov     ax,boot1		     ; get BOOT	word
   9408	12E2  A3 01D8r			     mov     iboot,ax		     ; save it
   9409	12E5  85 06 0FCBr		     test    ax,boot2
   9410	12E9  9C			     pushf
   9411
   9412	12EA  8B 1E 01E6r		     mov     bx,ulimit		     ; turnkey limit
   9413	12EE  75 0B			     jnz     cldd1
   9414	12F0  BB 0FFF			     mov     bx,em/16		     ; default limit
   9415	12F3  01 1E 03D0r		     add     hseg1,bx		     ; set heads segment
   9416	12F7  81 C3 0800		     add     bx,hm/16		     ; add heads space
   9417	12FB  0E		     cldd1:  push    cs
   9418	12FC  07			     pop     es
   9419	12FD  B4 4A			     mov     ah,4ah		     ; adjust memory
   9420	12FF  CD 21			     int     21h
   9421	1301  BA 12ABr			     mov     dx,offset noram
   9422	1304  B8 4C01			     mov     ax,4C01h		     ; error-code = 1
   9423	1307  73 08			     jnc     cldd3
   9424
   9425	1309  50		     cldd2:  push    ax
   9426	130A  B4 09			     mov     ah,9		     ; show failure
   9427	130C  CD 21			     int     21h
   9428	130E  58			     pop     ax
   9429	130F  CD 21			     int     21h		     ; terminate
   9430
   9431	1311  E8 EEF0		     cldd3:  call    gmode
   9432	1314  24 7F			     and     al,7fh		     ; ignore no-blank bit
   9433	1316  A3 01BDr			     mov     word ptr imode,ax	     ; save video mode
   9434	1319  8A FC			     mov     bh,ah
   9435	131B  B4 08			     mov     ah,8
   9436	131D  CD 10			     int     10h
   9437	131F  88 26 01BFr		     mov     iattr,ah		     ; save video attribute
   9438
   9439	1323  E8 0174			     call    gdrv		     ; save current drive
   9440	1326  A2 01DEr			     mov     defdrv,al
   9441
   9442	1329  B8 0040			     mov     ax,40h		     ; set keyboard type
   9443	132C  8E C0			     mov     es,ax
   9444	132E  BB 0096			     mov     bx,96h
   9445	1331  26: F6 07	10		     test    byte ptr es:[bx],10h
   9446	1335  B8 0100			     mov     ax,0100h		     ; old
   9447	1338  74 03			     jz	     cldd4
   9448	133A  B8 1110			     mov     ax,1110h		     ; extended
   9449	133D  A3 01E1r		     cldd4:  mov     word ptr kbfn,ax
   9450
   9451	1340  9D			     popf
   9452	1341  74 0C			     jz	     cldd5		     ; need forth system
   9453
   9454	1343  C7 06 141Dr 01BAr		     mov     word ptr pfres,offset noop	; patch	out forth init
   9455	1349  8B 3E 01E8r		     mov     di,ulimit+cw	     ; LIMIT for applications
   9456	134D  EB 30			     jmp     short cldd8
   9457
   9458	134F  C6 06 01E0r FF	     cldd5:  mov     byte ptr cmdf,0ffh	     ; enable command line flag
   9459
   9460	1354  1E			     push    ds			     ; move heads into place
   9461	1355  8B 3E 01D4r		     mov     di,idph
   9462	1359  2B C9		     cldd6:  sub     cx,cx		     ; later patched to	MOV CX,DI
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 167
kernel.asm



   9463	135B  4F			     dec     di
   9464	135C  8B F7			     mov     si,di
   9465	135E  8E 06 03D0r		     mov     es,hseg1
   9466	1362  8C D8			     mov     ax,ds
   9467	1364  03 06 01EAr		     add     ax,hstart
   9468	1368  8E D8			     mov     ds,ax
   9469	136A  FD			     std
   9470	136B  F3> A4			     rep     movsb
   9471	136D  FC			     cld
   9472	136E  1F			     pop     ds
   9473
   9474	136F  A1 01CCr			     mov     ax,idp		     ; move system into	place
   9475	1372  BF B000r			     mov     di,offset orig+sm
   9476	1375  8B 0E 01CEr		     mov     cx,idps
   9477	1379  2B C9		     cldd7:  sub     cx,cx		     ; later patched to	SUB CX,DI
   9478	137B  E8 EEDD			     call    bmovu
   9479	137E  47			     inc     di
   9480
   9481	137F  89 3E 0F92r	     cldd8:  mov     limit1,di		     ; patch LIMIT
   9482
   9483	1383  E9			     db	     0E9h		     ; 'jmp'
   9484	1384  1049		     cldd9   dw	     movpat-$-2		     ; later patched to	'cold'
   9485
   9486				     ;	     COLD  ( --	)
   9487
   9488					     hdr     1,'COLD'		     ; FIG
1  9489					     cseg
1  9490	0E08			     heads   segment public	     ;
1  9491	0E08  04			     db	     ??03C8	     ;
1  9492	0E09  43 4F 4C 44		     db	     'COLD'	     ;
1  9493	0E0D  0DFC			     dw	     lastl	     ;
1  9494	0E0F  1386r			     dw	     cfadr	     ;
1  9495	0E11			     heads   ends
1  9496					     cseg	     ;
   9497	1386  FC		     cold:   cld
   9498	1387  8C C8			     mov     ax,cs
   9499	1389  8E D8			     mov     ds,ax
   9500	138B  FA			     cli
   9501	138C  8E D0			     mov     ss,ax
   9502	138E  BC 01B0r			     mov     sp,offset tmpstk
   9503	1391  FB			     sti
   9504
   9505	1392  C7 06 01D6r F76Dr		     mov     word ptr esm,offset orig+fdbs ; patch end of system memory
   9506
   9507	1398  A1 0F92r			     mov     ax,limit1		     ; get LIMIT
   9508	139B  2B 06 0FB4r		     sub     ax,nus
   9509	139F  8B E8			     mov     bp,ax		     ; init return stack
   9510	13A1  A3 01CAr			     mov     ir0,ax		     ; patch R0
   9511	13A4  A3 0FBFr			     mov     upp,ax		     ; patch UP
   9512	13A7  2B 06 0FB2r		     sub     ax,nrts
   9513	13AB  A3 0FC4r			     mov     fspp,ax		     ; init fp stack
   9514	13AE  A3 01D2r			     mov     ifs0,ax		     ; patch FS0
   9515	13B1  2B 06 0FACr		     sub     ax,nfps		     ; fp stack	size
   9516	13B5  8B E0			     mov     sp,ax		     ; init data stack
   9517	13B7  A3 01C8r			     mov     is0,ax		     ; patch S0
   9518	13BA  8B FD			     mov     di,bp		     ; init boot up variables
   9519	13BC  B8 01C2r			     mov     ax,offset initu
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 168
kernel.asm



   9520	13BF  B9 0014			     mov     cx,initu2-initu
   9521	13C2  E8 EE7F			     call    movd
   9522
   9523	13C5  C7 06 0D61r 0000		     mov     word ptr pause1,0	     ; patch PAUSE
   9524
   9525	13CB  B8 0500			     mov     ax,0500h		     ; set video page =	0
   9526	13CE  E8 EE2C		     cold1:  call    video
   9527	13D1  E8 EE30			     call    gmode		     ; get video mode
   9528	13D4  3C 07			     cmp     al,7		     ; 80 col mono
   9529	13D6  74 0D			     jz	     cold2
   9530	13D8  3C 03			     cmp     al,3		     ; 80 col color
   9531	13DA  74 09			     jz	     cold2
   9532	13DC  3C 02			     cmp     al,2		     ; 80 col b/w
   9533	13DE  74 05			     jz	     cold2
   9534	13E0  B8 0003			     mov     ax,3		     ; set video mode =	80 col color
   9535	13E3  EB E9			     jmp     cold1		     ; (screen will blank)
   9536	13E5  FE CF		     cold2:  dec     bh			     ; cols
   9537	13E7  88 3E 0109r		     mov     wmax,bh
   9538	13EB  2A FF			     sub     bh,bh
   9539	13ED  2A D2			     sub     dl,dl		     ; assume old CGA card
   9540	13EF  B8 1130			     mov     ax,1130h
   9541	13F2  E8 EE08			     call    video
   9542	13F5  0A D2			     or	     dl,dl		     ; rows if EGA+
   9543	13F7  75 02			     jnz     cold3
   9544	13F9  B2 18			     mov     dl,24
   9545	13FB  88 16 010Ar	     cold3:  mov     wmax+1,dl
   9546	13FF  C7 06 0107r 0000		     mov     word ptr wmin,0
   9547
   9548	1405  A0 01BFr			     mov     al,iattr		     ; set default attribute
   9549	1408  24 7F			     and     al,7fh
   9550	140A  A2 0103r			     mov     cattr,al
   9551
   9552	140D  E8 EE65			     call    docol
   9553	1410  02A1r			     dw	     clit
   9554	1412  80			     db	     dosbuf		     ; reset DOS DTA
   9555	1413  149Fr			     dw	     setdma
   9556	1415  0C5Br			     dw	     smss		     ; calibrate MS
   9557	1417  1014r			     dw	     app		     ; default is APPLICATION
   9558	1419  08D4r			     dw	     decim		     ; default base
   9559	141B  1167r			     dw	     reset		     ; general reset
   9560	      =MAIN:141D	     pfres   equ     $
   9561	141D  BA2Ar			     dw	     freset		     ; forth reset
   9562	      =MAIN:141F	     pinit   equ     $
   9563	141F  23C2r			     dw	     init		     ; run INIT	eg. for	float
   9564	1421  11A9r			     dw	     bootq
   9565	1423  0304r 0FC6r 03D8r		     dw	     dupp,boot,store	     ; restore BOOT
   9566	1429  030Br			     dw	     qdup
   9567	142B  0A92r BB0Er		     dw	     zbran,cold6
   9568	142F  0299r			     dw	     exec		     ; run application
   9569	1431  0F79r 117Cr		     dw	     zero,retrn		     ; exit to DOS
   9570
   9571					     aseg			     ; run forth interpreter
   9572
   9573				     ;				     normal cmdtail (cmdf) c@ and tuck (tib)
   9574				     ;				     0 +string 'source 2! 0 (cmdf) c! if
   9575				     ;				     bl-word @ '-' - if	>in off	getfilename
   9576				     ;				     (open) then interpret else	s" FORTH"
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 169
kernel.asm



   9577				     ;				     r/w open drop then	cr page
   9578
   9579	BB0E  0D1Br		     cold6   dw	     vnorm
   9580	BB10  1287r			     dw	     cmdtail		     ; process command-line
   9581	BB12  02A8r 01E0r		     dw	     lit,cmdf
   9582	BB16  03DEr 0723r		     dw	     cat,andd
   9583	BB1A  036Ar			     dw	     tuck
   9584	BB1C  02A8r FE7D		     dw	     lit,tib		     ; copy to tib
   9585	BB20  0F79r 05E1r		     dw	     zero,pstr
   9586	BB24  B503r 03F7r		     dw	     tsourc,tstor
   9587	BB28  0F79r			     dw	     zero
   9588	BB2A  02A8r 01E0r		     dw	     lit,cmdf		     ; disable
   9589	BB2E  03E7r			     dw	     cstor
   9590	BB30  0A92r BB50r		     dw	     zbran,cold8
   9591	BB34  B7D8r			     dw	     blword		     ; parse first word
   9592	BB36  03D2r			     dw	     at
   9593	BB38  02A8r			     dw	     lit
   9594	BB3A  01 2D			     db	     1,'-'		     ; skips file open
   9595	BB3C  0775r			     dw	     subb
   9596	BB3E  0A92r BB4Ar		     dw	     zbran,cold7
   9597	BB42  B4FEr 045Br		     dw	     inn,off
   9598	BB46  C22Er C213r		     dw	     getfn,popen
   9599	BB4A  B946r		     cold7   dw	     inte		     ; interpret
   9600	BB4C  0A8Dr BB5Er		     dw	     bran,cold9
   9601	BB50  1447r		     cold8   dw	     psqot
   9602					     dcs     'FORTH'
1  9603	BB52  05			     db	     ??03CA	     ;
1  9604	BB53  46 4F 52 54 48	     ??03CB  db	     'FORTH'
   9605	BB58  0F83r C1F8r 02FEr		     dw	     rsw,open,drop
   9606	BB5E  0F13r 0EC9r	     cold9   dw	     crr,pagee
   9607	BB62  144Dr			     dw	     pdotq
   9608	BB64  1B			     db	     elogo-$-1
   9609	      =MAIN:BB65	     logo    equ     $
   9610	BB65  44 58 2D 46 6F 72	74+	     db	     'DX-Forth '
   9611	      68 20
   9612	BB6E  34 2E 34			     db	     '0'+rel,'.','0'+rev/10
   9613	BB71  35			     db	     '0'+rev mod 10
   9614	BB72  20 20			     db	     '	'
   9615					     date
1  9616	BB74  32 30 32 32 2D 30	31+	     db	     '2022-01-11'
   9617	      2D 31 31
   9618	BB7E  20 20			     db	     '	'
   9619	      =MAIN:BB80	     elogo   equ     $
   9620	BB80  0F13r			     dw	     crr
   9621	      =MAIN:BB82	     piden   equ     $
   9622	BB82  C418r			     dw	     ident		     ; run IDENTIFY
   9623	BB84  0F13r			     dw	     crr
   9624	BB86  BF35r			     dw	     scrnq
   9625	BB88  0A92r BB9Dr		     dw	     zbran,cold10
   9626	BB8C  0F13r			     dw	     crr
   9627	BB8E  144Dr			     dw	     pdotq
   9628					     dcs     'Using '
1  9629	BB90  06			     db	     ??03CC	     ;
1  9630	BB91  55 73 69 6E 67 20	     ??03CD  db	     'Using '
   9631	BB97  BF40r 0EE4r		     dw	     loadf,typee
   9632	BB9B  0F13r			     dw	     crr
   9633	BB9D  BA57r		     cold10  dw	     pqui		     ; jump to interpreter
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 170
kernel.asm



   9634
   9635				     ;	     SET-LIMIT	( addr -- )  $fff0 and dup 4 rshift (ulimit) 2!
   9636
   9637					     hdr     1,'SET-LIMIT',,1
1  9638					     cseg
1  9639					     aseg
1  9640	0E11			     heads   segment public	     ;
1  9641	0E11  09			     db	     ??03CE	     ;
1  9642	0E12  53 45 54 2D 4C 49	4D+	     db	     'SET-LIMIT'	     ;
   9643	      49 54
1  9644	0E1B  0E08			     dw	     lastl	     ;
1  9645	0E1D  BB9Fr			     dw	     cfadr	     ;
1  9646	0E1F			     heads   ends
1  9647					     cseg	     ;
1  9648					     aseg
   9649	BB9F  58		     setlim: pop     ax
   9650	BBA0  24 F0			     and     al,0f0h
   9651	BBA2  A3 01E8r			     mov     ulimit+cw,ax
   9652	BBA5  B1 04			     mov     cl,4
   9653	BBA7  D3 E8			     shr     ax,cl
   9654	BBA9  A3 01E6r			     mov     ulimit,ax
   9655					     nextt
1  9656	BBAC  AD			     lodsw
1  9657	BBAD  FF E0			     jmp     ax
   9658
   9659				     ;	     PROTECT  (	-- )	     up	@ (initu) (initu2-initu) cmove
   9660
   9661					     hdr     1,'PROTECT',,1
1  9662					     cseg
1  9663					     aseg
1  9664	0E1F			     heads   segment public	     ;
1  9665	0E1F  07			     db	     ??03D0	     ;
1  9666	0E20  50 52 4F 54 45 43	54	     db	     'PROTECT'		     ;
1  9667	0E27  0E11			     dw	     lastl	     ;
1  9668	0E29  BBAFr			     dw	     cfadr	     ;
1  9669	0E2B			     heads   ends
1  9670					     cseg	     ;
1  9671					     aseg
   9672	BBAF  E8 46C3		     prot:   call    docol
   9673	BBB2  0FBCr 03D2r		     dw	     up,at
   9674	BBB6  02A8r 01C2r		     dw	     lit,initu
   9675	BBBA  02A8r 0014		     dw	     lit,initu2-initu
   9676	BBBE  047Br			     dw	     cmove
   9677	BBC0  0289r			     dw	     exit
   9678
   9679				     ;	     'prune		     variable 'prune  'prune off
   9680
   9681					     hdr     x,"'PRUNE",,1
1  9682					     cseg	     ;
1  9683					     aseg
   9684	BBC2  E8 45F5		     tprun:  call    docre
   9685	BBC5  C48Br			     dw	     toppru	     ; 0=end
   9686
   9687				     ;	     REMEMBER  ( xt -- )     'prune link, ,
   9688
   9689					     hdr     1,'REMEMBER',,1 ; add xt to prunes
1  9690					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 171
kernel.asm



1  9691					     aseg
1  9692	0E2B			     heads   segment public	     ;
1  9693	0E2B  08			     db	     ??03D4	     ;
1  9694	0E2C  52 45 4D 45 4D 42	45+	     db	     'REMEMBER'		     ;
   9695	      52
1  9696	0E34  0E1F			     dw	     lastl	     ;
1  9697	0E36  BBC7r			     dw	     cfadr	     ;
1  9698	0E38			     heads   ends
1  9699					     cseg	     ;
1  9700					     aseg
   9701	BBC7  E8 46AB		     remem:  call    docol
   9702	BBCA  BBC2r 112Er		     dw	     tprun,linkc
   9703	BBCE  106Dr			     dw	     comma
   9704	BBD0  0289r			     dw	     exit
   9705
   9706				     ;	     xdp  ( adr	-- adr xdp ) dup limit u< if dp	end dps
   9707
   9708					     hdr     x,'XDP',,1
1  9709					     cseg	     ;
1  9710					     aseg
   9711	BBD2  58		     xdp:    pop     ax
   9712	BBD3  50			     push    ax
   9713	BBD4  3B 06 0F92r		     cmp     ax,limit1
   9714	BBD8  73 03			     jnc     xdp1
   9715	BBDA  E9 540D			     jmp     dpp
   9716	BBDD  E9 F945		     xdp1:   jmp     dps
   9717
   9718				     ;	     prunes  ( -- )	     begin 'prune @ dup	while dup xdp @	u< 0=
   9719				     ;				     while 2@ 'prune ! execute repeat then drop
   9720
   9721					     hdr     x,'PRUNES',,1
1  9722					     cseg	     ;
1  9723					     aseg
   9724	BBE0  E8 4692		     pruns:  call    docol
   9725	BBE3  BBC2r 03D2r	     pruns1  dw	     tprun,at
   9726	BBE7  0304r			     dw	     dupp
   9727	BBE9  0A92r BC07r		     dw	     zbran,pruns2
   9728	BBED  0304r			     dw	     dupp
   9729	BBEF  BBD2r 03D2r		     dw	     xdp,at
   9730	BBF3  0670r 0628r		     dw	     uless,zequ
   9731	BBF7  0A92r BC07r		     dw	     zbran,pruns2
   9732	BBFB  03EEr			     dw	     tat
   9733	BBFD  BBC2r 03D8r		     dw	     tprun,store
   9734	BC01  0299r			     dw	     exec
   9735	BC03  0A8Dr BBE3r		     dw	     bran,pruns1
   9736	BC07  02FEr		     pruns2  dw	     drop
   9737	BC09  0289r			     dw	     exit
   9738
   9739				     ;	     ?protected	( h-addr -- h-addr )  (idph) @ over u> check? and
   9740				     ;					     abort" is protected"
   9741
   9742					     hdr     x,'?PROTECTED',,1
1  9743					     cseg	     ;
1  9744					     aseg
   9745	BC0B  E8 4667		     qprot:  call    docol
   9746	BC0E  02A8r 01D4r		     dw	     lit,idph
   9747	BC12  03D2r			     dw	     at
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 172
kernel.asm



   9748	BC14  031Cr 067Ar		     dw	     over,ugrea
   9749	BC18  B540r 0723r		     dw	     chkq,andd
   9750	BC1C  1271r			     dw	     pabq
   9751					     dcs     'is protected'
1  9752	BC1E  0C			     db	     ??03DC	     ;
1  9753	BC1F  69 73 20 70 72 6F	74+  ??03DD  db	     'is protected'
   9754	      65 63 74 65 64
   9755	BC2B  0289r			     dw	     exit
   9756
   9757				     ;	     name? ( "name" -- xt nfa )	     bl-word get-context wfind ?defined
   9758				     ;					     ?protected
   9759
   9760					     hdr     x,'NAME?',,1    ; find name in context wordlist
1  9761					     cseg	     ;
1  9762					     aseg
   9763	BC2D  E8 4645		     nameq:  call    docol
   9764	BC30  B7D8r			     dw	     blword
   9765	BC32  B233r			     dw	     getcon
   9766	BC34  B248r B6E3r		     dw	     wfind,qdef
   9767	BC38  BC0Br			     dw	     qprot
   9768	BC3A  0289r			     dw	     exit
   9769
   9770				     ;	     lfind  ( wid nfa -- lfa | 0 )   swap @ begin 2dup h@ - while h@
   9771				     ;					     dup while n>link repeat then nip
   9772
   9773					     hdr     x,'LFIND',,1    ; find link field containing nfa, 0=none
1  9774					     cseg	     ;
1  9775					     aseg
   9776	BC3C  E8 4636		     lfind:  call    docol
   9777	BC3F  0315r 03D2r		     dw	     swap,at
   9778	BC43  037Er B000r	     lfind1  dw	     tdup,hat
   9779	BC47  0775r			     dw	     subb
   9780	BC49  0A92r BC5Br		     dw	     zbran,lfind2
   9781	BC4D  B000r 0304r		     dw	     hat,dupp
   9782	BC51  0A92r BC5Br		     dw	     zbran,lfind2
   9783	BC55  B55Dr			     dw	     nlnk
   9784	BC57  0A8Dr BC43r		     dw	     bran,lfind1
   9785	BC5B  0362r		     lfind2  dw	     nip
   9786	BC5D  0289r			     dw	     exit
   9787
   9788				     ;	     BEHEAD  ( "name1" "name2" -- )  name? nip name? nip 2dup u< if swap
   9789				     ;					     then n>name get-context rot lfind h!
   9790
   9791					     hdr     1,'BEHEAD',,1   ; unlink word heads
1  9792					     cseg
1  9793					     aseg
1  9794	0E38			     heads   segment public	     ;
1  9795	0E38  06			     db	     ??03E2	     ;
1  9796	0E39  42 45 48 45 41 44		     db	     'BEHEAD'		     ;
1  9797	0E3F  0E2B			     dw	     lastl	     ;
1  9798	0E41  BC5Fr			     dw	     cfadr	     ;
1  9799	0E43			     heads   ends
1  9800					     cseg	     ;
1  9801					     aseg
   9802	BC5F  E8 4613		     behead: call    docol
   9803	BC62  BC2Dr 0362r		     dw	     nameq,nip
   9804	BC66  BC2Dr 0362r		     dw	     nameq,nip
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 173
kernel.asm



   9805	BC6A  037Er 0670r		     dw	     tdup,uless
   9806	BC6E  0A92r BC74r		     dw	     zbran,behead1
   9807	BC72  0315r			     dw	     swap
   9808	BC74  B566r		     behead1 dw	     ntnam
   9809	BC76  B233r			     dw	     getcon
   9810	BC78  0324r BC3Cr		     dw	     rot,lfind
   9811	BC7C  B009r			     dw	     hstor
   9812	BC7E  0289r			     dw	     exit
   9813
   9814				     ;	     ?chain  ( flag -- )	     abort" invalid chain"
   9815
   9816					     hdr     x,'?CHAIN',,1
1  9817					     cseg	     ;
1  9818					     aseg
   9819	BC80  E8 45F2		     qchai:  call    docol
   9820	BC83  1271r			     dw	     pabq
   9821					     dcs     'invalid chain'
1  9822	BC85  0D			     db	     ??03E6	     ;
1  9823	BC86  69 6E 76 61 6C 69	64+  ??03E7  db	     'invalid chain'
   9824	      20 63 68 61 69 6E
   9825	BC93  0289r			     dw	     exit
   9826
   9827				     ;	     CHAIN  ( "name" --	)	     get-current postpone addr @ 2dup
   9828				     ;					     = ?chain @	cell- $2001 over h@ -
   9829				     ;					     ?chain 2dup lfind ?chain swap 0
   9830				     ;					     lfind ?protected 2dup u> ?chain h!
   9831
   9832					     hdr     1,'CHAIN',,1
1  9833					     cseg
1  9834					     aseg
1  9835	0E43			     heads   segment public	     ;
1  9836	0E43  05			     db	     ??03E8	     ;
1  9837	0E44  43 48 41 49 4E		     db	     'CHAIN'	     ;
1  9838	0E49  0E38			     dw	     lastl	     ;
1  9839	0E4B  BC95r			     dw	     cfadr	     ;
1  9840	0E4D			     heads   ends
1  9841					     cseg	     ;
1  9842					     aseg
   9843	BC95  E8 45DD		     chain:  call    docol
   9844	BC98  B23Ar			     dw	     getcur
   9845	BC9A  B48Er 03D2r		     dw	     addr,at
   9846	BC9E  037Er 063Br		     dw	     tdup,equal	     ; same wordlist
   9847	BCA2  BC80r			     dw	     qchai
   9848	BCA4  03D2r 07ACr		     dw	     at,cellm
   9849	BCA8  02A8r 2001		     dw	     lit,2001h
   9850	BCAC  031Cr B000r 0775r		     dw	     over,hat,subb   ; not a wordlist
   9851	BCB2  BC80r			     dw	     qchai
   9852	BCB4  037Er BC3Cr		     dw	     tdup,lfind	     ; already chained
   9853	BCB8  BC80r			     dw	     qchai
   9854	BCBA  0315r			     dw	     swap
   9855	BCBC  0F79r BC3Cr		     dw	     zero,lfind
   9856	BCC0  BC0Br			     dw	     qprot
   9857	BCC2  037Er 067Ar		     dw	     tdup,ugrea	     ; forward reference
   9858	BCC6  BC80r			     dw	     qchai
   9859	BCC8  B009r			     dw	     hstor
   9860	BCCA  0289r			     dw	     exit
   9861
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 174
kernel.asm



   9862				     ;	     (forget)  ( nfa dps dp -- )
   9863				     ;				     dp	2! >r voc-link begin @ dup cell- @ cell+
   9864				     ;				     r@	u< until dup voc-link !	begin dup cell-
   9865				     ;				     @ dup h@ begin dup	r@ u< 0= while -alias if
   9866				     ;				     dup name> xdp tuck	@ umin swap ! then n>name
   9867				     ;				     repeat swap h! @ ?dup 0= until r> dup dph !
   9868				     ;				     (idph) @ u< if protect then prunes
   9869
   9870					     hdr     x,'(FORGET)',,1
1  9871					     cseg	     ;
1  9872					     aseg
   9873	BCCC  E8 45A6		     pforg:  call    docol
   9874	BCCF  0FEAr 03F7r		     dw	     dpp,tstor	     ; starting	maximums
   9875	BCD3  02C9r			     dw	     tor
   9876	BCD5  B52Ar			     dw	     vocl	     ; trim vocs > nfa
   9877	BCD7  03D2r		     pforg1  dw	     at
   9878	BCD9  0304r			     dw	     dupp
   9879	BCDB  07ACr 03D2r 079Er		     dw	     cellm,at,cellp  ; vocab nfa (WORDLIST compatible)
   9880	BCE1  02DBr 0670r		     dw	     rat,uless
   9881	BCE5  0A92r BCD7r		     dw	     zbran,pforg1
   9882	BCE9  0304r B52Ar 03D8r		     dw	     dupp,vocl,store
   9883	BCEF  0304r 07ACr 03D2r	     pforg2  dw	     dupp,cellm,at   ; scan remaining vocs
   9884	BCF5  0304r B000r		     dw	     dupp,hat
   9885	BCF9  0304r 02DBr	     pforg3  dw	     dupp,rat	     ; for each	word >=	nfa
   9886	BCFD  0670r 0628r		     dw	     uless,zequ
   9887	BD01  0A92r BD21r		     dw	     zbran,pforg5
   9888	BD05  B580r			     dw	     dalias	     ; not an alias
   9889	BD07  0A92r BD1Br		     dw	     zbran,pforg4
   9890	BD0B  0304r B56Fr		     dw	     dupp,namef	     ; get its xt
   9891	BD0F  BBD2r			     dw	     xdp
   9892	BD11  036Ar 03D2r		     dw	     tuck,at
   9893	BD15  069Fr 0315r 03D8r		     dw	     umin,swap,store ; trim dict
   9894	BD1B  B566r		     pforg4  dw	     ntnam
   9895	BD1D  0A8Dr BCF9r		     dw	     bran,pforg3
   9896	BD21  0315r B009r	     pforg5  dw	     swap,hstor
   9897	BD25  03D2r			     dw	     at
   9898	BD27  030Br 0628r		     dw	     qdup,zequ
   9899	BD2B  0A92r BCEFr		     dw	     zbran,pforg2    ; until all vocs done
   9900	BD2F  02D2r			     dw	     fromr
   9901	BD31  0304r B52Fr 03D8r		     dw	     dupp,dph,store
   9902	BD37  02A8r 01D4r		     dw	     lit,idph	     ; below fence?
   9903	BD3B  03D2r 0670r		     dw	     at,uless
   9904	BD3F  0A92r BD45r		     dw	     zbran,pforg6
   9905	BD43  BBAFr			     dw	     prot	     ; fix bootup values
   9906	BD45  BBE0r		     pforg6  dw	     pruns	     ; run prunes list
   9907	BD47  0289r			     dw	     exit
   9908
   9909				     ;	     EMPTY  ( -- )	     forth definitions (idph) @	(idp)
   9910				     ;				     2@	(forget)
   9911
   9912					     hdr     1,'EMPTY',,1
1  9913					     cseg
1  9914					     aseg
1  9915	0E4D			     heads   segment public	     ;
1  9916	0E4D  05			     db	     ??03EC	     ;
1  9917	0E4E  45 4D 50 54 59		     db	     'EMPTY'	     ;
1  9918	0E53  0E43			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 175
kernel.asm



1  9919	0E55  BD49r			     dw	     cfadr	     ;
1  9920	0E57			     heads   ends
1  9921					     cseg	     ;
1  9922					     aseg
   9923	BD49  E8 4529		     empty:  call    docol
   9924	BD4C  B8CBr B8BCr		     dw	     forth,defin     ; switch to a safe	vocabulary
   9925	BD50  02A8r 01D4r		     dw	     lit,idph
   9926	BD54  03D2r			     dw	     at
   9927	BD56  02A8r 01CCr		     dw	     lit,idp
   9928	BD5A  03EEr			     dw	     tat
   9929	BD5C  BCCCr			     dw	     pforg
   9930	BD5E  0289r			     dw	     exit
   9931
   9932				     ;	     FORGET  ( "name" -- )   get-current context ! name? -alias
   9933				     ;				     0=	abort" is alias" swap limit over u<
   9934				     ;				     if	dp @ else dps @	swap then (forget)
   9935
   9936					     hdr     1,'FORGET',,1
1  9937					     cseg
1  9938					     aseg
1  9939	0E57			     heads   segment public	     ;
1  9940	0E57  06			     db	     ??03EE	     ;
1  9941	0E58  46 4F 52 47 45 54		     db	     'FORGET'		     ;
1  9942	0E5E  0E4D			     dw	     lastl	     ;
1  9943	0E60  BD60r			     dw	     cfadr	     ;
1  9944	0E62			     heads   ends
1  9945					     cseg	     ;
1  9946					     aseg
   9947	BD60  E8 4512		     forg:   call    docol
   9948	BD63  B23Ar			     dw	     getcur
   9949	BD65  B22Ar 03D8r		     dw	     cont,store
   9950	BD69  BC2Dr			     dw	     nameq
   9951	BD6B  B580r 0628r		     dw	     dalias,zequ     ; alias?
   9952	BD6F  1271r			     dw	     pabq
   9953					     dcs     'is alias'
1  9954	BD71  08			     db	     ??03F0	     ;
1  9955	BD72  69 73 20 61 6C 69	61+  ??03F1  db	     'is alias'
   9956	      73
   9957	BD7A  0315r			     dw	     swap
   9958	BD7C  0F8Fr			     dw	     limit
   9959	BD7E  031Cr 0670r		     dw	     over,uless
   9960	BD82  0A92r BD8Er		     dw	     zbran,forg1
   9961	BD86  0FEAr 03D2r		     dw	     dpp,at
   9962	BD8A  0A8Dr BD94r		     dw	     bran,forg2
   9963	BD8E  B525r 03D2r	     forg1   dw	     dps,at
   9964	BD92  0315r			     dw	     swap
   9965	BD94  BCCCr		     forg2   dw	     pforg
   9966	BD96  0289r			     dw	     exit
   9967
   9968				     ;	     MARKER  ( "name" -- )   sys? system ['] drop build	sys !
   9969
   9970					     hdr     1,'MARKER',,1
1  9971					     cseg
1  9972					     aseg
1  9973	0E62			     heads   segment public	     ;
1  9974	0E62  06			     db	     ??03F2	     ;
1  9975	0E63  4D 41 52 4B 45 52		     db	     'MARKER'		     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 176
kernel.asm



1  9976	0E69  0E57			     dw	     lastl	     ;
1  9977	0E6B  BD98r			     dw	     cfadr	     ;
1  9978	0E6D			     heads   ends
1  9979					     cseg	     ;
1  9980					     aseg
   9981	BD98  E8 44DA		     marker: call    docol
   9982	BD9B  100Dr			     dw	     sysq
   9983	BD9D  B547r			     dw	     system
   9984	BD9F  02A8r 02FEr		     dw	     lit,drop
   9985	BDA3  B3C6r			     dw	     build
   9986	BDA5  0FCDr 03D8r		     dw	     sys,store
   9987	BDA9  0289r			     dw	     exit
   9988
   9989				     ;	     COMPILE,  ( xt -- )     warning @ 0< if dup limit u< sys? d0= if
   9990				     ;				     dup >name .id ."  is system " then	then ,
   9991
   9992					     hdr     1,'COMPILE,',,1
1  9993					     cseg
1  9994					     aseg
1  9995	0E6D			     heads   segment public	     ;
1  9996	0E6D  08			     db	     ??03F4	     ;
1  9997	0E6E  43 4F 4D 50 49 4C	45+	     db	     'COMPILE,'		     ;
   9998	      2C
1  9999	0E76  0E62			     dw	     lastl	     ;
1 10000	0E78  BDABr			     dw	     cfadr	     ;
1 10001	0E7A			     heads   ends
1 10002					     cseg	     ;
1 10003					     aseg
  10004	BDAB  E8 44C7		     comxt:  call    docol
  10005	BDAE  B516r 03D2r		     dw	     warnn,at
  10006	BDB2  0654r			     dw	     zless
  10007	BDB4  0A92r BDDAr		     dw	     zbran,comxt1
  10008	BDB8  0304r 0F8Fr		     dw	     dupp,limit
  10009	BDBC  0670r			     dw	     uless
  10010	BDBE  100Dr			     dw	     sysq
  10011	BDC0  0623r			     dw	     dzequ
  10012	BDC2  0A92r BDDAr		     dw	     zbran,comxt1
  10013	BDC6  0304r			     dw	     dupp
  10014	BDC8  B58Er B5ECr		     dw	     tnam,dotid
  10015	BDCC  144Dr			     dw	     pdotq
  10016					     dcs     ' is system '
1 10017	BDCE  0B			     db	     ??03F6	     ;
1 10018	BDCF  20 69 73 20 73 79	73+  ??03F7  db	     ' is system '
  10019	      74 65 6D 20
  10020	BDDA  106Dr		     comxt1  dw	     comma
  10021	BDDC  0289r			     dw	     exit
  10022
  10023				     ;	     COMPILE  (	-- )	     ?comp r> dup cell+	>r @ compile,
  10024
  10025					     hdr     1,'COMPILE',,1
1 10026					     cseg
1 10027					     aseg
1 10028	0E7A			     heads   segment public	     ;
1 10029	0E7A  07			     db	     ??03F8	     ;
1 10030	0E7B  43 4F 4D 50 49 4C	45	     db	     'COMPILE'		     ;
1 10031	0E82  0E6D			     dw	     lastl	     ;
1 10032	0E84  BDDEr			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 177
kernel.asm



1 10033	0E86			     heads   ends
1 10034					     cseg	     ;
1 10035					     aseg
  10036	BDDE  E8 4494		     comp:   call    docol
  10037	BDE1  B659r			     dw	     qcomp	     ; prevent crash if	interpreting
  10038	BDE3  02D2r			     dw	     fromr
  10039	BDE5  0304r 079Er		     dw	     dupp,cellp
  10040	BDE9  02C9r			     dw	     tor
  10041	BDEB  03D2r			     dw	     at
  10042	BDED  BDABr			     dw	     comxt
  10043	BDEF  0289r			     dw	     exit
  10044
  10045				     ;	     POSTPONE		     defined ?dup if 0<	if compile compile then
  10046				     ;				     else ?comp	number dup >r execute r> then
  10047				     ;				     compile, ;immediate
  10048
  10049					     hdr     1,'POSTPONE',1,1
1 10050					     cseg
1 10051					     aseg
1 10052	0E86			     heads   segment public	     ;
1 10053	0E86  48			     db	     ??03FA	     ;
1 10054	0E87  50 4F 53 54 50 4F	4E+	     db	     'POSTPONE'		     ;
  10055	      45
1 10056	0E8F  0E7A			     dw	     lastl	     ;
1 10057	0E91  BDF1r			     dw	     cfadr	     ;
1 10058	0E93			     heads   ends
1 10059					     cseg	     ;
1 10060					     aseg
  10061	BDF1  E8 4481		     postp:  call    docol
  10062	BDF4  B7F0r 030Br		     dw	     defined,qdup
  10063	BDF8  0A92r BE0Ar		     dw	     zbran,postp2
  10064	BDFC  0654r			     dw	     zless
  10065	BDFE  0A92r BE06r		     dw	     zbran,postp1
  10066	BE02  BDDEr BDDEr		     dw	     comp,comp
  10067	BE06  0A8Dr BE16r	     postp1  dw	     bran,postp3
  10068	BE0A  B659r		     postp2  dw	     qcomp
  10069	BE0C  B8D0r			     dw	     numb
  10070	BE0E  0304r 02C9r		     dw	     dupp,tor
  10071	BE12  0299r			     dw	     exec	     ; create literal &	compile
  10072	BE14  02D2r			     dw	     fromr
  10073	BE16  BDABr		     postp3  dw	     comxt
  10074	BE18  0289r			     dw	     exit
  10075
  10076				     ;	     S,	 ( c-addr u -- )     255 umin dup 1+ reserve place
  10077
  10078					     hdr     1,'S,'
1 10079					     cseg
1 10080	0E93			     heads   segment public	     ;
1 10081	0E93  02			     db	     ??03FC	     ;
1 10082	0E94  53 2C			     db	     'S,'	     ;
1 10083	0E96  0E86			     dw	     lastl	     ;
1 10084	0E98  1435r			     dw	     cfadr	     ;
1 10085	0E9A			     heads   ends
1 10086					     cseg	     ;
  10087	1435  E8 EE3D		     scomm:  call    docol
  10088	1438  02A1r			     dw	     clit
  10089	143A  FF			     db	     255
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 178
kernel.asm



  10090	143B  069Fr			     dw	     umin
  10091	143D  0304r 0798r		     dw	     dupp,onep
  10092	1441  1057r			     dw	     resv
  10093	1443  04BCr			     dw	     place
  10094	1445  0289r			     dw	     exit
  10095
  10096				     ;	     ,"	 ( "ccc" -- )	     "parse s,
  10097
  10098					     hdr     1,',"',,1
1 10099					     cseg
1 10100					     aseg
1 10101	0E9A			     heads   segment public	     ;
1 10102	0E9A  02			     db	     ??03FE	     ;
1 10103	0E9B  2C 22			     db	     ',"'	     ;
1 10104	0E9D  0E93			     dw	     lastl	     ;
1 10105	0E9F  BE1Ar			     dw	     cfadr	     ;
1 10106	0EA1			     heads   ends
1 10107					     cseg	     ;
1 10108					     aseg
  10109	BE1A  E8 4458		     comq:   call    docol
  10110	BE1D  B765r			     dw	     parsq
  10111	BE1F  1435r			     dw	     scomm
  10112	BE21  0289r			     dw	     exit
  10113
  10114				     ;	     (s")  ( --	c-addr u )   r>	count 2dup + >r
  10115
  10116					     hdr     x,'(S")'
1 10117					     cseg	     ;
  10118	1447  E8 EE21		     psqot:  call    strr
  10119					     nextt
1 10120	144A  AD			     lodsw
1 10121	144B  FF E0			     jmp     ax
  10122
  10123				     ;	     SLITERAL  ( c-addr	u -- )	postpone (s") s, ;immediate
  10124
  10125					     hdr     1,'SLITERAL',1,1
1 10126					     cseg
1 10127					     aseg
1 10128	0EA1			     heads   segment public	     ;
1 10129	0EA1  48			     db	     ??0402	     ;
1 10130	0EA2  53 4C 49 54 45 52	41+	     db	     'SLITERAL'		     ;
  10131	      4C
1 10132	0EAA  0E9A			     dw	     lastl	     ;
1 10133	0EAC  BE23r			     dw	     cfadr	     ;
1 10134	0EAE			     heads   ends
1 10135					     cseg	     ;
1 10136					     aseg
  10137	BE23  E8 444F		     slite:  call    docol
  10138	BE26  BDDEr 1447r		     dw	     comp,psqot
  10139	BE2A  1435r			     dw	     scomm
  10140	BE2C  0289r			     dw	     exit
  10141
  10142				     ;	     S"	 ( -- c-addr u )     "parse state? if postpone sliteral	then
  10143				     ;				     ;immediate
  10144
  10145					     hdr     1,'S"',1,1	     ; state smart version
1 10146					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 179
kernel.asm



1 10147					     aseg
1 10148	0EAE			     heads   segment public	     ;
1 10149	0EAE  42			     db	     ??0404	     ;
1 10150	0EAF  53 22			     db	     'S"'	     ;
1 10151	0EB1  0EA1			     dw	     lastl	     ;
1 10152	0EB3  BE2Er			     dw	     cfadr	     ;
1 10153	0EB5			     heads   ends
1 10154					     cseg	     ;
1 10155					     aseg
  10156	BE2E  E8 4444		     squot:  call    docol
  10157	BE31  B765r			     dw	     parsq
  10158	BE33  B539r			     dw	     stateq
  10159	BE35  0A92r BE3Br		     dw	     zbran,squot1
  10160	BE39  BE23r			     dw	     slite
  10161	BE3B  0289r		     squot1  dw	     exit
  10162
  10163
  10164				     ;	     (.")		     r>	count 2dup + >r	type
  10165
  10166					     hdr     x,'(.")'
1 10167					     cseg	     ;
  10168	144D  E8 EE1B		     pdotq:  call    strr
  10169	1450  E9 FA91			     jmp     typee
  10170
  10171
  10172				     ;	     ."			     state? if postpone	(.") ,"	end
  10173				     ;				     "parse type ;immediate
  10174
  10175					     hdr     1,'."',1,1	     ; state-smart
1 10176					     cseg
1 10177					     aseg
1 10178	0EB5			     heads   segment public	     ;
1 10179	0EB5  42			     db	     ??0408	     ;
1 10180	0EB6  2E 22			     db	     '."'	     ;
1 10181	0EB8  0EAE			     dw	     lastl	     ;
1 10182	0EBA  BE3Dr			     dw	     cfadr	     ;
1 10183	0EBC			     heads   ends
1 10184					     cseg	     ;
1 10185					     aseg
  10186	BE3D  E8 4435		     dotq:   call    docol
  10187	BE40  B539r			     dw	     stateq
  10188	BE42  0A92r BE4Er		     dw	     zbran,dotq1
  10189	BE46  BDDEr 144Dr		     dw	     comp,pdotq
  10190	BE4A  BE1Ar			     dw	     comq
  10191	BE4C  0289r			     dw	     exit
  10192	BE4E  B765r		     dotq1   dw	     parsq
  10193	BE50  0EE4r			     dw	     typee
  10194	BE52  0289r			     dw	     exit
  10195
  10196
  10197				     ;	     CHAR?  ( x	-- x flag )
  10198
  10199					     hdr     x,'CHAR?',,1
1 10200					     cseg	     ;
1 10201					     aseg
  10202	BE54  58		     charq:  pop     ax
  10203	BE55  50			     push    ax
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 180
kernel.asm



  10204	BE56  8A C4			     mov     al,ah
  10205	BE58  E9 47CE			     jmp     zequ1
  10206
  10207				     ;	     LITERAL  (	n -- )	     char? if postpone clit c, end
  10208				     ;				     postpone lit , ;immediate
  10209
  10210					     hdr     1,'LITERAL',1,1
1 10211					     cseg
1 10212					     aseg
1 10213	0EBC			     heads   segment public	     ;
1 10214	0EBC  47			     db	     ??040C	     ;
1 10215	0EBD  4C 49 54 45 52 41	4C	     db	     'LITERAL'		     ;
1 10216	0EC4  0EB5			     dw	     lastl	     ;
1 10217	0EC6  BE5Br			     dw	     cfadr	     ;
1 10218	0EC8			     heads   ends
1 10219					     cseg	     ;
1 10220					     aseg
  10221	BE5B  E8 4417		     liter:  call    docol
  10222	BE5E  BE54r			     dw	     charq
  10223	BE60  0A92r BE6Cr		     dw	     zbran,liter1
  10224	BE64  BDDEr 02A1r		     dw	     comp,clit
  10225	BE68  1062r			     dw	     ccomm
  10226	BE6A  0289r			     dw	     exit
  10227	BE6C  BDDEr 02A8r	     liter1  dw	     comp,lit
  10228	BE70  106Dr			     dw	     comma
  10229	BE72  0289r			     dw	     exit
  10230
  10231				     ;	     2LITERAL  ( x1 x2 -- )  postpone 2lit , , ;immediate
  10232
  10233					     hdr     1,'2LITERAL',1,1
1 10234					     cseg
1 10235					     aseg
1 10236	0EC8			     heads   segment public	     ;
1 10237	0EC8  48			     db	     ??040E	     ;
1 10238	0EC9  32 4C 49 54 45 52	41+	     db	     '2LITERAL'		     ;
  10239	      4C
1 10240	0ED1  0EBC			     dw	     lastl	     ;
1 10241	0ED3  BE74r			     dw	     cfadr	     ;
1 10242	0ED5			     heads   ends
1 10243					     cseg	     ;
1 10244					     aseg
  10245	BE74  E8 43FE		     tlite:  call    docol
  10246	BE77  BDDEr 02ADr		     dw	     comp,tlit
  10247	BE7B  106Dr 106Dr		     dw	     comma,comma
  10248	BE7F  0289r			     dw	     exit
  10249
  10250				     ;	     [']		     ' postpone	literal	;immediate
  10251
  10252					     hdr     1,"[']",1,1
1 10253					     cseg
1 10254					     aseg
1 10255	0ED5			     heads   segment public	     ;
1 10256	0ED5  43			     db	     ??0410	     ;
1 10257	0ED6  5B 27 5D			     db	     "[']"	     ;
1 10258	0ED9  0EC8			     dw	     lastl	     ;
1 10259	0EDB  BE81r			     dw	     cfadr	     ;
1 10260	0EDD			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 181
kernel.asm



1 10261					     cseg	     ;
1 10262					     aseg
  10263	BE81  E8 43F1		     btick:  call    docol
  10264	BE84  B7F9r			     dw	     tick
  10265	BE86  BE5Br			     dw	     liter
  10266	BE88  0289r			     dw	     exit
  10267
  10268				     ;	     [COMPILE]		     ' compile,	;immediate
  10269
  10270					     hdr     1,'[COMPILE]',1,1
1 10271					     cseg
1 10272					     aseg
1 10273	0EDD			     heads   segment public	     ;
1 10274	0EDD  49			     db	     ??0412	     ;
1 10275	0EDE  5B 43 4F 4D 50 49	4C+	     db	     '[COMPILE]'	     ;
  10276	      45 5D
1 10277	0EE7  0ED5			     dw	     lastl	     ;
1 10278	0EE9  BE8Ar			     dw	     cfadr	     ;
1 10279	0EEB			     heads   ends
1 10280					     cseg	     ;
1 10281					     aseg
  10282	BE8A  E8 43E8		     bcomp:  call    docol
  10283	BE8D  B7F9r			     dw	     tick
  10284	BE8F  BDABr			     dw	     comxt
  10285	BE91  0289r			     dw	     exit
  10286
  10287				     ;	     RECURSE  (	-- )	     last cell+	@ compile, ;immediate
  10288
  10289					     hdr     1,'RECURSE',1,1
1 10290					     cseg
1 10291					     aseg
1 10292	0EEB			     heads   segment public	     ;
1 10293	0EEB  47			     db	     ??0414	     ;
1 10294	0EEC  52 45 43 55 52 53	45	     db	     'RECURSE'		     ;
1 10295	0EF3  0EDD			     dw	     lastl	     ;
1 10296	0EF5  BE93r			     dw	     cfadr	     ;
1 10297	0EF7			     heads   ends
1 10298					     cseg	     ;
1 10299					     aseg
  10300	BE93  FF 36 B4F7r	     recurs: push    last2
  10301	BE97  E9 FF11			     jmp     comxt
  10302
  10303				     ;	     CHAR  ( --	char )	     bl-word 1+	c@
  10304
  10305					     hdr     1,'CHAR',,1
1 10306					     cseg
1 10307					     aseg
1 10308	0EF7			     heads   segment public	     ;
1 10309	0EF7  04			     db	     ??0416	     ;
1 10310	0EF8  43 48 41 52		     db	     'CHAR'	     ;
1 10311	0EFC  0EEB			     dw	     lastl	     ;
1 10312	0EFE  BE9Ar			     dw	     cfadr	     ;
1 10313	0F00			     heads   ends
1 10314					     cseg	     ;
1 10315					     aseg
  10316	BE9A  E8 43D8		     char:   call    docol
  10317	BE9D  B7D8r			     dw	     blword
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 182
kernel.asm



  10318	BE9F  0798r 03DEr		     dw	     onep,cat
  10319	BEA3  0289r			     dw	     exit
  10320
  10321				     ;	     [CHAR]  ( -- char )     char postpone literal ;immediate
  10322
  10323					     hdr     1,'[CHAR]',1,1
1 10324					     cseg
1 10325					     aseg
1 10326	0F00			     heads   segment public	     ;
1 10327	0F00  46			     db	     ??0418	     ;
1 10328	0F01  5B 43 48 41 52 5D		     db	     '[CHAR]'		     ;
1 10329	0F07  0EF7			     dw	     lastl	     ;
1 10330	0F09  BEA5r			     dw	     cfadr	     ;
1 10331	0F0B			     heads   ends
1 10332					     cseg	     ;
1 10333					     aseg
  10334	BEA5  E8 43CD		     pchar:  call    docol
  10335	BEA8  BE9Ar			     dw	     char
  10336	BEAA  BE5Br			     dw	     liter
  10337	BEAC  0289r			     dw	     exit
  10338
  10339				     ;	     .YN  ( flag -- )	     if	." Y " end ." N	"
  10340
  10341					     hdr     1,'.YN'
1 10342					     cseg
1 10343	0F0B			     heads   segment public	     ;
1 10344	0F0B  03			     db	     ??041A	     ;
1 10345	0F0C  2E 59 4E			     db	     '.YN'	     ;
1 10346	0F0F  0F00			     dw	     lastl	     ;
1 10347	0F11  1453r			     dw	     cfadr	     ;
1 10348	0F13			     heads   ends
1 10349					     cseg	     ;
  10350	1453  E8 EE1F		     dyn:    call    docol
  10351	1456  0A92r 1461r		     dw	     zbran,dyn1
  10352	145A  144Dr			     dw	     pdotq
  10353					     dcs     'Y	'
1 10354	145C  02			     db	     ??041C	     ;
1 10355	145D  59 20		     ??041D  db	     'Y	'
  10356	145F  0289r			     dw	     exit
  10357	1461  144Dr		     dyn1    dw	     pdotq
  10358					     dcs     'N	'
1 10359	1463  02			     db	     ??041E	     ;
1 10360	1464  4E 20		     ??041F  db	     'N	'
  10361	1466  0289r			     dw	     exit
  10362
  10363				     ;	     Y/N  ( -- flag )	     ."	N\bs" key upcase [char]	Y = dup	.YN
  10364
  10365					     hdr     1,'Y/N'
1 10366					     cseg
1 10367	0F13			     heads   segment public	     ;
1 10368	0F13  03			     db	     ??0420	     ;
1 10369	0F14  59 2F 4E			     db	     'Y/N'	     ;
1 10370	0F17  0F0B			     dw	     lastl	     ;
1 10371	0F19  1468r			     dw	     cfadr	     ;
1 10372	0F1B			     heads   ends
1 10373					     cseg	     ;
  10374	1468  E8 EE0A		     yn:     call    docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 183
kernel.asm



  10375	146B  144Dr			     dw	     pdotq
  10376					     dcs     'N',bs
1 10377	146D  02			     db	     ??0422	     ;
1 10378	146E  4E		     ??0423  db	     'N'
1 10379	146F  08			     db	     bs
  10380	1470  0E8Fr 0F32r		     dw	     key,upcas
  10381	1474  02A1r			     dw	     clit
  10382	1476  59			     db	     'Y'
  10383	1477  063Br			     dw	     equal
  10384	1479  0304r			     dw	     dupp
  10385	147B  1453r			     dw	     dyn
  10386	147D  0289r			     dw	     exit
  10387
  10388				     ;	     HALT?  ( -- flag )	     key? true of key bl of key	then bl	<> then
  10389
  10390					     hdr     1,'HALT?'
1 10391					     cseg
1 10392	0F1B			     heads   segment public	     ;
1 10393	0F1B  05			     db	     ??0424	     ;
1 10394	0F1C  48 41 4C 54 3F		     db	     'HALT?'	     ;
1 10395	0F21  0F13			     dw	     lastl	     ;
1 10396	0F23  147Fr			     dw	     cfadr	     ;
1 10397	0F25			     heads   ends
1 10398					     cseg	     ;
  10399	147F  E8 EDF3		     hltq:   call    docol
  10400	1482  0E5Br 0F72r		     dw	     keyq,true
  10401	1486  0A86r 1498r		     dw	     pof,hltq2
  10402	148A  0E8Fr 0F8Br		     dw	     key,bll
  10403	148E  0A86r 1494r		     dw	     pof,hltq1
  10404	1492  0E8Fr			     dw	     key
  10405	1494  0F8Br 0648r	     hltq1   dw	     bll,nequ
  10406	1498  0289r		     hltq2   dw	     exit
  10407
  10408				     ;
  10409				     ;	     File and Block Functions
  10410				     ;
  10411				     ;	SETDMA	>DRV  MAX-PATH	PATH  -PATH  /ext  +EXT	 -EXT
  10412				     ;	FILE-POSITION  FILE-SIZE  RESIZE-FILE  REPOSITION-FILE	READ-FILE
  10413				     ;	LREAD  WRITE-FILE  LWRITE  fh  READ-LINE  WRITE-LINE  >FNAME  R/O
  10414				     ;	W/O  R/W  BIN  OPEN-FILE  CREATE-FILE  CLOSE-FILE  FLUSH-FILE
  10415				     ;	FILE-STATUS  DELETE-FILE  RENAME-FILE  sfp  SWAP-FILE  FDB  fnb
  10416				     ;	scr#  blks  fid	 fd  buf  blk#	SCREEN?	 LOADFILE  ?open  #SCREENS
  10417				     ;	EMPTY-BUFFERS  UPDATE  blkerr  blk-rw  ?blk  SAVE-BUFFERS  FLUSH
  10418				     ;	BUFFER	BLOCK  -->  LOAD  THRU	FILEBLOCKS  CLOSE  CLOSE-ALL
  10419				     ;	LASTFILE  .lastfile  ?create  init-scr	OPEN  (open)  GETFILENAME
  10420				     ;	USING  LOADED  FLOAD  SAVE  TURNKEY  TURNKEY-SYSTEM
  10421
  10422					     cseg
  10423
  10424	149A  B4 19		     gdrv:   mov     ah,19h	     ; get current drive
  10425	149C  CD 21			     int     21h
  10426	149E  C3			     ret
  10427
  10428				     ;	     SETDMA  ( addr -- )
  10429
  10430					     hdr     1,'SETDMA'
1 10431					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 184
kernel.asm



1 10432	0F25			     heads   segment public	     ;
1 10433	0F25  06			     db	     ??0426	     ;
1 10434	0F26  53 45 54 44 4D 41		     db	     'SETDMA'		     ;
1 10435	0F2C  0F1B			     dw	     lastl	     ;
1 10436	0F2E  149Fr			     dw	     cfadr	     ;
1 10437	0F30			     heads   ends
1 10438					     cseg	     ;
  10439	149F  5A		     setdma: pop     dx
  10440	14A0  B4 1A			     mov     ah,1ah
  10441	14A2  CD 21			     int     21h
  10442					     nextt
1 10443	14A4  AD			     lodsw
1 10444	14A5  FF E0			     jmp     ax
  10445
  10446				     ;	     >DRV  ( u1	-- u2 )	     ?dup if 1-	end 0 25 bdos
  10447
  10448					     hdr     1,'>DRV'
1 10449					     cseg
1 10450	0F30			     heads   segment public	     ;
1 10451	0F30  04			     db	     ??0428	     ;
1 10452	0F31  3E 44 52 56		     db	     '>DRV'	     ;
1 10453	0F35  0F25			     dw	     lastl	     ;
1 10454	0F37  14A7r			     dw	     cfadr	     ;
1 10455	0F39			     heads   ends
1 10456					     cseg	     ;
  10457	14A7  58		     tdrv:   pop     ax
  10458	14A8  48			     dec     ax
  10459	14A9  79 03			     jns     tdrv1
  10460	14AB  E8 FFEC			     call    gdrv
  10461	14AE  2A E4		     tdrv1:  sub     ah,ah
  10462	14B0  E9 ED06			     jmp     apush
  10463
  10464				     ;	     MAX-PATH  ( -- u )
  10465
  10466					     hdr     1,'MAX-PATH'
1 10467					     cseg
1 10468	0F39			     heads   segment public	     ;
1 10469	0F39  08			     db	     ??042A	     ;
1 10470	0F3A  4D 41 58 2D 50 41	54+	     db	     'MAX-PATH'		     ;
  10471	      48
1 10472	0F42  0F30			     dw	     lastl	     ;
1 10473	0F44  14B3r			     dw	     cfadr	     ;
1 10474	0F46			     heads   ends
1 10475					     cseg	     ;
  10476	14B3  E8 EF28		     maxp:   call    docco
  10477	14B6  4F			     db	     pfsiz-1
  10478
  10479				     ;	     PATH  ( u1	-- c-addr u2 ior )
  10480				     ;				     zbuf @ 2dup 2dup 'SI ! 'DX	c! $47 doscall
  10481				     ;				     doserr? >r	<# zcount dup if [char]	\ hold
  10482				     ;				     then shold	s" :\" shold >drv [char] A +
  10483				     ;				     hold #> r>
  10484
  10485					     hdr     1,'PATH'	     ; uses filename & numeric buffer
1 10486					     cseg
1 10487	0F46			     heads   segment public	     ;
1 10488	0F46  04			     db	     ??042C	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 185
kernel.asm



1 10489	0F47  50 41 54 48		     db	     'PATH'	     ;
1 10490	0F4B  0F39			     dw	     lastl	     ;
1 10491	0F4D  14B7r			     dw	     cfadr	     ;
1 10492	0F4F			     heads   ends
1 10493					     cseg	     ;
  10494	14B7  E8 EDBB		     path:   call    docol
  10495	14BA  0FD9r 03D2r		     dw	     zbuf,at
  10496	14BE  037Er 037Er		     dw	     tdup,tdup
  10497	14C2  0BDBr 03D8r		     dw	     tsi,store
  10498	14C6  0BE4r 03E7r		     dw	     tdx,cstor
  10499	14CA  02A1r			     dw	     clit
  10500	14CC  47			     db	     47h
  10501	14CD  0B64r			     dw	     dosc
  10502	14CF  0BFFr 02C9r		     dw	     doserr,tor
  10503	14D3  09CCr			     dw	     bdigs
  10504	14D5  05F1r 0304r		     dw	     zcnt,dupp
  10505	14D9  0A92r 14E2r		     dw	     zbran,path1
  10506	14DD  02A1r			     dw	     clit
  10507	14DF  5C			     db	     '\'
  10508	14E0  0A34r			     dw	     hold
  10509	14E2  0A5Er		     path1   dw	     shold
  10510	14E4  1447r			     dw	     psqot
  10511					     dcs     ':\'
1 10512	14E6  02			     db	     ??042E	     ;
1 10513	14E7  3A 5C		     ??042F  db	     ':\'
  10514	14E9  0A5Er			     dw	     shold
  10515	14EB  14A7r			     dw	     tdrv
  10516	14ED  02A1r			     dw	     clit
  10517	14EF  41			     db	     'A'
  10518	14F0  076Dr			     dw	     plus
  10519	14F2  0A34r			     dw	     hold
  10520	14F4  09D7r			     dw	     edigs
  10521	14F6  02D2r			     dw	     fromr
  10522	14F8  0289r			     dw	     exit
  10523
  10524				     ;	     -PATH  ( c-addr1 u1 -- c-addr2 u2 )
  10525				     ;				     2dup [char] : scan	dup if 1 /string 2swap
  10526				     ;				     then begin	2drop 2dup [char] \ scan dup
  10527				     ;				     while 1 /string 2swap repeat 2drop
  10528
  10529					     hdr     1,'-PATH'
1 10530					     cseg
1 10531	0F4F			     heads   segment public	     ;
1 10532	0F4F  05			     db	     ??0430	     ;
1 10533	0F50  2D 50 41 54 48		     db	     '-PATH'	     ;
1 10534	0F55  0F46			     dw	     lastl	     ;
1 10535	0F57  14FAr			     dw	     cfadr	     ;
1 10536	0F59			     heads   ends
1 10537					     cseg	     ;
  10538	14FA  E8 ED78		     dpath:  call    docol
  10539	14FD  037Er			     dw	     tdup
  10540	14FF  02A1r			     dw	     clit
  10541	1501  3A			     db	     ':'
  10542	1502  04D2r			     dw	     scan
  10543	1504  0304r			     dw	     dupp
  10544	1506  0A92r 1510r		     dw	     zbran,dpath1
  10545	150A  0F7Fr 0538r		     dw	     one,sstr
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 186
kernel.asm



  10546	150E  0388r			     dw	     tswap
  10547	1510  0378r		     dpath1  dw	     tdrop
  10548	1512  037Er			     dw	     tdup
  10549	1514  02A1r			     dw	     clit
  10550	1516  5C			     db	     '\'
  10551	1517  04D2r 0304r		     dw	     scan,dupp
  10552	151B  0A92r 1529r		     dw	     zbran,dpath2
  10553	151F  0F7Fr 0538r		     dw	     one,sstr
  10554	1523  0388r			     dw	     tswap
  10555	1525  0A8Dr 1510r		     dw	     bran,dpath1
  10556	1529  0378r		     dpath2  dw	     tdrop
  10557	152B  0289r			     dw	     exit
  10558
  10559				     ;	     /ext  ( c-addr1 u1	-- u2 )	 -path [char] .	scan nip
  10560
  10561					     hdr     x,'/EXT'	     ; size of file extension
1 10562					     cseg	     ;
  10563	152D  E8 ED45		     sext:   call    docol
  10564	1530  14FAr			     dw	     dpath
  10565	1532  02A1r			     dw	     clit
  10566	1534  2E			     db	     '.'
  10567	1535  04D2r			     dw	     scan
  10568	1537  0362r			     dw	     nip
  10569	1539  0289r			     dw	     exit
  10570
  10571				     ;	     +EXT  ( c-addr1 u1	c-addr2	u2 -- c-addr3 u3 )
  10572				     ;				     2over /ext	if 2drop end 3 min
  10573				     ;				     s"	." 2rot	-trailing (pfsiz-5) min	zbuf
  10574				     ;				     @ 1+ 0 +string +string +string
  10575
  10576					     hdr     1,'+EXT'	     ; uses filename buffer
1 10577					     cseg
1 10578	0F59			     heads   segment public	     ;
1 10579	0F59  04			     db	     ??0434	     ;
1 10580	0F5A  2B 45 58 54		     db	     '+EXT'	     ;
1 10581	0F5E  0F4F			     dw	     lastl	     ;
1 10582	0F60  153Br			     dw	     cfadr	     ;
1 10583	0F62			     heads   ends
1 10584					     cseg	     ;
  10585	153B  E8 ED37		     pext:   call    docol
  10586	153E  0393r 152Dr		     dw	     tover,sext
  10587	1542  0A92r 154Ar		     dw	     zbran,pext1
  10588	1546  0378r 0289r		     dw	     tdrop,exit
  10589	154A  0F87r 0684r	     pext1   dw	     three,min
  10590	154E  1447r			     dw	     psqot
  10591					     dcs     '.'
1 10592	1550  01			     db	     ??0436	     ;
1 10593	1551  2E		     ??0437  db	     '.'
  10594	1552  039Er			     dw	     trot
  10595	1554  04FAr			     dw	     dtrai	     ; trim trailing blanks
  10596	1556  02A1r			     dw	     clit
  10597	1558  4B			     db	     pfsiz-5
  10598	1559  0684r			     dw	     min
  10599	155B  0FD9r 03D2r		     dw	     zbuf,at	     ; unused
  10600	155F  0798r			     dw	     onep
  10601	1561  0F79r			     dw	     zero
  10602	1563  05E1r			     dw	     pstr
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 187
kernel.asm



  10603	1565  05E1r			     dw	     pstr
  10604	1567  05E1r			     dw	     pstr
  10605	1569  0289r			     dw	     exit
  10606
  10607				     ;	     -EXT  ( c-addr u1 -- c-addr u2 )  2dup /ext -
  10608
  10609					     hdr     1,'-EXT'
1 10610					     cseg
1 10611	0F62			     heads   segment public	     ;
1 10612	0F62  04			     db	     ??0438	     ;
1 10613	0F63  2D 45 58 54		     db	     '-EXT'	     ;
1 10614	0F67  0F59			     dw	     lastl	     ;
1 10615	0F69  156Br			     dw	     cfadr	     ;
1 10616	0F6B			     heads   ends
1 10617					     cseg	     ;
  10618	156B  E8 ED07		     dext:   call    docol
  10619	156E  037Er 152Dr		     dw	     tdup,sext
  10620	1572  0775r			     dw	     subb
  10621	1574  0289r			     dw	     exit
  10622
  10623				     ;	     FILE-POSITION  ( fileid --	ud ior )
  10624
  10625					     hdr     1,'FILE-POSITION'
1 10626					     cseg
1 10627	0F6B			     heads   segment public	     ;
1 10628	0F6B  0D			     db	     ??043A	     ;
1 10629	0F6C  46 49 4C 45 2D 50	4F+	     db	     'FILE-POSITION'	     ;
  10630	      53 49 54 49 4F 4E
1 10631	0F79  0F62			     dw	     lastl	     ;
1 10632	0F7B  1576r			     dw	     cfadr	     ;
1 10633	0F7D			     heads   ends
1 10634					     cseg	     ;
  10635	1576  5B		     fpos:   pop     bx
  10636	1577  2B C9			     sub     cx,cx
  10637	1579  8B D1			     mov     dx,cx
  10638	157B  B8 4201			     mov     ax,4201h
  10639	157E  CD 21			     int     21h
  10640	1580  50			     push    ax
  10641	1581  52			     push    dx
  10642	1582  E9 F685		     fpos1:  jmp     doserr2
  10643
  10644				     ;	     FILE-SIZE	( fileid -- ud ior )
  10645
  10646					     hdr     1,'FILE-SIZE'
1 10647					     cseg
1 10648	0F7D			     heads   segment public	     ;
1 10649	0F7D  09			     db	     ??043C	     ;
1 10650	0F7E  46 49 4C 45 2D 53	49+	     db	     'FILE-SIZE'	     ;
  10651	      5A 45
1 10652	0F87  0F6B			     dw	     lastl	     ;
1 10653	0F89  1585r			     dw	     cfadr	     ;
1 10654	0F8B			     heads   ends
1 10655					     cseg	     ;
  10656	1585  5B		     fsiz:   pop     bx
  10657	1586  2B C9			     sub     cx,cx
  10658	1588  8B D1			     mov     dx,cx
  10659	158A  B8 4201			     mov     ax,4201h
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 188
kernel.asm



  10660	158D  CD 21			     int     21h
  10661	158F  50			     push    ax
  10662	1590  52			     push    dx
  10663	1591  72 EF			     jc	     fpos1
  10664	1593  8B D1			     mov     dx,cx	     ; assume CX BX unchanged
  10665	1595  B8 4202			     mov     ax,4202h
  10666	1598  CD 21			     int     21h
  10667	159A  59			     pop     cx
  10668	159B  5F			     pop     di
  10669	159C  50			     push    ax
  10670	159D  52			     push    dx
  10671	159E  8B D7			     mov     dx,di
  10672	15A0  B8 4200			     mov     ax,4200h
  10673	15A3  CD 21			     int     21h
  10674	15A5  E9 F9D1			     jmp     zero
  10675
  10676				     ;	     RESIZE-FILE  ( ud fileid -- ior )
  10677
  10678					     hdr     1,'RESIZE-FILE'
1 10679					     cseg
1 10680	0F8B			     heads   segment public	     ;
1 10681	0F8B  0B			     db	     ??043E	     ;
1 10682	0F8C  52 45 53 49 5A 45	2D+	     db	     'RESIZE-FILE'	     ;
  10683	      46 49 4C 45
1 10684	0F97  0F7D			     dw	     lastl	     ;
1 10685	0F99  15A8r			     dw	     cfadr	     ;
1 10686	0F9B			     heads   ends
1 10687					     cseg	     ;
  10688	15A8  5B		     resizf: pop     bx
  10689	15A9  59			     pop     cx
  10690	15AA  5A			     pop     dx
  10691	15AB  B8 4200			     mov     ax,4200h
  10692	15AE  CD 21			     int     21h
  10693	15B0  72 06			     jc	     resizf2
  10694	15B2  2B C9			     sub     cx,cx	     ; truncate	file
  10695	15B4  B4 40			     mov     ah,40h	     ; assume BX unchanged
  10696	15B6  CD 21		     resizf1:int     21h
  10697	15B8  E9 F64F		     resizf2:jmp     doserr2
  10698
  10699				     ;	     REPOSITION-FILE  (	ud fileid -- ior )
  10700
  10701					     hdr     1,'REPOSITION-FILE'
1 10702					     cseg
1 10703	0F9B			     heads   segment public	     ;
1 10704	0F9B  0F			     db	     ??0440	     ;
1 10705	0F9C  52 45 50 4F 53 49	54+	     db	     'REPOSITION-FILE'		     ;
  10706	      49 4F 4E 2D 46 49	4C+
  10707	      45
1 10708	0FAB  0F8B			     dw	     lastl	     ;
1 10709	0FAD  15BBr			     dw	     cfadr	     ;
1 10710	0FAF			     heads   ends
1 10711					     cseg	     ;
  10712	15BB  5B		     reposf: pop     bx
  10713	15BC  59			     pop     cx
  10714	15BD  5A			     pop     dx
  10715	15BE  B8 4200			     mov     ax,4200h
  10716	15C1  EB F3			     jmp     resizf1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 189
kernel.asm



  10717
  10718				     ;	     READ-FILE	( c-addr u1 fileid -- u2 ior )
  10719
  10720					     hdr     1,'READ-FILE'
1 10721					     cseg
1 10722	0FAF			     heads   segment public	     ;
1 10723	0FAF  09			     db	     ??0442	     ;
1 10724	0FB0  52 45 41 44 2D 46	49+	     db	     'READ-FILE'	     ;
  10725	      4C 45
1 10726	0FB9  0F9B			     dw	     lastl	     ;
1 10727	0FBB  15C3r			     dw	     cfadr	     ;
1 10728	0FBD			     heads   ends
1 10729					     cseg	     ;
  10730	15C3  5B		     readf:  pop     bx
  10731	15C4  59			     pop     cx
  10732	15C5  5A			     pop     dx
  10733	15C6  1E			     push    ds
  10734	15C7  58		     readf1: pop     ax
  10735	15C8  8E D8			     mov     ds,ax
  10736	15CA  B4 3F			     mov     ah,3fh
  10737	15CC  CD 21		     readf2: int     21h
  10738	15CE  0E			     push    cs
  10739	15CF  1F			     pop     ds
  10740	15D0  50			     push    ax
  10741	15D1  E9 F636			     jmp     doserr2
  10742
  10743				     ;	     LREAD  ( seg offs u fileid	-- ior )
  10744
  10745					     hdr     1,'LREAD'
1 10746					     cseg
1 10747	0FBD			     heads   segment public	     ;
1 10748	0FBD  05			     db	     ??0444	     ;
1 10749	0FBE  4C 52 45 41 44		     db	     'LREAD'	     ;
1 10750	0FC3  0FAF			     dw	     lastl	     ;
1 10751	0FC5  15D4r			     dw	     cfadr	     ;
1 10752	0FC7			     heads   ends
1 10753					     cseg	     ;
  10754	15D4  5B		     lread:  pop     bx
  10755	15D5  59			     pop     cx
  10756	15D6  5A			     pop     dx
  10757	15D7  EB EE			     jmp     readf1
  10758
  10759				     ;	     WRITE-FILE	 ( c-addr u fileid -- ior )
  10760
  10761					     hdr     1,'WRITE-FILE'
1 10762					     cseg
1 10763	0FC7			     heads   segment public	     ;
1 10764	0FC7  0A			     db	     ??0446	     ;
1 10765	0FC8  57 52 49 54 45 2D	46+	     db	     'WRITE-FILE'	     ;
  10766	      49 4C 45
1 10767	0FD2  0FBD			     dw	     lastl	     ;
1 10768	0FD4  15D9r			     dw	     cfadr	     ;
1 10769	0FD6			     heads   ends
1 10770					     cseg	     ;
  10771	15D9  5B		     writf:  pop     bx
  10772	15DA  59			     pop     cx
  10773	15DB  5A			     pop     dx
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 190
kernel.asm



  10774	15DC  1E			     push    ds
  10775	15DD  58		     writf1: pop     ax
  10776	15DE  0B C9			     or	     cx,cx	     ; must trap CX=0
  10777	15E0  75 03			     jnz     writf2
  10778	15E2  E9 F994			     jmp     zero
  10779
  10780	15E5  8E D8		     writf2: mov     ds,ax
  10781	15E7  B4 40			     mov     ah,40h
  10782	15E9  CD 21			     int     21h
  10783	15EB  0E			     push    cs
  10784	15EC  1F			     pop     ds
  10785	15ED  72 04			     jc	     writf3
  10786	15EF  3B C1			     cmp     ax,cx	     ; assume CX unchanged
  10787	15F1  B0 FF			     mov     al,255
  10788	15F3  E9 F614		     writf3: jmp     doserr2
  10789
  10790				     ;	     LWRITE  ( seg offs	u fileid -- ior	)
  10791
  10792					     hdr     1,'LWRITE'
1 10793					     cseg
1 10794	0FD6			     heads   segment public	     ;
1 10795	0FD6  06			     db	     ??0448	     ;
1 10796	0FD7  4C 57 52 49 54 45		     db	     'LWRITE'		     ;
1 10797	0FDD  0FC7			     dw	     lastl	     ;
1 10798	0FDF  15F6r			     dw	     cfadr	     ;
1 10799	0FE1			     heads   ends
1 10800					     cseg	     ;
  10801	15F6  5B		     lwrit:  pop     bx
  10802	15F7  59			     pop     cx
  10803	15F8  5A			     pop     dx
  10804	15F9  EB E2			     jmp     writf1
  10805
  10806				     ;	     fh	 ( -- fid )		     0 value fh
  10807
  10808					     hdr     x,'FH'
1 10809					     cseg	     ;
  10810	15FB  E8 EDD4		     fh:     call    doval
  10811	15FE  ????			     dw	     ?
  10812
  10813				     ;	     READ-LINE	( addr u1 fid -- u2 n ior )
  10814				     ;				     to	fh over	swap fh	read-file ?dup if end
  10815				     ;				     2dup bounds ?do i c@ $1A of i rot - fh
  10816				     ;				     file-size drop fh reposition-file drop
  10817				     ;				     break (cr)	rot scan nip ?dup if i + >r
  10818				     ;				     over + r> swap - s>d fh file-position
  10819				     ;				     drop d+ fh	reposition-file	drop i swap -
  10820				     ;				     -1	0 unloop end loop nip dup 0<> negate 0
  10821
  10822					     hdr     1,'READ-LINE'
1 10823					     cseg
1 10824	0FE1			     heads   segment public	     ;
1 10825	0FE1  09			     db	     ??044C	     ;
1 10826	0FE2  52 45 41 44 2D 4C	49+	     db	     'READ-LINE'	     ;
  10827	      4E 45
1 10828	0FEB  0FD6			     dw	     lastl	     ;
1 10829	0FED  1600r			     dw	     cfadr	     ;
1 10830	0FEF			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 191
kernel.asm



1 10831					     cseg	     ;
  10832	1600  E8 EC72		     readl:  call    docol
  10833	1603  0F50r 15FBr		     dw	     pto,fh
  10834	1607  031Cr 0315r		     dw	     over,swap
  10835	160B  15FBr 15C3r 030Br		     dw	     fh,readf,qdup
  10836	1611  0A92r 1617r		     dw	     zbran,readl1
  10837	1615  0289r			     dw	     exit
  10838	1617  037Er 0AE6r	     readl1  dw	     tdup,bounds
  10839	161B  0AB4r 1680r		     dw	     xqdo,readl5
  10840	161F  0ACDr 03DEr	     readl2  dw	     ido,cat
  10841	1623  02A1r			     dw	     clit
  10842	1625  1A			     db	     ctlz
  10843	1626  0A86r 1640r		     dw	     pof,readl3
  10844	162A  0ACDr 0324r 0775r		     dw	     ido,rot,subb
  10845	1630  15FBr 1585r 02FEr		     dw	     fh,fsiz,drop
  10846	1636  15FBr 15BBr 02FEr		     dw	     fh,reposf,drop
  10847	163C  0AAEr 161Dr		     dw	     pleav,readl2-cw
  10848	1640  0F0Cr 0324r	     readl3  dw	     pcr,rot
  10849	1644  04D2r 0362r		     dw	     scan,nip
  10850	1648  030Br			     dw	     qdup
  10851	164A  0A92r 167Cr		     dw	     zbran,readl4
  10852	164E  0ACDr 076Dr 02C9r		     dw	     ido,plus,tor
  10853	1654  031Cr 076Dr		     dw	     over,plus
  10854	1658  02D2r 0315r 0775r		     dw	     fromr,swap,subb
  10855	165E  0742r			     dw	     stod	     ; buffer must be <	32K
  10856	1660  15FBr 1576r 02FEr		     dw	     fh,fpos,drop
  10857	1666  0780r			     dw	     dplus
  10858	1668  15FBr 15BBr 02FEr		     dw	     fh,reposf,drop
  10859	166E  0ACDr 0315r 0775r		     dw	     ido,swap,subb
  10860	1674  0F72r 0F79r		     dw	     true,zero
  10861	1678  0AA8r 0289r		     dw	     unloo,exit
  10862	167C  0A9Br 161Fr	     readl4  dw	     xloop,readl2
  10863	1680  0362r		     readl5  dw	     nip
  10864	1682  0304r 0632r		     dw	     dupp,zneq
  10865	1686  0749r 0F79r		     dw	     negat,zero
  10866	168A  0289r			     dw	     exit
  10867
  10868				     ;	     WRITE-LINE	 ( c-addr u fileid -- ior )
  10869				     ;				     dup >r write-file ?dup if rdrop end
  10870				     ;				     (cr) r> write-file
  10871
  10872					     hdr     1,'WRITE-LINE'
1 10873					     cseg
1 10874	0FEF			     heads   segment public	     ;
1 10875	0FEF  0A			     db	     ??044E	     ;
1 10876	0FF0  57 52 49 54 45 2D	4C+	     db	     'WRITE-LINE'	     ;
  10877	      49 4E 45
1 10878	0FFA  0FE1			     dw	     lastl	     ;
1 10879	0FFC  168Cr			     dw	     cfadr	     ;
1 10880	0FFE			     heads   ends
1 10881					     cseg	     ;
  10882	168C  E8 EBE6		     writl:  call    docol
  10883	168F  0304r 02C9r		     dw	     dupp,tor
  10884	1693  15D9r			     dw	     writf
  10885	1695  030Br			     dw	     qdup
  10886	1697  0A92r 169Fr		     dw	     zbran,writl1
  10887	169B  028Cr			     dw	     rdrop
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 192
kernel.asm



  10888	169D  0289r			     dw	     exit
  10889	169F  0F0Cr		     writl1  dw	     pcr
  10890	16A1  02D2r			     dw	     fromr
  10891	16A3  15D9r			     dw	     writf
  10892	16A5  0289r			     dw	     exit
  10893
  10894				     ;	     >FNAME  ( addr1 u -- addr2	)    -blanks max-path min zbuf @ pack
  10895				     ;					     0 affix zbuf 2@ swap zbuf 2!
  10896
  10897					     hdr     1,'>FNAME'
1 10898					     cseg
1 10899	0FFE			     heads   segment public	     ;
1 10900	0FFE  06			     db	     ??0450	     ;
1 10901	0FFF  3E 46 4E 41 4D 45		     db	     '>FNAME'		     ;
1 10902	1005  0FEF			     dw	     lastl	     ;
1 10903	1007  16A7r			     dw	     cfadr	     ;
1 10904	1009			     heads   ends
1 10905					     cseg	     ;
  10906	16A7  E8 EBCB		     tfnam:  call    docol
  10907	16AA  0515r			     dw	     dblan
  10908	16AC  14B3r 0684r		     dw	     maxp,min
  10909	16B0  0FD9r 03D2r		     dw	     zbuf,at
  10910	16B4  04AFr			     dw	     pack
  10911	16B6  0F79r 04C5r		     dw	     zero,affix	     ; trailing	null
  10912	16BA  0FD9r 03EEr		     dw	     zbuf,tat
  10913	16BE  0315r			     dw	     swap
  10914	16C0  0FD9r 03F7r		     dw	     zbuf,tstor
  10915	16C4  0289r			     dw	     exit
  10916
  10917					     cseg
  10918
  10919	16C6  53		     pascii: push    bx
  10920	16C7  50			     push    ax
  10921	16C8  E8 EBAA			     call    docol
  10922	16CB  16A7r 0798r		     dw	     tfnam,onep
  10923	16CF  0292r			     dw	     exit1
  10924	16D1  5A			     pop     dx	     ; addr
  10925	16D2  C3			     ret
  10926
  10927				     ;	     R/O  ( -- fam )		     aka 0 r/o
  10928
  10929					     hdr     1,'R/O',,,zero
1 10930					     cseg
1 10931	1009			     heads   segment public	     ;
1 10932	1009  83			     db	     ??0452	     ;
1 10933	100A  52 2F 4F			     db	     'R/O'	     ;
1 10934	100D  0FFE			     dw	     lastl	     ;
1 10935	100F  0F79r			     dw	     cfadr	     ;
1 10936	1011			     heads   ends
1 10937					     cseg	     ;
  10938				     rso     equ     zero
  10939
  10940				     ;	     W/O  ( -- fam )		     aka 1 w/o
  10941
  10942					     hdr     1,'W/O',,,one
1 10943					     cseg
1 10944	1011			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 193
kernel.asm



1 10945	1011  83			     db	     ??0454	     ;
1 10946	1012  57 2F 4F			     db	     'W/O'	     ;
1 10947	1015  1009			     dw	     lastl	     ;
1 10948	1017  0F7Fr			     dw	     cfadr	     ;
1 10949	1019			     heads   ends
1 10950					     cseg	     ;
  10951				     wso     equ     one
  10952
  10953				     ;	     R/W  ( -- fam )		     aka 2 r/w
  10954
  10955					     hdr     1,'R/W',,,two
1 10956					     cseg
1 10957	1019			     heads   segment public	     ;
1 10958	1019  83			     db	     ??0456	     ;
1 10959	101A  52 2F 57			     db	     'R/W'	     ;
1 10960	101D  1011			     dw	     lastl	     ;
1 10961	101F  0F83r			     dw	     cfadr	     ;
1 10962	1021			     heads   ends
1 10963					     cseg	     ;
  10964				     rsw     equ     two
  10965
  10966				     ;	     BIN  ( fam1 -- fam2 )	     aka noop bin immediate
  10967
  10968					     hdr     1,'BIN',1,,noop
1 10969					     cseg
1 10970	1021			     heads   segment public	     ;
1 10971	1021  C3			     db	     ??0458	     ;
1 10972	1022  42 49 4E			     db	     'BIN'	     ;
1 10973	1025  1019			     dw	     lastl	     ;
1 10974	1027  01BAr			     dw	     cfadr	     ;
1 10975	1029			     heads   ends
1 10976					     cseg	     ;
  10977				     binn    equ     next
  10978
  10979				     ;	     OPEN-FILE	( c-addr u fam -- fileid ior )
  10980
  10981					     hdr     1,'OPEN-FILE'
1 10982					     cseg
1 10983	1029			     heads   segment public	     ;
1 10984	1029  09			     db	     ??045A	     ;
1 10985	102A  4F 50 45 4E 2D 46	49+	     db	     'OPEN-FILE'	     ;
  10986	      4C 45
1 10987	1033  1021			     dw	     lastl	     ;
1 10988	1035  16D3r			     dw	     cfadr	     ;
1 10989	1037			     heads   ends
1 10990					     cseg	     ;
  10991	16D3  5A		     openf:  pop     dx
  10992	16D4  58			     pop     ax
  10993	16D5  5B			     pop     bx
  10994	16D6  52			     push    dx
  10995	16D7  E8 FFEC			     call    pascii
  10996	16DA  58		     openf1: pop     ax		     ; fam
  10997	16DB  B4 3D			     mov     ah,3dh
  10998	16DD  E9 FEEC			     jmp     readf2
  10999
  11000				     ;	     CREATE-FILE  ( c-addr u fam -- fileid ior )
  11001
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 194
kernel.asm



  11002					     hdr     1,'CREATE-FILE'
1 11003					     cseg
1 11004	1037			     heads   segment public	     ;
1 11005	1037  0B			     db	     ??045C	     ;
1 11006	1038  43 52 45 41 54 45	2D+	     db	     'CREATE-FILE'	     ;
  11007	      46 49 4C 45
1 11008	1043  1029			     dw	     lastl	     ;
1 11009	1045  16E0r			     dw	     cfadr	     ;
1 11010	1047			     heads   ends
1 11011					     cseg	     ;
  11012	16E0  5A		     creatf: pop     dx
  11013	16E1  58			     pop     ax
  11014	16E2  5B			     pop     bx
  11015	16E3  52			     push    dx		     ; fam (or dummy fileid if fail)
  11016	16E4  E8 FFDF			     call    pascii
  11017	16E7  52			     push    dx		     ; asciiz
  11018	16E8  2B C9			     sub     cx,cx	     ; normal attribute
  11019	16EA  B4 3C			     mov     ah,3ch
  11020	16EC  CD 21			     int     21h
  11021	16EE  73 04			     jnc     creatf1
  11022	16F0  5A			     pop     dx		     ; discard
  11023	16F1  E9 F516			     jmp     doserr2	     ; failed
  11024
  11025	16F4  8B D8		     creatf1:mov     bx,ax	     ; close and re-open file using fam
  11026	16F6  B4 3E			     mov     ah,3eh
  11027	16F8  CD 21			     int     21h
  11028	16FA  5A			     pop     dx		     ; asciiz
  11029	16FB  EB DD			     jmp     openf1
  11030
  11031				     ;	     CLOSE-FILE	 ( fileid -- ior )
  11032
  11033					     hdr     1,'CLOSE-FILE'
1 11034					     cseg
1 11035	1047			     heads   segment public	     ;
1 11036	1047  0A			     db	     ??045E	     ;
1 11037	1048  43 4C 4F 53 45 2D	46+	     db	     'CLOSE-FILE'	     ;
  11038	      49 4C 45
1 11039	1052  1037			     dw	     lastl	     ;
1 11040	1054  16FDr			     dw	     cfadr	     ;
1 11041	1056			     heads   ends
1 11042					     cseg	     ;
  11043	16FD  5B		     closf:  pop     bx
  11044	16FE  B4 3E			     mov     ah,3eh
  11045	1700  E9 FEB3			     jmp     resizf1
  11046
  11047				     ;	     FLUSH-FILE	 ( fileid -- ior )
  11048
  11049					     hdr     1,'FLUSH-FILE'
1 11050					     cseg
1 11051	1056			     heads   segment public	     ;
1 11052	1056  0A			     db	     ??0460	     ;
1 11053	1057  46 4C 55 53 48 2D	46+	     db	     'FLUSH-FILE'	     ;
  11054	      49 4C 45
1 11055	1061  1047			     dw	     lastl	     ;
1 11056	1063  1703r			     dw	     cfadr	     ;
1 11057	1065			     heads   ends
1 11058					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 195
kernel.asm



  11059	1703  5B		     flusf:  pop     bx
  11060	1704  B4 45			     mov     ah,45h
  11061	1706  CD 21			     int     21h
  11062	1708  72 03			     jc	     flusf1
  11063	170A  50			     push    ax
  11064	170B  EB F0			     jmp     closf
  11065
  11066	170D  E9 F4FA		     flusf1: jmp     doserr2
  11067
  11068				     ;	     FILE-STATUS  ( c-addr u --	x ior )	     get file attributes
  11069
  11070					     hdr     1,'FILE-STATUS'
1 11071					     cseg
1 11072	1065			     heads   segment public	     ;
1 11073	1065  0B			     db	     ??0462	     ;
1 11074	1066  46 49 4C 45 2D 53	54+	     db	     'FILE-STATUS'	     ;
  11075	      41 54 55 53
1 11076	1071  1056			     dw	     lastl	     ;
1 11077	1073  1710r			     dw	     cfadr	     ;
1 11078	1075			     heads   ends
1 11079					     cseg	     ;
  11080	1710  58		     statf:  pop     ax
  11081	1711  5B			     pop     bx
  11082	1712  E8 FFB1			     call    pascii
  11083	1715  B8 4300			     mov     ax,4300h
  11084	1718  CD 21			     int     21h
  11085	171A  51			     push    cx
  11086	171B  E9 F4EC			     jmp     doserr2
  11087
  11088				     ;	     DELETE-FILE  ( c-addr u --	ior )
  11089
  11090					     hdr     1,'DELETE-FILE'
1 11091					     cseg
1 11092	1075			     heads   segment public	     ;
1 11093	1075  0B			     db	     ??0464	     ;
1 11094	1076  44 45 4C 45 54 45	2D+	     db	     'DELETE-FILE'	     ;
  11095	      46 49 4C 45
1 11096	1081  1065			     dw	     lastl	     ;
1 11097	1083  171Er			     dw	     cfadr	     ;
1 11098	1085			     heads   ends
1 11099					     cseg	     ;
  11100	171E  58		     delf:   pop     ax
  11101	171F  5B			     pop     bx
  11102	1720  E8 FFA3			     call    pascii
  11103	1723  B4 41			     mov     ah,41h
  11104	1725  E9 FE8E			     jmp     resizf1
  11105
  11106				     ;	     RENAME-FILE  ( c-addr1 u1 c-addr2 u2 -- ior )
  11107
  11108					     hdr     1,'RENAME-FILE'
1 11109					     cseg
1 11110	1085			     heads   segment public	     ;
1 11111	1085  0B			     db	     ??0466	     ;
1 11112	1086  52 45 4E 41 4D 45	2D+	     db	     'RENAME-FILE'	     ;
  11113	      46 49 4C 45
1 11114	1091  1075			     dw	     lastl	     ;
1 11115	1093  1728r			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 196
kernel.asm



1 11116	1095			     heads   ends
1 11117					     cseg	     ;
  11118	1728  58		     renf:   pop     ax
  11119	1729  5B			     pop     bx
  11120	172A  E8 FF99			     call    pascii
  11121	172D  58			     pop     ax
  11122	172E  5B			     pop     bx
  11123	172F  52			     push    dx
  11124	1730  E8 FF93			     call    pascii
  11125	1733  5F			     pop     di
  11126	1734  8C D8			     mov     ax,ds
  11127	1736  8E C0			     mov     es,ax
  11128	1738  B4 56			     mov     ah,56h
  11129	173A  CD 21			     int     21h
  11130	173C  E9 F4CB			     jmp     doserr2
  11131
  11132				     ; screen file selector
  11133
  11134					     aseg
  11135
  11136	BEAE			     fdt:    gfdb		     ; fdb table
2 11137	BEAE  F76D			     dw	     ??0468
2 11138	BEB0  F7C5			     dw	     ??0468
2 11139	BEB2  F81D			     dw	     ??0468
2 11140	BEB4  F875			     dw	     ??0468
2 11141	BEB6  F8CD			     dw	     ??0468
2 11142	BEB8  F925			     dw	     ??0468
  11143
  11144				     ;	     sfp  ( -- a )
  11145
  11146					     hdr     x,'SFP',,1
1 11147					     cseg	     ;
1 11148					     aseg
  11149	BEBA  E8 42FD		     sfp:    call    docre
  11150	BEBD  BEAEr		     sfp1    dw	     fdt	     ; current
  11151	BEBF  BEB0r		     sfp2    dw	     fdt+cw	     ; swap-file
  11152
  11153				     ;	     SWAP-FILE	( -- )	     screen? if	scr @ scr# ! then sfp 2@
  11154				     ;				     swap sfp 2! scr# @	scr ! empty-buffers
  11155
  11156					     hdr     1,'SWAP-FILE',,1
1 11157					     cseg
1 11158					     aseg
1 11159	1095			     heads   segment public	     ;
1 11160	1095  09			     db	     ??046B	     ;
1 11161	1096  53 57 41 50 2D 46	49+	     db	     'SWAP-FILE'	     ;
  11162	      4C 45
1 11163	109F  1085			     dw	     lastl	     ;
1 11164	10A1  BEC1r			     dw	     cfadr	     ;
1 11165	10A3			     heads   ends
1 11166					     cseg	     ;
1 11167					     aseg
  11168	BEC1  E8 43B1		     swapf:  call    docol
  11169	BEC4  BF35r			     dw	     scrnq
  11170	BEC6  0A92r BED2r		     dw	     zbran,swapf1
  11171	BECA  B50Fr 03D2r		     dw	     scr,at
  11172	BECE  BF15r 03D8r		     dw	     snum,store
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 197
kernel.asm



  11173	BED2  BEBAr 03EEr	     swapf1  dw	     sfp,tat
  11174	BED6  0315r			     dw	     swap
  11175	BED8  BEBAr 03F7r		     dw	     sfp,tstor
  11176	BEDC  BF15r 03D2r		     dw	     snum,at
  11177	BEE0  B50Fr 03D8r		     dw	     scr,store
  11178	BEE4  BF6Cr			     dw	     mtbuf
  11179	BEE6  0289r			     dw	     exit
  11180
  11181				     ;	     FDB  ( -- addr )	     (fdt) (nfd) 0 do dup @ @ 0= if unloop end
  11182				     ;				     cell+ loop	abort" too many	files"
  11183
  11184					     hdr     1,'FDB',,1	     ; get a free slot
1 11185					     cseg
1 11186					     aseg
1 11187	10A3			     heads   segment public	     ;
1 11188	10A3  03			     db	     ??046D	     ;
1 11189	10A4  46 44 42			     db	     'FDB'	     ;
1 11190	10A7  1095			     dw	     lastl	     ;
1 11191	10A9  BEE8r			     dw	     cfadr	     ;
1 11192	10AB			     heads   ends
1 11193					     cseg	     ;
1 11194					     aseg
  11195	BEE8  BB BEAEr		     fdb:    mov     bx,offset fdt
  11196	BEEB  B9 0006			     mov     cx,nfd
  11197	BEEE			     fdb1:
  11198				     ;	     cmp     bx,sfp2	     ; skip swap-file
  11199				     ;	     jz	     fdb2
  11200	BEEE  8B 3F			     mov     di,[bx]
  11201	BEF0  83 3D 00			     cmp     word ptr [di],0
  11202	BEF3  74 19			     jz	     fdb3
  11203	BEF5  43		     fdb2:   inc     bx
  11204	BEF6  43			     inc     bx
  11205	BEF7  E2 F5			     loop    fdb1
  11206	BEF9  53			     push    bx		     ; non-zero
  11207	BEFA  E8 4378			     call    docol
  11208	BEFD  1271r			     dw	     pabq
  11209					     dcs     'too many files'
1 11210	BEFF  0E			     db	     ??046F	     ;
1 11211	BF00  74 6F 6F 20 6D 61	6E+  ??0470  db	     'too many files'
  11212	      79 20 66 69 6C 65	73
  11213
  11214	BF0E  53		     fdb3:   push    bx
  11215					     nextt
1 11216	BF0F  AD			     lodsw
1 11217	BF10  FF E0			     jmp     ax
  11218
  11219				     ; file descriptor fields
  11220				     ;
  11221				     ;	     FD	     cell	     status 0=closed
  11222				     ;	     FID     cell	     file handle
  11223				     ;	     BLKS    cell	     file size (blocks)
  11224				     ;	     SCR#    cell	     current SCR#
  11225				     ;	     FNB     'pfsiz' bytes   file name
  11226
  11227				     ;	     fnb  ( -- addr )
  11228
  11229					     hdr     x,'FNB',,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 198
kernel.asm



1 11230					     cseg	     ;
1 11231					     aseg
  11232	BF12  B0 08		     fnb:    mov     al,cw*4	     ; file name field
  11233					     ignore2
1 11234	BF14  A9			     db	     0a9h    ;
  11235
  11236				     ;	     scr#  ( --	addr )
  11237
  11238					     hdr     x,'SCR#',,1
1 11239					     cseg	     ;
1 11240					     aseg
  11241	BF15  B0 06		     snum:   mov     al,cw*3	     ; current SCR# field
  11242					     ignore2
1 11243	BF17  A9			     db	     0a9h    ;
  11244
  11245				     ;	     blks  ( --	addr )
  11246
  11247					     hdr     x,'BLKS',,1
1 11248					     cseg	     ;
1 11249					     aseg
  11250	BF18  B0 04		     blks:   mov     al,cw*2	     ; file size field
  11251					     ignore2
1 11252	BF1A  A9			     db	     0a9h    ;
  11253
  11254				     ;	     fid  ( -- addr )
  11255
  11256					     hdr     x,'FID',,1
1 11257					     cseg	     ;
1 11258					     aseg
  11259	BF1B  B0 02		     fid:    mov     al,cw*1	     ; file handle field
  11260					     ignore2
1 11261	BF1D  A9			     db	     0a9h    ;
  11262
  11263				     ;	     fd	 ( -- addr )
  11264
  11265					     hdr     x,'FD',,1
1 11266					     cseg	     ;
1 11267					     aseg
  11268	BF1E  B0 00		     fd:     mov     al,0	     ; file descriptor field
  11269	BF20  2A E4			     sub     ah,ah
  11270	BF22  8B 3E BEBDr		     mov     di,sfp1
  11271	BF26  03 05			     add     ax,[di]
  11272	BF28  E9 428E			     jmp     apush
  11273
  11274				     ;	     buf     ( -- addr )
  11275
  11276					     hdr     x,'BUF',,1
1 11277					     cseg	     ;
1 11278					     aseg
  11279	BF2B  E8 44A4		     buf:    call    docon	     ; file buffer address
  11280	BF2E  F97D			     dw	     sfb
  11281
  11282				     ;	     blk#  ( --	addr )
  11283
  11284					     hdr     x,'BLK#',,1
1 11285					     cseg	     ;
1 11286					     aseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 199
kernel.asm



  11287	BF30  E8 4287		     bnum:   call    docre	     ; block#, update flag
  11288	BF33  ????		     bnum1   dw	     ?
  11289
  11290				     ;	     SCREEN?  (	-- flag	)    fd	@ 0<
  11291
  11292					     hdr     1,'SCREEN?',,1
1 11293					     cseg
1 11294					     aseg
1 11295	10AB			     heads   segment public	     ;
1 11296	10AB  07			     db	     ??047F	     ;
1 11297	10AC  53 43 52 45 45 4E	3F	     db	     'SCREEN?'		     ;
1 11298	10B3  10A3			     dw	     lastl	     ;
1 11299	10B5  BF35r			     dw	     cfadr	     ;
1 11300	10B7			     heads   ends
1 11301					     cseg	     ;
1 11302					     aseg
  11303	BF35  E8 433D		     scrnq:  call    docol
  11304	BF38  BF1Er 03D2r		     dw	     fd,at
  11305	BF3C  0654r			     dw	     zless
  11306	BF3E  0289r			     dw	     exit
  11307
  11308				     ;	     LOADFILE  ( -- c-addr u )	fnb count
  11309
  11310					     hdr     1,'LOADFILE',,1
1 11311					     cseg
1 11312					     aseg
1 11313	10B7			     heads   segment public	     ;
1 11314	10B7  08			     db	     ??0481	     ;
1 11315	10B8  4C 4F 41 44 46 49	4C+	     db	     'LOADFILE'		     ;
  11316	      45
1 11317	10C0  10AB			     dw	     lastl	     ;
1 11318	10C2  BF40r			     dw	     cfadr	     ;
1 11319	10C4			     heads   ends
1 11320					     cseg	     ;
1 11321					     aseg
  11322	BF40  E8 4332		     loadf:  call    docol
  11323	BF43  BF12r 04A5r		     dw	     fnb,count
  11324	BF47  0289r			     dw	     exit
  11325
  11326				     ;	     ?open  ( -- )	     screen? 0=	abort" no file open"
  11327
  11328					     hdr     x,'?OPEN',,1
1 11329					     cseg	     ;
1 11330					     aseg
  11331	BF49  E8 4329		     qopen:  call    docol
  11332	BF4C  BF35r			     dw	     scrnq
  11333	BF4E  0628r			     dw	     zequ
  11334	BF50  1271r			     dw	     pabq
  11335					     dcs     'no file open'
1 11336	BF52  0C			     db	     ??0485	     ;
1 11337	BF53  6E 6F 20 66 69 6C	65+  ??0486  db	     'no file open'
  11338	      20 6F 70 65 6E
  11339	BF5F  0289r			     dw	     exit
  11340
  11341				     ;	     #SCREENS  ( -- +n )     ?open blks	@
  11342
  11343					     hdr     1,'#SCREENS',,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 200
kernel.asm



1 11344					     cseg
1 11345					     aseg
1 11346	10C4			     heads   segment public	     ;
1 11347	10C4  08			     db	     ??0487	     ;
1 11348	10C5  23 53 43 52 45 45	4E+	     db	     '#SCREENS'		     ;
  11349	      53
1 11350	10CD  10B7			     dw	     lastl	     ;
1 11351	10CF  BF61r			     dw	     cfadr	     ;
1 11352	10D1			     heads   ends
1 11353					     cseg	     ;
1 11354					     aseg
  11355	BF61  E8 4311		     nscr:   call    docol
  11356	BF64  BF49r			     dw	     qopen
  11357	BF66  BF18r 03D2r		     dw	     blks,at
  11358	BF6A  0289r			     dw	     exit
  11359
  11360				     ;	     EMPTY-BUFFERS  ( -- )   $7fff blk#	!
  11361
  11362					     hdr     1,'EMPTY-BUFFERS',,1
1 11363					     cseg
1 11364					     aseg
1 11365	10D1			     heads   segment public	     ;
1 11366	10D1  0D			     db	     ??0489	     ;
1 11367	10D2  45 4D 50 54 59 2D	42+	     db	     'EMPTY-BUFFERS'	     ;
  11368	      55 46 46 45 52 53
1 11369	10DF  10C4			     dw	     lastl	     ;
1 11370	10E1  BF6Cr			     dw	     cfadr	     ;
1 11371	10E3			     heads   ends
1 11372					     cseg	     ;
1 11373					     aseg
  11374	BF6C  C7 06 BF33r 7FFF	     mtbuf:  mov     bnum1,7fffh
  11375					     nextt
1 11376	BF72  AD			     lodsw
1 11377	BF73  FF E0			     jmp     ax
  11378
  11379				     ;	     UPDATE  ( -- )	     ?open blk#	@ $8000	or blk#	!
  11380
  11381					     hdr     1,'UPDATE',,1
1 11382					     cseg
1 11383					     aseg
1 11384	10E3			     heads   segment public	     ;
1 11385	10E3  06			     db	     ??048B	     ;
1 11386	10E4  55 50 44 41 54 45		     db	     'UPDATE'		     ;
1 11387	10EA  10D1			     dw	     lastl	     ;
1 11388	10EC  BF75r			     dw	     cfadr	     ;
1 11389	10EE			     heads   ends
1 11390					     cseg	     ;
1 11391					     aseg
  11392	BF75  E8 42FD		     update: call    docol
  11393	BF78  BF49r			     dw	     qopen
  11394	BF7A  0292r			     dw	     exit1
  11395	BF7C  81 0E BF33r 8000		     or	     bnum1,8000h
  11396					     nextt
1 11397	BF82  AD			     lodsw
1 11398	BF83  FF E0			     jmp     ax
  11399
  11400				     ;	     blkerr  ( flag -- )     abort" block r/w error"
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 201
kernel.asm



  11401
  11402					     hdr     x,'BLKERR',,1
1 11403					     cseg	     ;
1 11404					     aseg
  11405	BF85  E8 42ED		     blkerr: call    docol
  11406	BF88  1271r			     dw	     pabq
  11407					     dcs     'block r/w	error'
1 11408	BF8A  0F			     db	     ??048F	     ;
1 11409	BF8B  62 6C 6F 63 6B 20	72+  ??0490  db	     'block r/w	error'
  11410	      2F 77 20 65 72 72	6F+
  11411	      72
  11412	BF9A  0289r			     dw	     exit
  11413
  11414				     ;	     blk-rw  ( +n mode -- )  >r	b/buf um* fid @	reposition-file	blkerr
  11415				     ;				     buf b/buf fid @ r>	if write-file blkerr
  11416				     ;				     fid @ flush-file else read-file blkerr
  11417				     ;				     b/buf < then blkerr
  11418
  11419					     hdr     x,'BLK-RW',,1
1 11420					     cseg	     ;
1 11421					     aseg
  11422	BF9C  E8 42D6		     blkrw:  call    docol
  11423	BF9F  02C9r			     dw	     tor
  11424	BFA1  B4E3r 07B4r		     dw	     bbuf,umstr
  11425	BFA5  BF1Br 03D2r		     dw	     fid,at
  11426	BFA9  15BBr			     dw	     reposf
  11427	BFAB  BF85r			     dw	     blkerr
  11428	BFAD  BF2Br B4E3r		     dw	     buf,bbuf
  11429	BFB1  BF1Br 03D2r		     dw	     fid,at
  11430	BFB5  02D2r			     dw	     fromr
  11431	BFB7  0A92r BFC9r		     dw	     zbran,blkrw1
  11432	BFBB  15D9r			     dw	     writf
  11433	BFBD  BF85r			     dw	     blkerr
  11434	BFBF  BF1Br 03D2r		     dw	     fid,at
  11435	BFC3  1703r			     dw	     flusf	     ; flush CP/M 3 buffers
  11436	BFC5  0A8Dr BFD1r		     dw	     bran,blkrw2
  11437	BFC9  15C3r		     blkrw1  dw	     readf
  11438	BFCB  BF85r			     dw	     blkerr
  11439	BFCD  B4E3r 0668r		     dw	     bbuf,less
  11440	BFD1  BF85r		     blkrw2  dw	     blkerr
  11441	BFD3  0289r			     dw	     exit
  11442
  11443				     ;	     ?blk  ( +n	-- +n )	     dup #screens u< not
  11444				     ;				     abort" block out of range"
  11445
  11446					     hdr     x,'?BLK',,1
1 11447					     cseg	     ;
1 11448					     aseg
  11449	BFD5  E8 429D		     qblk:   call    docol
  11450	BFD8  0304r BF61r		     dw	     dupp,nscr
  11451	BFDC  0670r 0628r		     dw	     uless,nott	     ; block in	range?
  11452	BFE0  1271r			     dw	     pabq
  11453					     dcs     'block out	of range'
1 11454	BFE2  12			     db	     ??0495	     ;
1 11455	BFE3  62 6C 6F 63 6B 20	6F+  ??0496  db	     'block out	of range'
  11456	      75 74 20 6F 66 20	72+
  11457	      61 6E 67 65
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 202
kernel.asm



  11458	BFF5  0289r			     dw	     exit
  11459
  11460				     ;	     SAVE-BUFFERS  ( --	)    ?open blk#	@ 0< if	blk# @ $7fff and
  11461				     ;				     dup blk# !	?blk 1 blk-rw then
  11462
  11463					     hdr     1,'SAVE-BUFFERS',,1
1 11464					     cseg
1 11465					     aseg
1 11466	10EE			     heads   segment public	     ;
1 11467	10EE  0C			     db	     ??0497	     ;
1 11468	10EF  53 41 56 45 2D 42	55+	     db	     'SAVE-BUFFERS'	     ;
  11469	      46 46 45 52 53
1 11470	10FB  10E3			     dw	     lastl	     ;
1 11471	10FD  BFF7r			     dw	     cfadr	     ;
1 11472	10FF			     heads   ends
1 11473					     cseg	     ;
1 11474					     aseg
  11475	BFF7  E8 427B		     savbuf: call    docol
  11476	BFFA  BF49r			     dw	     qopen
  11477	BFFC  BF30r 03D2r		     dw	     bnum,at
  11478	C000  0654r			     dw	     zless
  11479	C002  0A92r C01Cr		     dw	     zbran,savbuf1
  11480	C006  BF30r 03D2r		     dw	     bnum,at
  11481	C00A  02A8r 7FFF		     dw	     lit,7fffh
  11482	C00E  0723r			     dw	     andd
  11483	C010  0304r			     dw	     dupp
  11484	C012  BF30r 03D8r		     dw	     bnum,store
  11485	C016  BFD5r			     dw	     qblk	     ; block in	range?
  11486	C018  0F7Fr BF9Cr		     dw	     one,blkrw
  11487	C01C  0289r		     savbuf1 dw	     exit
  11488
  11489				     ;	     FLUSH  ( -- )	     save-buffers empty-buffers
  11490
  11491					     hdr     1,'FLUSH',,1
1 11492					     cseg
1 11493					     aseg
1 11494	10FF			     heads   segment public	     ;
1 11495	10FF  05			     db	     ??0499	     ;
1 11496	1100  46 4C 55 53 48		     db	     'FLUSH'	     ;
1 11497	1105  10EE			     dw	     lastl	     ;
1 11498	1107  C01Er			     dw	     cfadr	     ;
1 11499	1109			     heads   ends
1 11500					     cseg	     ;
1 11501					     aseg
  11502	C01E  E8 4254		     flush:  call    docol
  11503	C021  BFF7r BF6Cr		     dw	     savbuf,mtbuf
  11504	C025  0289r			     dw	     exit
  11505
  11506				     ;	     BUFFER  ( +n -- addr )  save-buffers ?blk blk# ! buf
  11507
  11508					     hdr     1,'BUFFER',,1
1 11509					     cseg
1 11510					     aseg
1 11511	1109			     heads   segment public	     ;
1 11512	1109  06			     db	     ??049B	     ;
1 11513	110A  42 55 46 46 45 52		     db	     'BUFFER'		     ;
1 11514	1110  10FF			     dw	     lastl	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 203
kernel.asm



1 11515	1112  C027r			     dw	     cfadr	     ;
1 11516	1114			     heads   ends
1 11517					     cseg	     ;
1 11518					     aseg
  11519	C027  E8 424B		     buffer: call    docol
  11520	C02A  BFF7r			     dw	     savbuf
  11521	C02C  BFD5r			     dw	     qblk
  11522	C02E  BF30r 03D8r		     dw	     bnum,store
  11523	C032  BF2Br			     dw	     buf
  11524	C034  0289r			     dw	     exit
  11525
  11526				     ;	     BLOCK  ( +n -- addr )   ?open blk#	@ $7fff	and over - if dup
  11527				     ;				     buffer drop 0 blk-rw else drop then buf
  11528
  11529					     hdr     1,'BLOCK',,1
1 11530					     cseg
1 11531					     aseg
1 11532	1114			     heads   segment public	     ;
1 11533	1114  05			     db	     ??049D	     ;
1 11534	1115  42 4C 4F 43 4B		     db	     'BLOCK'	     ;
1 11535	111A  1109			     dw	     lastl	     ;
1 11536	111C  C036r			     dw	     cfadr	     ;
1 11537	111E			     heads   ends
1 11538					     cseg	     ;
1 11539					     aseg
  11540	C036  E8 423C		     block:  call    docol
  11541	C039  BF49r			     dw	     qopen
  11542	C03B  BF30r 03D2r		     dw	     bnum,at
  11543	C03F  02A8r 7FFF		     dw	     lit,7fffh
  11544	C043  0723r 031Cr 0775r		     dw	     andd,over,subb
  11545	C049  0A92r C05Br		     dw	     zbran,block1
  11546	C04D  0304r C027r 02FEr		     dw	     dupp,buffer,drop
  11547	C053  0F79r BF9Cr		     dw	     zero,blkrw
  11548	C057  0A8Dr C05Dr		     dw	     bran,block2
  11549	C05B  02FEr		     block1  dw	     drop
  11550	C05D  BF2Br		     block2  dw	     buf
  11551	C05F  0289r			     dw	     exit
  11552
  11553				     ;	     -->  ( -- )	     blk @ 0= abort" loading only" (refill) drop
  11554				     ;				     ;immediate
  11555
  11556					     hdr     1,'-->',1,1
1 11557					     cseg
1 11558					     aseg
1 11559	111E			     heads   segment public	     ;
1 11560	111E  43			     db	     ??049F	     ;
1 11561	111F  2D 2D 3E			     db	     '-->'	     ;
1 11562	1122  1114			     dw	     lastl	     ;
1 11563	1124  C061r			     dw	     cfadr	     ;
1 11564	1126			     heads   ends
1 11565					     cseg	     ;
1 11566					     aseg
  11567	C061  E8 4211		     arrow:  call    docol
  11568	C064  B4F9r 03D2r		     dw	     blk,at
  11569	C068  0628r			     dw	     zequ
  11570	C06A  1271r			     dw	     pabq
  11571					     dcs     'loading only'
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 204
kernel.asm



1 11572	C06C  0C			     db	     ??04A1	     ;
1 11573	C06D  6C 6F 61 64 69 6E	67+  ??04A2  db	     'loading only'
  11574	      20 6F 6E 6C 79
  11575	C079  B9D6r 02FEr		     dw	     prefil,drop
  11576	C07D  0289r			     dw	     exit
  11577
  11578				     ;	     (thru)  ( +n1 +n2 -- )  1+	swap ?do i block b/buf i (eval)	loop
  11579
  11580					     hdr     x,'(THRU)',,1
1 11581					     cseg	     ;
1 11582					     aseg
  11583	C07F  E8 41F3		     pthru:  call    docol
  11584	C082  0798r 0315r		     dw	     onep,swap
  11585	C086  0AB4r C098r		     dw	     xqdo,pthru2
  11586	C08A  0ACDr C036r	     pthru1  dw	     ido,block
  11587	C08E  B4E3r			     dw	     bbuf
  11588	C090  0ACDr B987r		     dw	     ido,peval
  11589	C094  0A9Br C08Ar		     dw	     xloop,pthru1
  11590	C098  0289r		     pthru2  dw	     exit
  11591
  11592				     ;	     LOAD  ( +n	-- )	     dup thru
  11593
  11594					     hdr     1,'LOAD',,1
1 11595					     cseg
1 11596					     aseg
1 11597	1126			     heads   segment public	     ;
1 11598	1126  04			     db	     ??04A5	     ;
1 11599	1127  4C 4F 41 44		     db	     'LOAD'	     ;
1 11600	112B  111E			     dw	     lastl	     ;
1 11601	112D  C09Ar			     dw	     cfadr	     ;
1 11602	112F			     heads   ends
1 11603					     cseg	     ;
1 11604					     aseg
  11605	C09A  58		     load:   pop     ax
  11606	C09B  50			     push    ax
  11607	C09C  50			     push    ax
  11608				     ;	     jmp     thru
  11609
  11610				     ;	     THRU  ( +n1 +n2 --	)    (thru) ?block
  11611
  11612					     hdr     1,'THRU',,1
1 11613					     cseg
1 11614					     aseg
1 11615	112F			     heads   segment public	     ;
1 11616	112F  04			     db	     ??04A7	     ;
1 11617	1130  54 48 52 55		     db	     'THRU'	     ;
1 11618	1134  1126			     dw	     lastl	     ;
1 11619	1136  C09Dr			     dw	     cfadr	     ;
1 11620	1138			     heads   ends
1 11621					     cseg	     ;
1 11622					     aseg
  11623	C09D  E8 41D5		     thru:   call    docol
  11624	C0A0  C07Fr			     dw	     pthru
  11625	C0A2  B9B8r			     dw	     qblock
  11626	C0A4  0289r			     dw	     exit
  11627
  11628				     ;	     (fbk)  ( +n -- )	     #screens 2dup u< if drop dup then dup b/buf
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 205
kernel.asm



  11629				     ;				     um* fid @ resize-file throw over blks ! ?do
  11630				     ;				     i buffer b/buf blank update save-buffers loop
  11631
  11632					     hdr     x,'(FBK)',,1
1 11633					     cseg	     ;
1 11634					     aseg
  11635	C0A6  E8 41CC		     pfbk:   call    docol
  11636	C0A9  BF61r			     dw	     nscr	     ; tests if	file open
  11637	C0AB  037Er 0670r		     dw	     tdup,uless
  11638	C0AF  0A92r C0B7r		     dw	     zbran,pfbk1
  11639	C0B3  02FEr 0304r		     dw	     drop,dupp
  11640	C0B7  0304r		     pfbk1   dw	     dupp
  11641	C0B9  B4E3r 07B4r		     dw	     bbuf,umstr
  11642	C0BD  BF1Br 03D2r		     dw	     fid,at
  11643	C0C1  15A8r 1219r		     dw	     resizf,throw
  11644	C0C5  031Cr		     pfbk2   dw	     over
  11645	C0C7  BF18r 03D8r		     dw	     blks,store	     ; update max block
  11646	C0CB  0AB4r C0DFr		     dw	     xqdo,pfbk4
  11647	C0CF  0ACDr C027r	     pfbk3   dw	     ido,buffer
  11648	C0D3  B4E3r 0463r		     dw	     bbuf,blank
  11649	C0D7  BF75r BFF7r		     dw	     update,savbuf
  11650	C0DB  0A9Br C0CFr		     dw	     xloop,pfbk3
  11651	C0DF  0289r		     pfbk4   dw	     exit
  11652
  11653				     ;	     FILEBLOCKS	 ( +n -- )   ['] (fbk) catch abort" can't resize file"
  11654
  11655					     hdr     1,'FILEBLOCKS',,1
1 11656					     cseg
1 11657					     aseg
1 11658	1138			     heads   segment public	     ;
1 11659	1138  0A			     db	     ??04AB	     ;
1 11660	1139  46 49 4C 45 42 4C	4F+	     db	     'FILEBLOCKS'	     ;
  11661	      43 4B 53
1 11662	1143  112F			     dw	     lastl	     ;
1 11663	1145  C0E1r			     dw	     cfadr	     ;
1 11664	1147			     heads   ends
1 11665					     cseg	     ;
1 11666					     aseg
  11667	C0E1  E8 4191		     fbloc:  call    docol
  11668	C0E4  02A8r C0A6r		     dw	     lit,pfbk
  11669	C0E8  124Ar			     dw	     catch
  11670	C0EA  1271r			     dw	     pabq
  11671					     dcs     "can't resize file"
1 11672	C0EC  11			     db	     ??04AD	     ;
1 11673	C0ED  63 61 6E 27 74 20	72+  ??04AE  db	     "can't resize file"
  11674	      65 73 69 7A 65 20	66+
  11675	      69 6C 65
  11676	C0FE  0289r			     dw	     exit
  11677
  11678				     ;	     (close)  (	-- )	     fd	@ if fid @ close-file drop then
  11679				     ;				     fd	[ 4 cells 1+ ] literal erase
  11680
  11681					     hdr     x,'(CLOSE)',,1
1 11682					     cseg	     ;
1 11683					     aseg
  11684	C100  E8 4172		     pclos:  call    docol
  11685	C103  BF1Er 03D2r		     dw	     fd,at	     ; screen or text
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 206
kernel.asm



  11686	C107  0A92r C113r		     dw	     zbran,pclos1
  11687	C10B  BF1Br 03D2r		     dw	     fid,at
  11688	C10F  16FDr 02FEr		     dw	     closf,drop
  11689	C113  BF1Er		     pclos1  dw	     fd
  11690	C115  02A1r			     dw	     clit
  11691	C117  09			     db	     (4*cw)+1
  11692	C118  0466r			     dw	     erase
  11693	C11A  0289r			     dw	     exit
  11694
  11695				     ;	     CLOSE  ( -- )	     screen? if	flush (close) then
  11696				     ;
  11697				     ; NOTE: errors are	NOT reported with this function
  11698
  11699					     hdr     1,'CLOSE',,1    ; close current screen
1 11700					     cseg
1 11701					     aseg
1 11702	1147			     heads   segment public	     ;
1 11703	1147  05			     db	     ??04B1	     ;
1 11704	1148  43 4C 4F 53 45		     db	     'CLOSE'	     ;
1 11705	114D  1138			     dw	     lastl	     ;
1 11706	114F  C11Cr			     dw	     cfadr	     ;
1 11707	1151			     heads   ends
1 11708					     cseg	     ;
1 11709					     aseg
  11710	C11C  E8 4156		     close:  call    docol
  11711	C11F  BF35r			     dw	     scrnq
  11712	C121  0A92r C129r		     dw	     zbran,close1
  11713	C125  C01Er			     dw	     flush
  11714	C127  C100r			     dw	     pclos
  11715	C129  0289r		     close1  dw	     exit
  11716
  11717				     ;	     CLOSE-ALL	( -- )	     close (fdt) nfd 0 do dup sfp ! (close)
  11718				     ;				     cell+ loop	drop
  11719
  11720					     hdr     1,'CLOSE-ALL',,1
1 11721					     cseg
1 11722					     aseg
1 11723	1151			     heads   segment public	     ;
1 11724	1151  09			     db	     ??04B3	     ;
1 11725	1152  43 4C 4F 53 45 2D	41+	     db	     'CLOSE-ALL'	     ;
  11726	      4C 4C
1 11727	115B  1147			     dw	     lastl	     ;
1 11728	115D  C12Br			     dw	     cfadr	     ;
1 11729	115F			     heads   ends
1 11730					     cseg	     ;
1 11731					     aseg
  11732	C12B  E8 4147		     closa:  call    docol
  11733	C12E  C11Cr			     dw	     close	     ; ensure buffer flushed
  11734	C130  02A8r BEAEr		     dw	     lit,fdt
  11735	C134  02A1r			     dw	     clit
  11736	C136  06			     db	     nfd
  11737	C137  0F79r			     dw	     zero
  11738	C139  0ABBr C14Br		     dw	     xdo,closa2
  11739	C13D  0304r		     closa1  dw	     dupp
  11740	C13F  BEBAr 03D8r		     dw	     sfp,store
  11741	C143  C100r			     dw	     pclos
  11742	C145  079Er			     dw	     cellp
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 207
kernel.asm



  11743	C147  0A9Br C13Dr		     dw	     xloop,closa1
  11744	C14B  02FEr		     closa2  dw	     drop
  11745	C14D  0289r			     dw	     exit
  11746
  11747				     ;	     LASTFILE  ( -- c-addr u )	     zbuf cell+	@ count
  11748
  11749					     hdr     1,'LASTFILE',,1
1 11750					     cseg
1 11751					     aseg
1 11752	115F			     heads   segment public	     ;
1 11753	115F  08			     db	     ??04B5	     ;
1 11754	1160  4C 41 53 54 46 49	4C+	     db	     'LASTFILE'		     ;
  11755	      45
1 11756	1168  1151			     dw	     lastl	     ;
1 11757	116A  C14Fr			     dw	     cfadr	     ;
1 11758	116C			     heads   ends
1 11759					     cseg	     ;
1 11760					     aseg
  11761	C14F  E8 4123		     lastf:  call    docol	     ; last named file used by open-file etc
  11762	C152  0FD9r 079Er		     dw	     zbuf,cellp
  11763	C156  03D2r 04A5r		     dw	     at,count
  11764	C15A  0289r			     dw	     exit
  11765
  11766				     ;	     .lastfile	( -- )	     beep cr lastfile type space
  11767
  11768					     hdr     x,'.LASTFILE',,1
1 11769					     cseg	     ;
1 11770					     aseg
  11771	C15C  E8 4116		     dotlf:  call    docol
  11772	C15F  0CA7r 0F13r		     dw	     beep,crr
  11773	C163  C14Fr 0EE4r		     dw	     lastf,typee
  11774	C167  0ECCr			     dw	     space
  11775	C169  0289r			     dw	     exit
  11776
  11777				     ;	     ?create  (	c-addr u -- fileid )
  11778				     ;				     r/o open-file 0= tuck if close-file then
  11779				     ;				     drop if .lastfile ." exists - delete it? "
  11780				     ;				     y/n 0= if abort then then lastfile	r/w
  11781				     ;				     create-file abort"	can't create file"
  11782
  11783					     hdr     x,'?CREATE',,1
1 11784					     cseg	     ;
1 11785					     aseg
  11786	C16B  E8 4107		     qcreat: call    docol
  11787	C16E  0F79r 16D3r		     dw	     rso,openf	     ; test if file exists
  11788	C172  0628r 036Ar		     dw	     zequ,tuck
  11789	C176  0A92r C17Cr		     dw	     zbran,qcreat1
  11790	C17A  16FDr			     dw	     closf
  11791	C17C  02FEr		     qcreat1 dw	     drop
  11792	C17E  0A92r C1A5r		     dw	     zbran,qcreat2
  11793	C182  C15Cr			     dw	     dotlf
  11794	C184  144Dr			     dw	     pdotq
  11795					     dcs     'exists - delete it? '
1 11796	C186  14			     db	     ??04BB	     ;
1 11797	C187  65 78 69 73 74 73	20+  ??04BC  db	     'exists - delete it? '
  11798	      2D 20 64 65 6C 65	74+
  11799	      65 20 69 74 3F 20
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 208
kernel.asm



  11800	C19B  1468r 0628r		     dw	     yn,zequ
  11801	C19F  0A92r C1A5r		     dw	     zbran,qcreat2
  11802	C1A3  1215r			     dw	     abort
  11803	C1A5  C14Fr 0F83r 16E0r	     qcreat2 dw	     lastf,rsw,creatf
  11804	C1AB  1271r			     dw	     pabq
  11805					     dcs     "can't create file"
1 11806	C1AD  11			     db	     ??04BD	     ;
1 11807	C1AE  63 61 6E 27 74 20	63+  ??04BE  db	     "can't create file"
  11808	      72 65 61 74 65 20	66+
  11809	      69 6C 65
  11810	C1BF  0289r			     dw	     exit
  11811
  11812				     ;	     init-scr  ( fileid	ior -- )     if	drop end fdb sfp ! fd on
  11813				     ;					     dup fid ! file-size drop b/buf
  11814				     ;					     um/mod nip	blks ! lastfile	fnb
  11815				     ;					     pack count	upper empty-buffers
  11816
  11817					     hdr     x,'INIT-SCR',,1
1 11818					     cseg	     ;
1 11819					     aseg
  11820	C1C1  E8 40B1		     iniscr: call    docol	     ; init screenfile
  11821	C1C4  0A92r C1CCr		     dw	     zbran,iniscr1
  11822	C1C8  02FEr			     dw	     drop
  11823	C1CA  0289r			     dw	     exit
  11824	C1CC  BEE8r BEBAr 03D8r	     iniscr1 dw	     fdb,sfp,store
  11825	C1D2  BF1Er 0453r		     dw	     fd,on	     ; -1 = screen file, 1 = text file
  11826	C1D6  0304r BF1Br 03D8r		     dw	     dupp,fid,store
  11827	C1DC  1585r 02FEr		     dw	     fsiz,drop
  11828	C1E0  B4E3r 07CEr 0362r		     dw	     bbuf,umslm,nip  ; overflow	stores $FFFF
  11829	C1E6  BF18r 03D8r		     dw	     blks,store
  11830	C1EA  C14Fr BF12r 04AFr		     dw	     lastf,fnb,pack
  11831	C1F0  04A5r 0F39r		     dw	     count,upper
  11832	C1F4  BF6Cr			     dw	     mtbuf
  11833	C1F6  0289r			     dw	     exit
  11834
  11835				     ;	     OPEN  ( c-addr u fam -- ior )   fdb drop >r s" scr" +ext r>
  11836				     ;					     open-file tuck init-scr
  11837
  11838					     hdr     1,'OPEN',,1     ; open a screen file
1 11839					     cseg
1 11840					     aseg
1 11841	116C			     heads   segment public	     ;
1 11842	116C  04			     db	     ??04C1	     ;
1 11843	116D  4F 50 45 4E		     db	     'OPEN'	     ;
1 11844	1171  115F			     dw	     lastl	     ;
1 11845	1173  C1F8r			     dw	     cfadr	     ;
1 11846	1175			     heads   ends
1 11847					     cseg	     ;
1 11848					     aseg
  11849	C1F8  E8 407A		     open:   call    docol
  11850	C1FB  BEE8r 02FEr		     dw	     fdb,drop	     ; free slot?
  11851	C1FF  02C9r			     dw	     tor
  11852	C201  1447r			     dw	     psqot
  11853					     dcs     'scr'
1 11854	C203  03			     db	     ??04C3	     ;
1 11855	C204  73 63 72		     ??04C4  db	     'scr'
  11856	C207  153Br			     dw	     pext
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 209
kernel.asm



  11857	C209  02D2r 16D3r		     dw	     fromr,openf
  11858	C20D  036Ar			     dw	     tuck
  11859	C20F  C1C1r			     dw	     iniscr
  11860	C211  0289r			     dw	     exit
  11861
  11862				     ;	     (open)  ( c-addr u	-- )	     r/w open abort" can't open	file"
  11863
  11864					     hdr     x,'(OPEN)',,1
1 11865					     cseg	     ;
1 11866					     aseg
  11867	C213  E8 405F		     popen:  call    docol
  11868	C216  0F83r C1F8r		     dw	     rsw,open
  11869	C21A  1271r			     dw	     pabq
  11870					     dcs     "can't open file"
1 11871	C21C  0F			     db	     ??04C7	     ;
1 11872	C21D  63 61 6E 27 74 20	6F+  ??04C8  db	     "can't open file"
  11873	      70 65 6E 20 66 69	6C+
  11874	      65
  11875	C22C  0289r			     dw	     exit
  11876
  11877				     ;	     GETFILENAME  ( -- c-addr u	)    >in @ char	dup rot	>in ! [char] "
  11878				     ;					     - if drop bl then word count dup
  11879				     ;					     0=	abort" specify filename"
  11880
  11881				     ;	     GETFILENAME  ( -- c-addr u	)    token dup 0= abort" specify filename"
  11882
  11883					     hdr     1,'GETFILENAME',,1
1 11884					     cseg
1 11885					     aseg
1 11886	1175			     heads   segment public	     ;
1 11887	1175  0B			     db	     ??04C9	     ;
1 11888	1176  47 45 54 46 49 4C	45+	     db	     'GETFILENAME'	     ;
  11889	      4E 41 4D 45
1 11890	1181  116C			     dw	     lastl	     ;
1 11891	1183  C22Er			     dw	     cfadr	     ;
1 11892	1185			     heads   ends
1 11893					     cseg	     ;
1 11894					     aseg
  11895	C22E  E8 4044		     getfn:  call    docol
  11896	C231  B7E7r			     dw	     token
  11897	C233  0304r 0628r		     dw	     dupp,zequ
  11898	C237  1271r			     dw	     pabq
  11899					     dcs     'specify filename'
1 11900	C239  10			     db	     ??04CB	     ;
1 11901	C23A  73 70 65 63 69 66	79+  ??04CC  db	     'specify filename'
  11902	      20 66 69 6C 65 6E	61+
  11903	      6D 65
  11904	C24A  0289r			     dw	     exit
  11905
  11906				     ;	     USING  ( "filename[.SCR]" -- )  close getfilename r/w open	?dup if
  11907				     ;					     .lastfile -507 = if ." access denied"
  11908				     ;					     0 else ." not found - create it? "
  11909				     ;					     y/n then 0= if abort then lastfile
  11910				     ;					     ?create 0 init-scr	then 0 0 scr 2!
  11911
  11912					     hdr     1,'USING',,1    ; open/make a screen file
1 11913					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 210
kernel.asm



1 11914					     aseg
1 11915	1185			     heads   segment public	     ;
1 11916	1185  05			     db	     ??04CD	     ;
1 11917	1186  55 53 49 4E 47		     db	     'USING'	     ;
1 11918	118B  1175			     dw	     lastl	     ;
1 11919	118D  C24Cr			     dw	     cfadr	     ;
1 11920	118F			     heads   ends
1 11921					     cseg	     ;
1 11922					     aseg
  11923	C24C  E8 4026		     using:  call    docol
  11924	C24F  C11Cr			     dw	     close
  11925	C251  C22Er			     dw	     getfn
  11926	C253  0F83r C1F8r 030Br		     dw	     rsw,open,qdup
  11927	C259  0A92r C2ABr		     dw	     zbran,using4
  11928	C25D  C15Cr			     dw	     dotlf
  11929	C25F  02A8r FE05		     dw	     lit,-507
  11930	C263  063Br			     dw	     equal
  11931	C265  0A92r C27Fr		     dw	     zbran,using1
  11932	C269  144Dr			     dw	     pdotq
  11933					     dcs     'access denied'
1 11934	C26B  0D			     db	     ??04CF	     ;
1 11935	C26C  61 63 63 65 73 73	20+  ??04D0  db	     'access denied'
  11936	      64 65 6E 69 65 64
  11937	C279  0F79r			     dw	     zero
  11938	C27B  0A8Dr C29Br		     dw	     bran,using2
  11939	C27F  144Dr		     using1  dw	     pdotq
  11940					     dcs     'not found	- create it? '
1 11941	C281  17			     db	     ??04D1	     ;
1 11942	C282  6E 6F 74 20 66 6F	75+  ??04D2  db	     'not found	- create it? '
  11943	      6E 64 20 2D 20 63	72+
  11944	      65 61 74 65 20 69	74+
  11945	      3F 20
  11946	C299  1468r			     dw	     yn
  11947	C29B  0628r		     using2  dw	     zequ
  11948	C29D  0A92r C2A3r		     dw	     zbran,using3
  11949	C2A1  1215r			     dw	     abort
  11950	C2A3  C14Fr C16Br	     using3  dw	     lastf,qcreat
  11951	C2A7  0F79r C1C1r		     dw	     zero,iniscr
  11952	C2AB  0F79r 0F79r	     using4  dw	     zero,zero	     ; reset SCR
  11953	C2AF  B50Fr 03F7r		     dw	     scr,tstor
  11954	C2B3  0289r			     dw	     exit
  11955
  11956				     ;	     LOADED  ( +n1 +n2 c-addr u	-- ) sfp @ >r (open) (thru) close r>
  11957				     ;					     sfp ! ?block
  11958
  11959					     hdr     1,'LOADED',,1
1 11960					     cseg
1 11961					     aseg
1 11962	118F			     heads   segment public	     ;
1 11963	118F  06			     db	     ??04D3	     ;
1 11964	1190  4C 4F 41 44 45 44		     db	     'LOADED'		     ;
1 11965	1196  1185			     dw	     lastl	     ;
1 11966	1198  C2B5r			     dw	     cfadr	     ;
1 11967	119A			     heads   ends
1 11968					     cseg	     ;
1 11969					     aseg
  11970	C2B5  E8 3FBD		     loaded: call    docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 211
kernel.asm



  11971	C2B8  BEBAr 03D2r		     dw	     sfp,at
  11972	C2BC  02C9r			     dw	     tor
  11973	C2BE  C213r			     dw	     popen
  11974	C2C0  C07Fr			     dw	     pthru
  11975	C2C2  C11Cr			     dw	     close
  11976	C2C4  02D2r			     dw	     fromr
  11977	C2C6  BEBAr 03D8r		     dw	     sfp,store
  11978	C2CA  B9B8r			     dw	     qblock
  11979	C2CC  0289r			     dw	     exit
  11980
  11981				     ;	     FLOAD  ( +n "filename[.SCR]" -- )	dup getfilename	loaded
  11982
  11983					     hdr     1,'FLOAD',,1
1 11984					     cseg
1 11985					     aseg
1 11986	119A			     heads   segment public	     ;
1 11987	119A  05			     db	     ??04D5	     ;
1 11988	119B  46 4C 4F 41 44		     db	     'FLOAD'	     ;
1 11989	11A0  118F			     dw	     lastl	     ;
1 11990	11A2  C2CEr			     dw	     cfadr	     ;
1 11991	11A4			     heads   ends
1 11992					     cseg	     ;
1 11993					     aseg
  11994	C2CE  E8 3FA4		     fload:  call    docol
  11995	C2D1  0304r			     dw	     dupp
  11996	C2D3  C22Er			     dw	     getfn
  11997	C2D5  C2B5r			     dw	     loaded
  11998	C2D7  0289r			     dw	     exit
  11999
  12000					     aseg
  12001
  12002	C2D9  4D 5A		     exehdr  db	     'MZ'	     ; 0  EXE id
  12003	C2DB  ????			     dw	     ?		     ; 2  file size (mod 512)
  12004	C2DD  ????			     dw	     ?		     ; 4  file size (512 byte blocks)
  12005	C2DF  0000			     dw	     0		     ; 6  # relocation items
  12006	C2E1  0002			     dw	     2		     ; 8  exe header size (paragraphs)
  12007	C2E3  0000			     dw	     0		     ; A  minimum paragraphs needed
  12008	C2E5  FFFF			     dw	     0FFFFh	     ; C  maximum paragraphs needed
  12009	C2E7  FFF0			     dw	     0FFF0h	     ; E  stack	segment
  12010	C2E9  01B0r			     dw	     tmpstk	     ;10  stack	offset
  12011	C2EB  0000			     dw	     0		     ;12  checksum (ignored by DOS)
  12012	C2ED  0100r			     dw	     start	     ;14  start	address
  12013	C2EF  FFF0			     dw	     0FFF0h	     ;16  code segment
  12014	C2F1  001C			     dw	     1Ch	     ;18  offset 1st relocation
  12015	C2F3  0000			     dw	     0		     ;1A  overlay #  0=resident	code
  12016	C2F5  0000			     dw	     0		     ;1C  null relocation item
  12017	C2F7  0000			     dw	     0		     ;1E     "	     "
  12018
  12019				     ;	     SAVE  ( "filename[.EXE]" -- )
  12020				     ;				     0 0 protect getfilename s"	exe" +ext
  12021				     ;				     ?create >r	over swap boot 2! (logo) (zb1)
  12022				     ;				     dup (zbsiz*2) erase (elogo-logo) cmove
  12023				     ;				     (exehdr) (100h-20h) $20 cmove 0= >r hseg
  12024				     ;				     0 dph @ r@	and limit dp 2@	>r over	- r@ +
  12025				     ;				     $0F + $FFF0 and r@	- r> over + 4 rshift
  12026				     ;				     (hstart) !	r> and (100h-20h) dp @ over -
  12027				     ;				     dup 3 pick	+ 0 6 pick m+ 512 um/mod over
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 212
kernel.asm



  12028				     ;				     0<> - swap	(100h-20h+2) 2!	r@ write-file
  12029				     ;				     boot cell+	off ?dup 0= if r@ write-file
  12030				     ;				     ?dup 0= if	r@ lwrite then then r>
  12031				     ;				     close-file	or abort" can't	save file"
  12032
  12033					     hdr     1,'SAVE',,1
1 12034					     cseg
1 12035					     aseg
1 12036	11A4			     heads   segment public	     ;
1 12037	11A4  04			     db	     ??04D7	     ;
1 12038	11A5  53 41 56 45		     db	     'SAVE'	     ;
1 12039	11A9  119A			     dw	     lastl	     ;
1 12040	11AB  C2F9r			     dw	     cfadr	     ;
1 12041	11AD			     heads   ends
1 12042					     cseg	     ;
1 12043					     aseg
  12044	C2F9  E8 3F79		     save:   call    docol
  12045	C2FC  0F79r 0F79r		     dw	     zero,zero
  12046	C300  BBAFr		     save1   dw	     prot
  12047	C302  C22Er			     dw	     getfn
  12048	C304  1447r			     dw	     psqot
  12049					     dcs     'exe'
1 12050	C306  03			     db	     ??04D9	     ;
1 12051	C307  65 78 65		     ??04DA  db	     'exe'
  12052	C30A  153Br			     dw	     pext
  12053	C30C  C16Br			     dw	     qcreat
  12054	C30E  02C9r			     dw	     tor	     ; fid
  12055	C310  031Cr 0315r		     dw	     over,swap	     ; set boot	flags
  12056	C314  0FC6r 03F7r		     dw	     boot,tstor
  12057	C318  02A8r BB65r		     dw	     lit,logo	     ; insert compiler logo
  12058	C31C  02A8r 0110r		     dw	     lit,zb1
  12059	C320  0304r			     dw	     dupp
  12060	C322  02A1r			     dw	     clit
  12061	C324  A2			     db	     zbsiz*2
  12062	C325  0466r			     dw	     erase
  12063	C327  02A1r			     dw	     clit
  12064	C329  1B			     db	     elogo-logo
  12065	C32A  047Br			     dw	     cmove
  12066	C32C  02A8r C2D9r		     dw	     lit,exehdr	     ; position	header
  12067	C330  02A8r 00E0		     dw	     lit,100h-20h
  12068	C334  02A1r			     dw	     clit
  12069	C336  20			     db	     20h
  12070	C337  047Br			     dw	     cmove
  12071	C339  0628r 02C9r		     dw	     zequ,tor	     ; system flag
  12072	C33D  03CDr 0F79r		     dw	     hseg,zero
  12073	C341  B52Fr 03D2r		     dw	     dph,at
  12074	C345  02DBr 0723r		     dw	     rat,andd	     ; heads size
  12075	C349  0F8Fr			     dw	     limit
  12076	C34B  0FEAr 03EEr		     dw	     dpp,tat
  12077	C34F  02C9r			     dw	     tor
  12078	C351  031Cr 0775r		     dw	     over,subb
  12079	C355  02DBr 076Dr		     dw	     rat,plus
  12080	C359  02A1r			     dw	     clit
  12081	C35B  0F			     db	     0fh
  12082	C35C  076Dr			     dw	     plus
  12083	C35E  02A8r FFF0		     dw	     lit,0fff0h
  12084	C362  0723r			     dw	     andd
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 213
kernel.asm



  12085	C364  02DBr 0775r		     dw	     rat,subb
  12086	C368  02D2r			     dw	     fromr
  12087	C36A  031Cr 076Dr		     dw	     over,plus
  12088	C36E  02A1r			     dw	     clit
  12089	C370  04			     db	     4
  12090	C371  08C1r			     dw	     rsh
  12091	C373  02A8r 01EAr		     dw	     lit,hstart
  12092	C377  03D8r			     dw	     store
  12093	C379  02D2r 0723r		     dw	     fromr,andd	     ; system size
  12094	C37D  02A1r			     dw	     clit
  12095	C37F  E0			     db	     100h-20h
  12096	C380  0FEAr 03D2r		     dw	     dpp,at
  12097	C384  031Cr 0775r		     dw	     over,subb
  12098	C388  0304r			     dw	     dupp
  12099	C38A  0F87r 0358r		     dw	     three,pick
  12100	C38E  076Dr			     dw	     plus
  12101	C390  0F79r			     dw	     zero
  12102	C392  02A1r			     dw	     clit
  12103	C394  06			     db	     6
  12104	C395  0358r			     dw	     pick
  12105	C397  077Dr			     dw	     mplus
  12106	C399  02A8r 0200		     dw	     lit,512
  12107	C39D  07CEr			     dw	     umslm
  12108	C39F  031Cr 0632r 0775r		     dw	     over,zneq,subb
  12109	C3A5  0315r			     dw	     swap
  12110	C3A7  02A8r 00E2		     dw	     lit,100h-20h+2
  12111	C3AB  03F7r			     dw	     tstor
  12112	C3AD  02DBr 15D9r		     dw	     rat,writf	     ; save application
  12113	C3B1  0FC6r 079Er 045Br		     dw	     boot,cellp,off  ; reset forth flag
  12114	C3B7  030Br 0628r		     dw	     qdup,zequ
  12115	C3BB  0A92r C3CFr		     dw	     zbran,save2     ; error
  12116	C3BF  02DBr 15D9r		     dw	     rat,writf	     ; save system
  12117	C3C3  030Br 0628r		     dw	     qdup,zequ
  12118	C3C7  0A92r C3CFr		     dw	     zbran,save2     ; error
  12119	C3CB  02DBr 15F6r		     dw	     rat,lwrit	     ; save heads
  12120	C3CF  02D2r 16FDr	     save2   dw	     fromr,closf
  12121	C3D3  072Br			     dw	     orr
  12122	C3D5  1271r			     dw	     pabq
  12123					     dcs     "can't save file"
1 12124	C3D7  0F			     db	     ??04DB	     ;
1 12125	C3D8  63 61 6E 27 74 20	73+  ??04DC  db	     "can't save file"
  12126	      61 76 65 20 66 69	6C+
  12127	      65
  12128	C3E7  0289r			     dw	     exit
  12129
  12130				     ;	     TURNKEY  (	"bootword" "filename[.EXE]" -- )
  12131
  12132					     hdr     1,'TURNKEY',,1
1 12133					     cseg
1 12134					     aseg
1 12135	11AD			     heads   segment public	     ;
1 12136	11AD  07			     db	     ??04DD	     ;
1 12137	11AE  54 55 52 4E 4B 45	59	     db	     'TURNKEY'		     ;
1 12138	11B5  11A4			     dw	     lastl	     ;
1 12139	11B7  C3E9r			     dw	     cfadr	     ;
1 12140	11B9			     heads   ends
1 12141					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 214
kernel.asm



1 12142					     aseg
  12143	C3E9  E8 3E89		     turnk:  call    docol
  12144	C3EC  0F72r			     dw	     true
  12145	C3EE  B7F9r		     turnk1  dw	     tick
  12146	C3F0  0A8Dr C300r		     dw	     bran,save1
  12147
  12148				     ;	     TURNKEY-SYSTEM  ( "bootword" "filename[.EXE]" -- )
  12149
  12150					     hdr     1,'TURNKEY-SYSTEM',,1
1 12151					     cseg
1 12152					     aseg
1 12153	11B9			     heads   segment public	     ;
1 12154	11B9  0E			     db	     ??04DF	     ;
1 12155	11BA  54 55 52 4E 4B 45	59+	     db	     'TURNKEY-SYSTEM'		     ;
  12156	      2D 53 59 53 54 45	4D
1 12157	11C8  11AD			     dw	     lastl	     ;
1 12158	11CA  C3F4r			     dw	     cfadr	     ;
1 12159	11CC			     heads   ends
1 12160					     cseg	     ;
1 12161					     aseg
  12162	C3F4  E8 3E7E		     turnks: call    docol
  12163	C3F7  0F79r			     dw	     zero
  12164	C3F9  0A8Dr C3EEr		     dw	     bran,turnk1
  12165
  12166				     ;	     CHAR+  ( c-addr1 -- c-addr2 )   aka 1+ char+
  12167
  12168					     hdr     1,'CHAR+',,,onep
1 12169					     cseg
1 12170	11CC			     heads   segment public	     ;
1 12171	11CC  85			     db	     ??04E1	     ;
1 12172	11CD  43 48 41 52 2B		     db	     'CHAR+'	     ;
1 12173	11D2  11B9			     dw	     lastl	     ;
1 12174	11D4  0798r			     dw	     cfadr	     ;
1 12175	11D6			     heads   ends
1 12176					     cseg	     ;
  12177				     charp   equ     onep
  12178
  12179				     ;	     CHARS  ( n1 -- n2 )	     aka noop chars immediate
  12180
  12181					     hdr     1,'CHARS',1,,noop
1 12182					     cseg
1 12183	11D6			     heads   segment public	     ;
1 12184	11D6  C5			     db	     ??04E3	     ;
1 12185	11D7  43 48 41 52 53		     db	     'CHARS'	     ;
1 12186	11DC  11CC			     dw	     lastl	     ;
1 12187	11DE  01BAr			     dw	     cfadr	     ;
1 12188	11E0			     heads   ends
1 12189					     cseg	     ;
  12190				     chars   equ     next
  12191
  12192				     ;	     CELL+  ( addr1 -- addr2 )	     aka 2+ cell+
  12193
  12194					     hdr     1,'CELL+',,,twop
1 12195					     cseg
1 12196	11E0			     heads   segment public	     ;
1 12197	11E0  85			     db	     ??04E5	     ;
1 12198	11E1  43 45 4C 4C 2B		     db	     'CELL+'	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 215
kernel.asm



1 12199	11E6  11D6			     dw	     lastl	     ;
1 12200	11E8  079Er			     dw	     cfadr	     ;
1 12201	11EA			     heads   ends
1 12202					     cseg	     ;
  12203				     cellp   equ     twop
  12204
  12205				     ;	     CELL-  ( addr1 -- addr2 )	     aka 2- cell-
  12206
  12207					     hdr     1,'CELL-',,,twom
1 12208					     cseg
1 12209	11EA			     heads   segment public	     ;
1 12210	11EA  85			     db	     ??04E7	     ;
1 12211	11EB  43 45 4C 4C 2D		     db	     'CELL-'	     ;
1 12212	11F0  11E0			     dw	     lastl	     ;
1 12213	11F2  07ACr			     dw	     cfadr	     ;
1 12214	11F4			     heads   ends
1 12215					     cseg	     ;
  12216				     cellm   equ     twom
  12217
  12218				     ;	     CELLS  ( n1 -- n2 )	     aka 2* cells
  12219
  12220					     hdr     1,'CELLS',,,tstar
1 12221					     cseg
1 12222	11F4			     heads   segment public	     ;
1 12223	11F4  85			     db	     ??04E9	     ;
1 12224	11F5  43 45 4C 4C 53		     db	     'CELLS'	     ;
1 12225	11FA  11EA			     dw	     lastl	     ;
1 12226	11FC  0892r			     dw	     cfadr	     ;
1 12227	11FE			     heads   ends
1 12228					     cseg	     ;
  12229				     cells   equ     tstar
  12230
  12231				     ;	     ALIGN  ( -- )		     aka noop align immediate
  12232
  12233					     hdr     1,'ALIGN',1,,noop
1 12234					     cseg
1 12235	11FE			     heads   segment public	     ;
1 12236	11FE  C5			     db	     ??04EB	     ;
1 12237	11FF  41 4C 49 47 4E		     db	     'ALIGN'	     ;
1 12238	1204  11F4			     dw	     lastl	     ;
1 12239	1206  01BAr			     dw	     cfadr	     ;
1 12240	1208			     heads   ends
1 12241					     cseg	     ;
  12242				     alignn  equ     next
  12243
  12244				     ;	     ALIGNED  (	addr --	a-addr )     aka noop aligned immediate
  12245
  12246					     hdr     1,'ALIGNED',1,,noop
1 12247					     cseg
1 12248	1208			     heads   segment public	     ;
1 12249	1208  C7			     db	     ??04ED	     ;
1 12250	1209  41 4C 49 47 4E 45	44	     db	     'ALIGNED'		     ;
1 12251	1210  11FE			     dw	     lastl	     ;
1 12252	1212  01BAr			     dw	     cfadr	     ;
1 12253	1214			     heads   ends
1 12254					     cseg	     ;
  12255				     alignd  equ     next
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 216
kernel.asm



  12256
  12257				     ;
  12258				     ;	     Floating Point Functions
  12259				     ;
  12260				     ;	-FP  FLOAT+  FLOATS  FALIGN  FALIGNED  F,  FLITERAL  FCONSTANT
  12261				     ;	FVARIABLE  FDEPTH  FDROP  FDUP	FSWAP  FOVER  FROT  F@	F!  FPICK
  12262				     ;	FABS  FNEGATE  D>F  F>D	 S>F  F>S  F0=	F=  F0<	 F<  F0>  F>
  12263				     ;	FMIN  FMAX  FLOOR  FROUND  FTRUNC  FCEIL  F+  F-  F*  F/  FRANDOM
  12264				     ;	/FLOAT	>FLOAT	MAX-PRECISION  REPRESENT  PRECISION  SET-PRECISION
  12265				     ;	(FS.)  FS.R  FS.  (FE.)	 FE.R  FE.  (F.)  F.R  F.  (G.)	 G.R  G.
  12266				     ;	FSQRT  FEXP  FLN  F**  FSIN  FCOS  FATAN  PI  fpinit  fident  fnumber
  12267				     ;
  12268
  12269				     ;	     -FP  ( -- addr )		     marker -FP
  12270
  12271					     hdr     1,'-FP',,1
1 12272					     cseg
1 12273					     aseg
1 12274	1214			     heads   segment public	     ;
1 12275	1214  03			     db	     ??04EF	     ;
1 12276	1215  2D 46 50			     db	     '-FP'	     ;
1 12277	1218  1208			     dw	     lastl	     ;
1 12278	121A  C3FDr			     dw	     cfadr	     ;
1 12279	121C			     heads   ends
1 12280					     cseg	     ;
1 12281					     aseg
  12282	C3FD  E8 3EFE		     dfp:    call    drop
  12283
  12284				     ;	     FLOAT+ ( f-addr1 -- f-addr2 )   4 +
  12285
  12286					     hdr     1,'FLOAT+'
1 12287					     cseg
1 12288	121C			     heads   segment public	     ;
1 12289	121C  06			     db	     ??04F1	     ;
1 12290	121D  46 4C 4F 41 54 2B		     db	     'FLOAT+'		     ;
1 12291	1223  1214			     dw	     lastl	     ;
1 12292	1225  173Fr			     dw	     cfadr	     ;
1 12293	1227			     heads   ends
1 12294					     cseg	     ;
  12295	173F  58		     floatp: pop     ax
  12296	1740  05 0004			     add     ax,fw
  12297	1743  E9 EA73			     jmp     apush
  12298
  12299				     ;	     FLOATS ( n1 -- n2 )	     4 *
  12300
  12301					     hdr     1,'FLOATS'
1 12302					     cseg
1 12303	1227			     heads   segment public	     ;
1 12304	1227  06			     db	     ??04F3	     ;
1 12305	1228  46 4C 4F 41 54 53		     db	     'FLOATS'		     ;
1 12306	122E  121C			     dw	     lastl	     ;
1 12307	1230  1746r			     dw	     cfadr	     ;
1 12308	1232			     heads   ends
1 12309					     cseg	     ;
  12310	1746  58		     floats: pop     ax
  12311	1747  D1 E0			     shl     ax,1
  12312	1749  D1 E0			     shl     ax,1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 217
kernel.asm



  12313	174B  E9 EA6B			     jmp     apush
  12314
  12315				     ;	     FALIGN  ( -- )		     aka noop falign immediate
  12316
  12317					     hdr     1,'FALIGN',1,,noop
1 12318					     cseg
1 12319	1232			     heads   segment public	     ;
1 12320	1232  C6			     db	     ??04F5	     ;
1 12321	1233  46 41 4C 49 47 4E		     db	     'FALIGN'		     ;
1 12322	1239  1227			     dw	     lastl	     ;
1 12323	123B  01BAr			     dw	     cfadr	     ;
1 12324	123D			     heads   ends
1 12325					     cseg	     ;
  12326				     falign  equ     next
  12327
  12328				     ;	     FALIGNED (	addr --	f-addr )     aka noop faligned immediate
  12329
  12330					     hdr     1,'FALIGNED',1,,noop
1 12331					     cseg
1 12332	123D			     heads   segment public	     ;
1 12333	123D  C8			     db	     ??04F7	     ;
1 12334	123E  46 41 4C 49 47 4E	45+	     db	     'FALIGNED'		     ;
  12335	      44
1 12336	1246  1232			     dw	     lastl	     ;
1 12337	1248  01BAr			     dw	     cfadr	     ;
1 12338	124A			     heads   ends
1 12339					     cseg	     ;
  12340				     falignd equ     next
  12341
  12342
  12343					     cseg
  12344
  12345				     ;	     pop fp-stack to CX,DX
  12346
  12347	174E  8B 1E 0FC4r	     fpop:   mov     bx,fspp
  12348	1752  8B 0F			     mov     cx,[bx]
  12349	1754  8B 57 02			     mov     dx,[bx+2]
  12350	1757  83 06 0FC4r 04		     add     word ptr fspp,fw
  12351	175C  C3			     ret
  12352
  12353				     ;	     push CX,DX	to fp-stack
  12354
  12355	175D  83 2E 0FC4r 04	     fpush:  sub     word ptr fspp,fw
  12356	1762  8B 1E 0FC4r		     mov     bx,fspp
  12357	1766  89 0F			     mov     [bx],cx
  12358	1768  89 57 02			     mov     [bx+2],dx
  12359	176B  C3			     ret
  12360
  12361				     ;	     FLITERAL runtime
  12362
  12363	176C  AD		     flit:   lodsw
  12364	176D  8B C8			     mov     cx,ax
  12365	176F  AD			     lodsw
  12366	1770  8B D0			     mov     dx,ax
  12367	1772  E8 FFE8			     call    fpush
  12368					     nextt
1 12369	1775  AD			     lodsw
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 218
kernel.asm



1 12370	1776  FF E0			     jmp     ax
  12371
  12372				     ;	     FCONSTANT runtime
  12373
  12374	1778  5B		     dofcon: pop     bx
  12375	1779  8B 0F			     mov     cx,[bx]
  12376	177B  8B 57 02			     mov     dx,[bx+2]
  12377	177E  E8 FFDC			     call    fpush
  12378					     nextt
1 12379	1781  AD			     lodsw
1 12380	1782  FF E0			     jmp     ax
  12381
  12382
  12383				     ;	     F,	 (F: r -- ) or ( r -- )
  12384
  12385					     hdr     1,'F,'
1 12386					     cseg
1 12387	124A			     heads   segment public	     ;
1 12388	124A  02			     db	     ??04F9	     ;
1 12389	124B  46 2C			     db	     'F,'	     ;
1 12390	124D  123D			     dw	     lastl	     ;
1 12391	124F  1784r			     dw	     cfadr	     ;
1 12392	1251			     heads   ends
1 12393					     cseg	     ;
  12394	1784  E8 EAEE		     fcomm:  call    docol
  12395	1787  02A1r			     dw	     clit
  12396	1789  04			     db	     fw
  12397	178A  1057r			     dw	     resv
  12398	178C  1810r			     dw	     fstor
  12399	178E  0289r			     dw	     exit
  12400
  12401				     ;	     FLITERAL  ( -- r )	     postpone flit f, ;immediate
  12402
  12403					     hdr     1,'FLITERAL',1,1
1 12404					     cseg
1 12405					     aseg
1 12406	1251			     heads   segment public	     ;
1 12407	1251  48			     db	     ??04FB	     ;
1 12408	1252  46 4C 49 54 45 52	41+	     db	     'FLITERAL'		     ;
  12409	      4C
1 12410	125A  124A			     dw	     lastl	     ;
1 12411	125C  C400r			     dw	     cfadr	     ;
1 12412	125E			     heads   ends
1 12413					     cseg	     ;
1 12414					     aseg
  12415	C400  E8 3E72		     flite:  call    docol
  12416	C403  BDDEr 176Cr		     dw	     comp,flit
  12417	C407  1784r			     dw	     fcomm
  12418	C409  0289r			     dw	     exit
  12419
  12420				     ;	     FCONSTANT	( -- r )
  12421
  12422					     hdr     1,'FCONSTANT',,1
1 12423					     cseg
1 12424					     aseg
1 12425	125E			     heads   segment public	     ;
1 12426	125E  09			     db	     ??04FD	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 219
kernel.asm



1 12427	125F  46 43 4F 4E 53 54	41+	     db	     'FCONSTANT'	     ;
  12428	      4E 54
1 12429	1268  1251			     dw	     lastl	     ;
1 12430	126A  C40Br			     dw	     cfadr	     ;
1 12431	126C			     heads   ends
1 12432					     cseg	     ;
1 12433					     aseg
  12434	C40B  E8 3E67		     fcon:   call    docol
  12435	C40E  02A8r 1778r		     dw	     lit,dofcon
  12436	C412  B3C6r			     dw	     build
  12437	C414  1784r			     dw	     fcomm
  12438	C416  0289r			     dw	     exit
  12439
  12440				     ;	     FVARIABLE	( -- f-addr )	     aka 2variable fvariable
  12441
  12442					     hdr     1,'FVARIABLE',,,tvar
1 12443					     cseg
1 12444	126C			     heads   segment public	     ;
1 12445	126C  89			     db	     ??04FF	     ;
1 12446	126D  46 56 41 52 49 41	42+	     db	     'FVARIABLE'	     ;
  12447	      4C 45
1 12448	1276  125E			     dw	     lastl	     ;
1 12449	1278  B466r			     dw	     cfadr	     ;
1 12450	127A			     heads   ends
1 12451					     cseg	     ;
  12452				     fvar    equ     tvar
  12453
  12454				     ;	     FDEPTH   (	-- +n )	     fs0 @ fsp @ - 2/ 2/
  12455
  12456					     hdr     1,'FDEPTH'
1 12457					     cseg
1 12458	127A			     heads   segment public	     ;
1 12459	127A  06			     db	     ??0501	     ;
1 12460	127B  46 44 45 50 54 48		     db	     'FDEPTH'		     ;
1 12461	1281  126C			     dw	     lastl	     ;
1 12462	1283  1790r			     dw	     cfadr	     ;
1 12463	1285			     heads   ends
1 12464					     cseg	     ;
  12465	1790  E8 EAE2		     fdepth: call    docol
  12466	1793  0FEFr 03D2r		     dw	     fszero,at
  12467	1797  0FC1r 03D2r		     dw	     fsp,at
  12468	179B  0775r			     dw	     subb
  12469	179D  0899r			     dw	     twodiv
  12470	179F  0899r			     dw	     twodiv
  12471	17A1  0289r			     dw	     exit
  12472
  12473				     ;	     FDROP  ( r	-- )
  12474
  12475					     hdr     1,'FDROP'
1 12476					     cseg
1 12477	1285			     heads   segment public	     ;
1 12478	1285  05			     db	     ??0503	     ;
1 12479	1286  46 44 52 4F 50		     db	     'FDROP'	     ;
1 12480	128B  127A			     dw	     lastl	     ;
1 12481	128D  17A3r			     dw	     cfadr	     ;
1 12482	128F			     heads   ends
1 12483					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 220
kernel.asm



  12484	17A3  83 06 0FC4r 04	     fdrop:  add     word ptr fspp,fw
  12485					     nextt
1 12486	17A8  AD			     lodsw
1 12487	17A9  FF E0			     jmp     ax
  12488
  12489				     ;	     FDUP  ( r -- r r )
  12490
  12491					     hdr     1,'FDUP'
1 12492					     cseg
1 12493	128F			     heads   segment public	     ;
1 12494	128F  04			     db	     ??0505	     ;
1 12495	1290  46 44 55 50		     db	     'FDUP'	     ;
1 12496	1294  1285			     dw	     lastl	     ;
1 12497	1296  17ABr			     dw	     cfadr	     ;
1 12498	1298			     heads   ends
1 12499					     cseg	     ;
  12500	17AB  87 26 0FC4r	     fdup:   xchg    fspp,sp
  12501	17AF  8B DC			     mov     bx,sp
  12502	17B1  FF 77 02			     push    [bx+2]
  12503	17B4  FF 37			     push    [bx]
  12504	17B6  87 26 0FC4r		     xchg    fspp,sp
  12505					     nextt
1 12506	17BA  AD			     lodsw
1 12507	17BB  FF E0			     jmp     ax
  12508
  12509				     ;	     FSWAP  ( r1 r2 -- r2 r1 )
  12510
  12511					     hdr     1,'FSWAP'
1 12512					     cseg
1 12513	1298			     heads   segment public	     ;
1 12514	1298  05			     db	     ??0507	     ;
1 12515	1299  46 53 57 41 50		     db	     'FSWAP'	     ;
1 12516	129E  128F			     dw	     lastl	     ;
1 12517	12A0  17BDr			     dw	     cfadr	     ;
1 12518	12A2			     heads   ends
1 12519					     cseg	     ;
  12520	17BD  8B 1E 0FC4r	     fswap:  mov     bx,fspp
  12521	17C1  8B 07			     mov     ax,[bx]
  12522	17C3  87 47 04			     xchg    ax,[bx+4]
  12523	17C6  89 07			     mov     [bx],ax
  12524	17C8  8B 47 02			     mov     ax,[bx+2]
  12525	17CB  87 47 06			     xchg    ax,[bx+6]
  12526	17CE  89 47 02			     mov     [bx+2],ax
  12527					     nextt
1 12528	17D1  AD			     lodsw
1 12529	17D2  FF E0			     jmp     ax
  12530
  12531				     ;	     FOVER  ( r1 r2 -- r1 r2 r1	)
  12532
  12533					     hdr     1,'FOVER'
1 12534					     cseg
1 12535	12A2			     heads   segment public	     ;
1 12536	12A2  05			     db	     ??0509	     ;
1 12537	12A3  46 4F 56 45 52		     db	     'FOVER'	     ;
1 12538	12A8  1298			     dw	     lastl	     ;
1 12539	12AA  17D4r			     dw	     cfadr	     ;
1 12540	12AC			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 221
kernel.asm



1 12541					     cseg	     ;
  12542	17D4  87 26 0FC4r	     fover:  xchg    fspp,sp
  12543	17D8  8B DC			     mov     bx,sp
  12544	17DA  FF 77 06			     push    [bx+6]
  12545	17DD  FF 77 04			     push    [bx+4]
  12546	17E0  87 26 0FC4r		     xchg    fspp,sp
  12547					     nextt
1 12548	17E4  AD			     lodsw
1 12549	17E5  FF E0			     jmp     ax
  12550
  12551				     ;	     FROT  ( r1	r2 r3 -- r2 r3 r1 )
  12552
  12553					     hdr     1,'FROT'
1 12554					     cseg
1 12555	12AC			     heads   segment public	     ;
1 12556	12AC  04			     db	     ??050B	     ;
1 12557	12AD  46 52 4F 54		     db	     'FROT'	     ;
1 12558	12B1  12A2			     dw	     lastl	     ;
1 12559	12B3  17E7r			     dw	     cfadr	     ;
1 12560	12B5			     heads   ends
1 12561					     cseg	     ;
  12562	17E7  8B 1E 0FC4r	     frot:   mov     bx,fspp
  12563	17EB  8B 07			     mov     ax,[bx]
  12564	17ED  87 47 04			     xchg    ax,[bx+4]
  12565	17F0  87 47 08			     xchg    ax,[bx+8]
  12566	17F3  89 07			     mov     [bx],ax
  12567	17F5  8B 47 02			     mov     ax,[bx+2]
  12568	17F8  87 47 06			     xchg    ax,[bx+6]
  12569	17FB  87 47 0A			     xchg    ax,[bx+10]
  12570	17FE  89 47 02			     mov     [bx+2],ax
  12571					     nextt
1 12572	1801  AD			     lodsw
1 12573	1802  FF E0			     jmp     ax
  12574
  12575				     ;	     F@	 ( f-addr -- r )
  12576
  12577					     hdr     1,'F@'
1 12578					     cseg
1 12579	12B5			     heads   segment public	     ;
1 12580	12B5  02			     db	     ??050D	     ;
1 12581	12B6  46 40			     db	     'F@'	     ;
1 12582	12B8  12AC			     dw	     lastl	     ;
1 12583	12BA  1804r			     dw	     cfadr	     ;
1 12584	12BC			     heads   ends
1 12585					     cseg	     ;
  12586	1804  5B		     fat:    pop     bx
  12587	1805  8B 0F			     mov     cx,[bx]
  12588	1807  8B 57 02			     mov     dx,[bx+2]
  12589	180A  E8 FF50			     call    fpush
  12590					     nextt
1 12591	180D  AD			     lodsw
1 12592	180E  FF E0			     jmp     ax
  12593
  12594				     ;	     F!	 ( r f-addr -- )
  12595
  12596					     hdr     1,'F!'
1 12597					     cseg
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 222
kernel.asm



1 12598	12BC			     heads   segment public	     ;
1 12599	12BC  02			     db	     ??050F	     ;
1 12600	12BD  46 21			     db	     'F!'	     ;
1 12601	12BF  12B5			     dw	     lastl	     ;
1 12602	12C1  1810r			     dw	     cfadr	     ;
1 12603	12C3			     heads   ends
1 12604					     cseg	     ;
  12605	1810  E8 FF3B		     fstor:  call    fpop
  12606	1813  5B			     pop     bx
  12607	1814  89 0F			     mov     [bx],cx
  12608	1816  89 57 02			     mov     [bx+2],dx
  12609					     nextt
1 12610	1819  AD			     lodsw
1 12611	181A  FF E0			     jmp     ax
  12612
  12613				     ;	     FPICK  ( +n -- r )	     floats sp@	cell+ +	f@
  12614
  12615					     hdr     1,'FPICK'
1 12616					     cseg
1 12617	12C3			     heads   segment public	     ;
1 12618	12C3  05			     db	     ??0511	     ;
1 12619	12C4  46 50 49 43 4B		     db	     'FPICK'	     ;
1 12620	12C9  12BC			     dw	     lastl	     ;
1 12621	12CB  181Cr			     dw	     cfadr	     ;
1 12622	12CD			     heads   ends
1 12623					     cseg	     ;
  12624	181C  E8 EA56		     fpick:  call    docol
  12625	181F  1746r			     dw	     floats
  12626	1821  0FC1r 03D2r		     dw	     fsp,at
  12627	1825  076Dr 1804r		     dw	     plus,fat
  12628	1829  0289r			     dw	     exit
  12629
  12630					     cseg
  12631
  12632				     ; floating	point accumulator
  12633
  12634	182B  05*(??)		     acce    db	     5 dup (?)	     ; exponent
  12635	      =MAIN:182C	     accs    =	     acce+1	     ; sign
  12636	      =MAIN:182D	     acc1    =	     accs+1	     ; 1st fraction (msb)
  12637	      =MAIN:182E	     acc2    =	     acc1+1	     ; 2nd fraction
  12638	      =MAIN:182F	     acc3    =	     acc2+1	     ; 3rd fraction
  12639
  12640	1830  ??		     sf	     db	     ?		     ; subtraction flag
  12641
  12642	1831  ????????		     f1	     dd	     ?		     ; temp float storage
  12643	1835  ????????		     f2	     dd	     ?		     ;
  12644	1839  ????????		     f3	     dd	     ?		     ;
  12645
  12646	183D  E8 FF38		     ften:   call    dofcon
  12647	1840  84 20 00 00	     fp10    db	     84h,20h,0,0     ; 10.0
  12648
  12649				     ; save/load temp fp registers
  12650
  12651	1844  BB 1831r		     savf1:  mov     bx,offset f1    ; save regs to f1
  12652	1847  EB 6F			     jmp     short stom
  12653
  12654	1849  BB 1835r		     savf2:  mov     bx,offset f2    ; save regs to f2
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 223
kernel.asm



  12655	184C  EB 6A			     jmp     short stom
  12656
  12657	184E  BB 1831r		     lodf1:  mov     bx,offset f1    ; load accum/regs from f1
  12658	1851  EB 40			     jmp     short lod
  12659
  12660	1853  BB 1835r		     lodf2:  mov     bx,offset f2    ; load accum/regs from f2
  12661	1856  EB 3B			     jmp     short lod
  12662
  12663				     ; pop float from stack to accum
  12664
  12665	1858			     ldop:
  12666	1858  E8 FEF3			     call    fpop
  12667	185B  BB 1831r			     mov     bx,offset f1
  12668	185E  89 0F			     mov     [bx],cx
  12669	1860  89 57 02			     mov     [bx+2],dx
  12670	1863  EB 2E			     jmp     short lod
  12671
  12672				     ; pop 2 float from	stack to bx (f2) and accum
  12673
  12674	1865			     ld2op:
  12675	1865  E8 FEE6			     call    fpop
  12676	1868  BB 1835r			     mov     bx,offset f2
  12677	186B  53			     push    bx
  12678	186C  89 0F			     mov     [bx],cx
  12679	186E  89 57 02			     mov     [bx+2],dx
  12680	1871  E8 FFE4			     call    ldop
  12681	1874  5B			     pop     bx
  12682	1875  C3			     ret
  12683
  12684				     ; push float registers to stack and exit
  12685
  12686	1876  8A D1		     svop:   mov     dl,cl
  12687	1878  8A C8			     mov     cl,al
  12688	187A  E8 FEE0			     call    fpush
  12689					     nextt
1 12690	187D  AD			     lodsw
1 12691	187E  FF E0			     jmp     ax
  12692
  12693				     ; overflow	- set regs to maximum, set cy
  12694
  12695	1880  B9 7FFF		     ovf:    mov     cx,7fffh
  12696	1883  8A C1			     mov     al,cl
  12697	1885  8A F1			     mov     dh,cl
  12698	1887  F9			     stc
  12699	1888  C3			     ret
  12700
  12701				     ; zero - set accum	and regs to zero
  12702
  12703	1889  2B C0		     zro:    sub     ax,ax
  12704	188B  A2 182Br			     mov     acce,al
  12705	188E  8B C8			     mov     cx,ax
  12706	1890  8A F0			     mov     dh,al
  12707	1892  C3			     ret
  12708
  12709				     ; load float [bx] to accum	and regs, set flags
  12710				     ; entry - bx=adr
  12711				     ; exit  - cx:dh (packed), al=exp, flags set
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 224
kernel.asm



  12712
  12713	1893  8A 17		     lod:    mov     dl,[bx]
  12714	1895  22 D2			     and     dl,dl
  12715	1897  75 02			     jnz     lod1
  12716	1899  EB EE			     jmp     short zro
  12717
  12718	189B  8A 6F 01		     lod1:   mov     ch,[bx+1]
  12719	189E  8A 4F 02			     mov     cl,[bx+2]
  12720	18A1  8A 77 03			     mov     dh,[bx+3]
  12721	18A4  8A C5			     mov     al,ch
  12722	18A6  80 CD 80			     or	     ch,80h
  12723	18A9  32 C5			     xor     al,ch
  12724	18AB  E8 0004		     lod2:   call    storr
  12725	18AE  32 C5			     xor     al,ch
  12726	18B0  EB 32			     jmp     short tst1
  12727
  12728				     ; store regs to accum  dl=exp
  12729
  12730	18B2  BB 182Br		     storr:  mov     bx,offset acce
  12731	18B5  88 17			     mov     [bx],dl
  12732	18B7  43			     inc     bx
  12733
  12734				     ; store regs to mem
  12735				     ; entry - bx=adr al=exp cx:dh (packed)
  12736				     ; exit  - none
  12737
  12738	18B8  88 07		     stom:   mov     [bx],al
  12739	18BA  88 6F 01		     stom1:  mov     [bx+1],ch
  12740	18BD  88 4F 02			     mov     [bx+2],cl
  12741	18C0  88 77 03			     mov     [bx+3],dh
  12742	18C3  C3			     ret
  12743
  12744				     ; change sign of accumulator and again
  12745				     ; when calling routine completes
  12746
  12747	18C4  E8 0003		     chss:   call    chs
  12748	18C7  5B			     pop     bx
  12749	18C8  FF D3			     call    bx
  12750
  12751				     ; change sign of accumulator
  12752				     ; entry - none
  12753				     ; exit  - cx:dh (packed) al=exp flags set
  12754
  12755	18CA  80 36 182Cr 80	     chs:    xor     byte ptr accs,80h
  12756
  12757				     ; load regs from acc and test
  12758
  12759	18CF  BB 182Br		     lodr:   mov     bx,offset acce
  12760	18D2  8A 17			     mov     dl,[bx]	     ; exp
  12761	18D4  0A D2			     or	     dl,dl
  12762	18D6  74 B1			     jz	     zro
  12763	18D8  8A 47 01			     mov     al,[bx+1]	     ; accs
  12764	18DB  32 47 02			     xor     al,[bx+2]	     ; msb sign	packed
  12765	18DE  8A 4F 03			     mov     cl,[bx+3]
  12766	18E1  8A 77 04			     mov     dh,[bx+4]
  12767
  12768				     ; entry - al:cl:dh	(packed) dl=exp
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 225
kernel.asm



  12769				     ; exit  - cx:dh (packed) al=exp flags set
  12770
  12771	18E4  8A E8		     tst1:   mov     ch,al
  12772	18E6  0C 01		     tst2:   or	     al,1	     ; test sign, clear	Z C flags
  12773	18E8  8A C2		     tst3:   mov     al,dl
  12774	18EA  C3			     ret
  12775
  12776				     ; entry - al=exp
  12777				     ; exit  - dl=exp  Z=zero S=negative
  12778
  12779	18EB  8A D0		     tstr:   mov     dl,al
  12780	18ED  0A C0			     or	     al,al
  12781	18EF  75 01			     jnz     tstr1
  12782	18F1  C3			     ret
  12783
  12784	18F2  8A C5		     tstr1:  mov     al,ch
  12785	18F4  EB F0			     jmp     tst2
  12786
  12787				     ; normalize and pack cx:dx
  12788
  12789	18F6  0A ED		     npack:  or	     ch,ch
  12790	18F8  78 07			     js	     fpack
  12791	18FA  E8 0055			     call    norm
  12792	18FD  78 02			     js	     fpack
  12793	18FF  EB 88			     jmp     zro	     ; underflow or zero
  12794
  12795				     ; pack cx:dx
  12796
  12797	1901  E8 007C		     fpack:  call    rondr	     ; round cx:dx
  12798	1904  73 DE			     jnc     tst1
  12799	1906  E9 FF77			     jmp     ovf
  12800
  12801				     ; compare regs with mem [bx], return S if regs < mem, Z if	match
  12802				     ; bx preserved
  12803
  12804	1909  80 3F 00		     fcmp:   cmp     byte ptr [bx],0
  12805	190C  74 DD			     jz	     tstr	     ; mem=0  test regs	sign
  12806
  12807	190E  0A C0			     or	     al,al
  12808	1910  8A D0			     mov     dl,al
  12809	1912  8A 47 01			     mov     al,[bx+1]
  12810	1915  F6 D0			     not     al
  12811	1917  74 CD			     jz	     tst2	     ; regs=0  test mem	sign
  12812
  12813	1919  32 C5			     xor     al,ch
  12814	191B  79 D5			     jns     tstr1	     ; signs differ
  12815
  12816	191D  3A 17			     cmp     dl,[bx]
  12817	191F  75 0F			     jnz     fcmp1
  12818	1921  3A 6F 01			     cmp     ch,[bx+1]
  12819	1924  75 0A			     jnz     fcmp1
  12820	1926  3A 4F 02			     cmp     cl,[bx+2]
  12821	1929  75 05			     jnz     fcmp1
  12822	192B  3A 77 03			     cmp     dh,[bx+3]
  12823	192E  74 B8			     jz	     tst3	     ; regs = mem
  12824	1930  D0 D8		     fcmp1:  rcr     al,1	     ; carry to	sign
  12825	1932  32 C5			     xor     al,ch	     ; complement sign for neg values
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 226
kernel.asm



  12826	1934  EB B0			     jmp     tst2
  12827
  12828				     ; right shift n bits
  12829				     ; entry - cx:dh al=count
  12830				     ; exit  - cx:dx
  12831
  12832	1936  2A D2		     shrr:   sub     dl,dl
  12833	1938  0A C0		     shrr1:  or	     al,al	     ; test for	zero
  12834	193A  74 08			     jz	     shrr2
  12835	193C  D1 E9			     shr     cx,1
  12836	193E  D1 DA			     rcr     dx,1
  12837	1940  FE C8			     dec     al
  12838	1942  EB F4			     jmp     shrr1
  12839
  12840	1944  C3		     shrr2:  ret
  12841
  12842				     ; Complement cx:dx	adjust accs, return sign flag
  12843
  12844	1945  80 36 182Cr 80	     fcpl:   xor     byte ptr accs,80h ; change	accum sign
  12845	194A  F7 D9			     neg     cx		     ; complement fraction
  12846	194C  F7 DA			     neg     dx
  12847	194E  83 D9 00			     sbb     cx,0
  12848	1951  C3			     ret
  12849
  12850				     ; Normalize cx:dx adjust acce
  12851				     ; entry - cx:dx
  12852				     ; exit  - cx:dx z=cx:dx=0 or acce=0 sign=underflow
  12853
  12854	1952  B3 20		     norm:   mov     bl,32	     ; max shift
  12855	1954  0A ED		     norm1:  or	     ch,ch
  12856	1956  75 14			     jnz     norm3
  12857	1958  86 E9			     xchg    ch,cl
  12858	195A  86 CE			     xchg    cl,dh
  12859	195C  86 F2			     xchg    dh,dl
  12860	195E  80 EB 08			     sub     bl,8
  12861	1961  75 F1			     jnz     norm1
  12862	1963  C3			     ret		     ; cx:dx = zero
  12863
  12864	1964  FE CB		     norm2:  dec     bl		     ; shl until bit 31	set
  12865	1966  D1 E2			     shl     dx,1
  12866	1968  D1 D1			     rcl     cx,1
  12867	196A  0A ED			     or	     ch,ch
  12868	196C  79 F6		     norm3:  jns     norm2
  12869	196E  8A C3			     mov     al,bl	     ; adjust accum exp
  12870	1970  2C 20			     sub     al,32
  12871	1972  BB 182Br			     mov     bx,offset acce
  12872	1975  02 07			     add     al,[bx]
  12873	1977  88 07			     mov     [bx],al
  12874	1979  74 04			     jz	     norm4
  12875	197B  D0 D8			     rcr     al,1	     ; carry to	sign
  12876	197D  22 C0			     and     al,al	     ; sign = underflow
  12877	197F  C3		     norm4:  ret
  12878
  12879				     ; Round the cx:dx registers, save to acc
  12880				     ; entry - cx:dx
  12881				     ; exit  - cx:dh al=packed msb dl=exp cy=ovf
  12882
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 227
kernel.asm



  12883	1980  22 D2		     rondr:  and     dl,dl	     ; test bit	7 and clear cy
  12884	1982  BB 182Br			     mov     bx,offset acce  ; exp
  12885	1985  8A 17			     mov     dl,[bx]
  12886	1987  79 10			     jns     rondr1
  12887	1989  FE C6			     inc     dh		     ; round up	cx:dh dl=exp
  12888	198B  75 0C			     jnz     rondr1
  12889	198D  41			     inc     cx
  12890	198E  75 09			     jnz     rondr1
  12891	1990  B5 80			     mov     ch,80h	     ; new 1st fraction
  12892	1992  80 C2 01			     add     dl,1	     ; inc exp adjust cy
  12893	1995  88 16 182Br		     mov     acce,dl	     ; new acc exp
  12894	1999  72 08		     rondr1: jc	     rondr2	     ; overflow
  12895	199B  8A C5			     mov     al,ch
  12896	199D  43			     inc     bx		     ; accs
  12897	199E  32 07			     xor     al,[bx]	     ; a=packed	msb
  12898	19A0  E9 FF17			     jmp     stom1	     ; save cx:dh to acc
  12899
  12900	19A3  C3		     rondr2: ret
  12901
  12902				     ; fsu   floating point subtract subroutine
  12903
  12904	19A4  B5 80		     fsu:    mov     ch,80h	     ; mask to change operand sign
  12905					     ignore2
1 12906	19A6  A9			     db	     0a9h    ;
  12907
  12908				     ; fad   floating point add	subroutine
  12909
  12910	19A7  B5 00		     fad:    mov     ch,0
  12911	19A9  8A 17			     mov     dl,[bx]	     ; load operand
  12912	19AB  32 6F 01			     xor     ch,[bx+1]
  12913	19AE  8A 4F 02			     mov     cl,[bx+2]
  12914	19B1  8A 77 03			     mov     dh,[bx+3]
  12915	19B4  22 D2			     and     dl,dl
  12916	19B6  74 20			     jz	     fad2	     ; operand zero
  12917
  12918	19B8  8A C5			     mov     al,ch	     ; unpack
  12919	19BA  80 CD 80			     or	     ch,80h
  12920	19BD  32 C5			     xor     al,ch	     ; generate	subtraction flag
  12921
  12922	19BF  BB 182Cr			     mov     bx,offset accs
  12923	19C2  32 07			     xor     al,[bx]
  12924	19C4  A2 1830r			     mov     sf,al
  12925
  12926				     ; determine relative magnitudes of	operand	and accum
  12927
  12928	19C7  4B			     dec     bx
  12929	19C8  8A 07			     mov     al,[bx]	     ; acce
  12930	19CA  0A C0			     or	     al,al
  12931	19CC  74 6D			     jz	     fad8	     ; accum zero
  12932
  12933	19CE  2A C2			     sub     al,dl	     ; get difference of exponents
  12934	19D0  72 09			     jc	     fad3	     ; accum smaller
  12935
  12936				     ; check insignificant operand
  12937
  12938	19D2  78 04			     js	     fad2
  12939
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 228
kernel.asm



  12940	19D4  3C 19			     cmp     al,25	     ; compare shift count to 25
  12941	19D6  72 1D			     jc	     fad4
  12942
  12943	19D8  E9 FEF4		     fad2:   jmp     lodr
  12944
  12945				     ; check insignificant accum
  12946
  12947	19DB  79 5E		     fad3:   jns     fad8
  12948
  12949	19DD  3C E7			     cmp     al,0-25	     ; compare shift count to -25
  12950	19DF  72 5A			     jc	     fad8	     ; move operand to accum
  12951
  12952	19E1  88 17			     mov     [bx],dl	     ; set acce
  12953	19E3  F6 D8			     neg     al		     ; complement shift	count
  12954	19E5  8A 16 1830r		     mov     dl,sf
  12955	19E9  30 57 01			     xor     [bx+1],dl	     ; set accs
  12956	19EC  86 6F 02			     xchg    ch,[bx+2]	     ; exchange	fraction
  12957	19EF  86 4F 03			     xchg    cl,[bx+3]
  12958	19F2  86 77 04			     xchg    dh,[bx+4]
  12959
  12960				     ; position	the operand, check if add or subtract
  12961
  12962	19F5  E8 FF3E		     fad4:   call    shrr
  12963	19F8  BB 182Fr			     mov     bx,offset acc3
  12964	19FB  A0 1830r			     mov     al,sf
  12965	19FE  0A C0			     or	     al,al
  12966	1A00  78 1B			     js	     fad6
  12967
  12968	1A02  02 37			     add     dh,[bx]	     ; add
  12969	1A04  12 4F FF			     adc     cl,[bx-1]
  12970	1A07  12 6F FE			     adc     ch,[bx-2]
  12971	1A0A  73 0E			     jnc     fad5
  12972
  12973	1A0C  D1 D9			     rcr     cx,1	     ; rshift fraction
  12974	1A0E  D1 DA			     rcr     dx,1
  12975	1A10  80 06 182Br 01		     add     byte ptr acce,1 ; adjust exponent
  12976	1A15  73 03			     jnc     fad5
  12977	1A17  E9 FE66			     jmp     ovf	     ; overflow
  12978
  12979	1A1A  E9 FEE4		     fad5:   jmp     fpack
  12980
  12981	1A1D  F6 DA		     fad6:   neg     dl		     ; subtract
  12982	1A1F  8A 07			     mov     al,[bx]
  12983	1A21  1A C6			     sbb     al,dh
  12984	1A23  8A F0			     mov     dh,al
  12985	1A25  8A 47 FF			     mov     al,[bx-1]
  12986	1A28  1A C1			     sbb     al,cl
  12987	1A2A  8A C8			     mov     cl,al
  12988	1A2C  8A 47 FE			     mov     al,[bx-2]
  12989	1A2F  1A C5			     sbb     al,ch
  12990	1A31  8A E8			     mov     ch,al
  12991	1A33  73 03			     jnc     fad7
  12992	1A35  E8 FF0D			     call    fcpl	     ; complement
  12993	1A38  E9 FEBB		     fad7:   jmp     npack
  12994
  12995				     ; move operand to accumulator
  12996
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 229
kernel.asm



  12997	1A3B  A0 1830r		     fad8:   mov     al,sf
  12998	1A3E  BB 182Cr			     mov     bx,offset accs
  12999	1A41  32 07			     xor     al,[bx]
  13000	1A43  E9 FE65			     jmp     lod2
  13001
  13002				     ; read the	operand	at (bx), check the accum exponent
  13003
  13004	1A46  8A E8		     mdex:   mov     ch,al
  13005	1A48  8A 4F 01			     mov     cl,[bx+1]
  13006	1A4B  8A 77 02			     mov     dh,[bx+2]
  13007	1A4E  8A 57 03			     mov     dl,[bx+3]
  13008
  13009	1A51  BB 182Br			     mov     bx,offset acce  ; accum exp
  13010	1A54  8A 07			     mov     al,[bx]
  13011	1A56  0A C0			     or	     al,al
  13012	1A58  74 24			     jz	     mdex2	     ; is zero
  13013
  13014	1A5A  02 C5			     add     al,ch	     ; result exp plus bias
  13015	1A5C  8A E8			     mov     ch,al
  13016	1A5E  D0 D8			     rcr     al,1	     ; carry to	sign
  13017	1A60  32 C5			     xor     al,ch	     ; carry and sign must differ
  13018	1A62  8A C5			     mov     al,ch	     ; result exp plus bias
  13019	1A64  B5 80			     mov     ch,80h	     ; exp bias, sign mask, most sig bit
  13020	1A66  79 10			     jns     mdex1	     ; if over or underflow
  13021
  13022	1A68  2A C5			     sub     al,ch	     ; remove excess exp bias
  13023	1A6A  74 12			     jz	     mdex2	     ; return if underflow
  13024
  13025	1A6C  88 07			     mov     [bx],al	     ; result exp
  13026	1A6E  43			     inc     bx		     ; address accum sign
  13027	1A6F  30 0F			     xor     [bx],cl	     ; result sign in sign bit
  13028	1A71  20 2F			     and     [bx],ch	     ; result sign
  13029
  13030	1A73  8A C1			     mov     al,cl	     ; operand sign and	1st fraction
  13031	1A75  0A C5			     or	     al,ch	     ; operand first fraction
  13032	1A77  C3			     ret
  13033
  13034	1A78  D0 C0		     mdex1:  rol     al,1	     ; set carry bit if	overflow
  13035	1A7A  72 02			     jc	     mdex2
  13036	1A7C  2A C0			     sub     al,al	     ; clear register
  13037	1A7E  C3		     mdex2:  ret
  13038
  13039				     ; fixed point multiply subroutine	al:dx *	acc -> cx:dh
  13040
  13041	1A7F  8B FA		     mulx:   mov     di,dx	     ; 3rd 2nd multiplicand
  13042
  13043				     ; multiply	 by each accumulator fraction in turn
  13044
  13045	1A81  2A E4			     sub     ah,ah	     ; clear 6th product
  13046	1A83  2B D2			     sub     dx,dx	     ; clear 4th 5th product
  13047	1A85  BB 182Fr			     mov     bx,offset acc3  ; multiply	by accum 3rd fraction
  13048	1A88  E8 000D			     call    mulx2
  13049	1A8B  BB 182Er			     mov     bx,offset acc2  ; multiply	by accum 2nd fraction
  13050	1A8E  E8 0003			     call    mulx1
  13051	1A91  BB 182Dr			     mov     bx,offset acc1
  13052
  13053				     ; multiply	by one accumulator byte
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 230
kernel.asm



  13054
  13055	1A94  8A E6		     mulx1:  mov     ah,dh	     ; 5th partial product
  13056	1A96  8B D1			     mov     dx,cx	     ; 3rd 4th partial prod
  13057	1A98  8A 2F		     mulx2:  mov     ch,[bx]	     ; multiplier
  13058	1A9A  2A C9			     sub     cl,cl	     ; 2nd partial prod
  13059	1A9C  3A CD			     cmp     cl,ch	     ; set carry bit for exit flag
  13060	1A9E  72 05			     jc	     mulx4	     ; if multiplier is	zero
  13061	1AA0  8A CE			     mov     cl,dh	     ; 2nd partial product
  13062	1AA2  8A F2			     mov     dh,dl	     ; 3rd partial prod
  13063	1AA4  C3		     mulx3:  ret
  13064
  13065				     ; loop for	each bit of multiplier byte
  13066
  13067	1AA5  12 E4		     mulx4:  adc     ah,ah	     ; shift exit flag out if done
  13068	1AA7  74 FB			     jz	     mulx3	     ; exit if multiplication done
  13069	1AA9  D1 D2			     rcl     dx,1	     ; 4th 3rd partial prod
  13070	1AAB  D1 D1			     rcl     cx,1	     ; 2nd 1st partial prod
  13071	1AAD  73 F6			     jnc     mulx4	     ; if addition required
  13072
  13073				     ; add the multiplicand to the product if the multiplier bit is one
  13074
  13075	1AAF  03 D7			     add     dx,di	     ; 4th 3rd partial prod
  13076	1AB1  12 C8			     adc     cl,al	     ; 2nd partial prod
  13077	1AB3  80 D5 00			     adc     ch,0	     ; add carry to 1st	prod
  13078	1AB6  F8			     clc
  13079	1AB7  EB EC			     jmp     mulx4
  13080
  13081				     ; fmu   floating point multiplication subroutine
  13082
  13083	1AB9  8A 07		     fmu:    mov     al,[bx]	     ; operand exponent
  13084	1ABB  0A C0			     or	     al,al
  13085	1ABD  53			     push    bx
  13086	1ABE  74 03			     jz	     fmu1
  13087	1AC0  E8 FF83			     call    mdex	     ; read operand
  13088	1AC3  5B		     fmu1:   pop     bx
  13089	1AC4  74 16			     jz	     fmu3	     ; zero or underflow
  13090	1AC6  72 17			     jc	     fmu4	     ; overflow
  13091	1AC8  E8 FFB4			     call    mulx	     ; fixed mult
  13092	1ACB  0A ED			     or	     ch,ch	     ; normalize if necessary
  13093	1ACD  78 0A			     js	     fmu2
  13094	1ACF  FE 0E 182Br		     dec     byte ptr acce   ; dec accum exp
  13095	1AD3  74 07			     jz	     fmu3	     ; underflow
  13096	1AD5  D1 E2			     shl     dx,1
  13097	1AD7  D1 D1			     rcl     cx,1
  13098	1AD9  E9 FE25		     fmu2:   jmp     fpack
  13099
  13100	1ADC  E9 FDAA		     fmu3:   jmp     zro	     ; zero or underflow
  13101	1ADF  E9 FD9E		     fmu4:   jmp     ovf	     ; overflow
  13102
  13103				     ; fixed point divide
  13104				     ; entry - al:dx
  13105				     ; exit  - cx:dx  nc=overflow
  13106
  13107				     ; subtract	divisor	from accum to obtain 1st remainder
  13108
  13109	1AE2  BB 182Dr		     divx:   mov     bx,offset acc1
  13110	1AE5  28 57 02			     sub     [bx+2],dl	     ; acc 3rd fraction
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 231
kernel.asm



  13111	1AE8  18 77 01			     sbb     [bx+1],dh	     ; acc 2nd fraction
  13112	1AEB  18 07			     sbb     [bx],al	     ; acc 1st fraction
  13113
  13114				     ; halve divisor and store for addition or subtraction  cl:dx:ch
  13115
  13116	1AED  2A E4			     sub     ah,ah	     ; init quot 1st fraction
  13117	1AEF  D0 F8			     sar     al,1	     ; divisor 1st fraction
  13118	1AF1  D1 DA			     rcr     dx,1	     ; divisor 2nd 3rd fraction
  13119	1AF3  D0 DC			     rcr     ah,1	     ; divisor 4th fraction is zero
  13120
  13121	1AF5  8B FA			     mov     di,dx
  13122
  13123				     ; load 1st	remainder
  13124
  13125	1AF7  8A 17			     mov     dl,[bx]	     ; 1st fraction
  13126	1AF9  8B 5F 01			     mov     bx,[bx+1]	     ; 2nd 3rd fraction
  13127	1AFC  86 FB			     xchg    bh,bl
  13128
  13129				     ; position	remainder, initialise quotient,	check sign
  13130
  13131	1AFE  2B C9			     sub     cx,cx	     ; init quot 2nd fraction
  13132	1B00  2A F6			     sub     dh,dh	     ; init quot 3rd fraction
  13133	1B02  0A D2			     or	     dl,dl	     ; test sign, clear	cy
  13134	1B04  78 28			     js	     divx5	     ; remainder negative
  13135	1B06  FE 06 182Br		     inc     byte ptr acce   ; inc quotient exponent
  13136	1B0A  75 01			     jnz     divx1
  13137	1B0C  C3			     ret		     ; overflow
  13138
  13139	1B0D  FE C6		     divx1:  inc     dh		     ; init quot 3rd fraction
  13140								     ; sub divisor if remainder	positive
  13141	1B0F  F6 DC		     divx2:  neg     ah		     ; 4th fraction is zero
  13142	1B11  F6 DC			     neg     ah
  13143	1B13  1B DF			     sbb     bx,di	     ; 2nd 3rd fraction
  13144	1B15  1A D0			     sbb     dl,al	     ; 1st fraction
  13145
  13146	1B17  D0 C5		     divx3:  rol     ch,1	     ; shift remainder left one	bit
  13147	1B19  D0 CD			     ror     ch,1
  13148	1B1B  73 01			     jnc     divx4
  13149	1B1D  C3			     ret		     ; division	complete
  13150
  13151	1B1E  D0 C4		     divx4:  rol     ah,1	     ; shift remainder 4th fraction to carry
  13152	1B20  D0 CC			     ror     ah,1
  13153	1B22  D1 D3			     rcl     bx,1	     ; shift cx:dx:bx
  13154	1B24  D1 D2			     rcl     dx,1
  13155	1B26  D1 D1			     rcl     cx,1
  13156
  13157								     ; branch if subtraction is	required
  13158	1B28  D0 CE			     ror     dh,1	     ; quotient	3rd fraction
  13159	1B2A  D0 C6			     rol     dh,1	     ; remainder sign to carry bit
  13160	1B2C  72 E1			     jc	     divx2	     ; to sub divisor if remainder positive
  13161								     ; add divisor if remainder	negative
  13162	1B2E  03 DF		     divx5:  add     bx,di	     ; 2nd 3rd fraction
  13163	1B30  12 D0			     adc     dl,al	     ; 1st fraction
  13164	1B32  EB E3			     jmp     divx3
  13165
  13166				     ; fdi   floating point division subroutine
  13167
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 232
kernel.asm



  13168	1B34  2A C0		     fdi:    sub     al,al
  13169	1B36  2A 07			     sub     al,[bx]	     ; complement of divisor exponent
  13170	1B38  3C 01			     cmp     al,1	     ; set carry if division by	zero
  13171	1B3A  53			     push    bx
  13172	1B3B  72 03			     jc	     fdi1
  13173	1B3D  E8 FF06			     call    mdex	     ; read operand if not zero
  13174	1B40  5B		     fdi1:   pop     bx
  13175	1B41  72 0A			     jc	     fdi2
  13176	1B43  74 0B			     jz	     fdi3
  13177	1B45  E8 FF9A			     call    divx	     ; fixed division
  13178	1B48  73 03			     jnc     fdi2
  13179	1B4A  E9 FDB4			     jmp     fpack
  13180
  13181	1B4D  E9 FD30		     fdi2:   jmp     ovf	     ; overflow	or division by zero
  13182	1B50  E9 FD36		     fdi3:   jmp     zro	     ; underflow or zero
  13183
  13184				     ; convert signed integer AL to float
  13185
  13186	1B53  8A E8		     flta:   mov     ch,al
  13187	1B55  2A C9			     sub     cl,cl
  13188	1B57  2B D2			     sub     dx,dx
  13189	1B59  B0 08			     mov     al,8
  13190					     ignore2
1 13191	1B5B  A9			     db	     0a9h    ;
  13192
  13193				     ; convert 32 bit signed integer to	float
  13194				     ; entry - cx:dx (int)
  13195
  13196	1B5C  B0 20		     flt:    mov     al,32	     ; scaling factor
  13197	1B5E  34 80			     xor     al,80h	     ; apply exponent bias
  13198	1B60  BB 182Br			     mov     bx,offset acce
  13199	1B63  88 07			     mov     [bx],al
  13200	1B65  C6 47 01 80		     mov     byte ptr [bx+1],80h ; assume positive
  13201	1B69  0A ED			     or	     ch,ch
  13202	1B6B  79 03			     jns     flt2
  13203	1B6D  E8 FDD5			     call    fcpl	     ; negate
  13204	1B70  E9 FD83		     flt2:   jmp     npack
  13205
  13206				     ; fix   convert float in acc to 32	bit signed integer
  13207				     ; exit  - cx:dx (int)  cy=overflow
  13208
  13209	1B73  B2 20		     fix:    mov     dl,32	     ; scaling
  13210	1B75  0A C0			     or	     al,al
  13211	1B77  74 20			     jz	     fix2	     ; zero
  13212	1B79  86 D0			     xchg    dl,al
  13213	1B7B  04 7F			     add     al,80h-1	     ; add bias-1
  13214	1B7D  2A C2			     sub     al,dl	     ; shift count -1
  13215	1B7F  72 16			     jc	     fix1	     ; accum too large
  13216	1B81  3C 1F			     cmp     al,31	     ; compare to large	shift
  13217	1B83  73 14			     jnc     fix2	     ; accum too small
  13218	1B85  FE C0			     inc     al		     ; shift count
  13219	1B87  80 CD 80			     or	     ch,80h	     ; unpack msb
  13220	1B8A  E8 FDA9			     call    shrr	     ; position	the fraction
  13221	1B8D  F6 06 182Cr 80		     test    byte ptr accs,80h
  13222	1B92  78 03			     js	     fix1
  13223	1B94  E8 FDAE			     call    fcpl
  13224	1B97  F8		     fix1:   clc
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 233
kernel.asm



  13225	1B98  C3			     ret
  13226
  13227	1B99  2B C9		     fix2:   sub     cx,cx	     ; zero
  13228	1B9B  2B D2			     sub     dx,dx
  13229	1B9D  C3			     ret
  13230
  13231				     ; Round/floor/trunc accum to integer
  13232				     ; entry - al cx:dh
  13233				     ; exit  - al cx:dh	dl=signed integer
  13234
  13235	1B9E  B3 01		     flr:    mov     bl,1	     ; mode
  13236	1BA0  0A C0		     flr1:   or	     al,al
  13237	1BA2  74 53			     jz	     flr6	     ; zero
  13238	1BA4  8A D6			     mov     dl,dh
  13239	1BA6  B4 98			     mov     ah,80h+24
  13240	1BA8  3A C4			     cmp     al,ah
  13241	1BAA  73 45			     jnc     flr5	     ; no fraction
  13242	1BAC  88 26 182Br		     mov     acce,ah
  13243	1BB0  8A FD			     mov     bh,ch	     ; save sign
  13244	1BB2  32 FB			     xor     bh,bl	     ; adjust for mode
  13245	1BB4  80 CD 80			     or	     ch,80h	     ; unpack msb
  13246	1BB7  F6 C3 01			     test    bl,1
  13247	1BBA  74 0A			     jz	     flr2
  13248	1BBC  0A FF			     or	     bh,bh
  13249	1BBE  79 06			     jns     flr2
  13250	1BC0  80 EE 01			     sub     dh,1	     ; dec cx:dh
  13251	1BC3  83 D9 00			     sbb     cx,0
  13252	1BC6  F6 D8		     flr2:   neg     al
  13253	1BC8  02 C4			     add     al,ah
  13254	1BCA  E8 FD69			     call    shrr
  13255	1BCD  F6 C3 01			     test    bl,1
  13256	1BD0  74 0A			     jz	     flr3
  13257	1BD2  0A FF			     or	     bh,bh
  13258	1BD4  79 06			     jns     flr3
  13259	1BD6  80 C6 01			     add     dh,1	     ; inc cx:dh
  13260	1BD9  83 D1 00			     adc     cx,0
  13261	1BDC  0A DB		     flr3:   or	     bl,bl
  13262	1BDE  75 08			     jnz     flr4
  13263	1BE0  02 D2			     add     dl,dl	     ; round
  13264	1BE2  80 D6 00			     adc     dh,0
  13265	1BE5  83 D1 00			     adc     cx,0
  13266	1BE8  52		     flr4:   push    dx
  13267	1BE9  2A D2			     sub     dl,dl
  13268	1BEB  E8 FD08			     call    npack	     ; normalize and pack
  13269	1BEE  5B			     pop     bx
  13270	1BEF  8A D7			     mov     dl,bh
  13271	1BF1  0A ED		     flr5:   or	     ch,ch
  13272	1BF3  79 02			     jns     flr6
  13273	1BF5  F6 DA			     neg     dl
  13274	1BF7  C3		     flr6:   ret
  13275
  13276				     ;	     FABS  (F: r1 -- r2	) or ( r1 -- r2	)
  13277
  13278					     hdr     1,'FABS'
1 13279					     cseg
1 13280	12CD			     heads   segment public	     ;
1 13281	12CD  04			     db	     ??0513	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 234
kernel.asm



1 13282	12CE  46 41 42 53		     db	     'FABS'	     ;
1 13283	12D2  12C3			     dw	     lastl	     ;
1 13284	12D4  1BF8r			     dw	     cfadr	     ;
1 13285	12D6			     heads   ends
1 13286					     cseg	     ;
  13287	1BF8			     fabss:
  13288	1BF8  8B 1E 0FC4r		     mov     bx,fspp
  13289	1BFC  80 67 01 7F		     and     byte ptr [bx+1],7fh
  13290					     nextt
1 13291	1C00  AD			     lodsw
1 13292	1C01  FF E0			     jmp     ax
  13293
  13294				     ;	     FNEGATE  (	r1 -- r2 )
  13295
  13296					     hdr     1,'FNEGATE'
1 13297					     cseg
1 13298	12D6			     heads   segment public	     ;
1 13299	12D6  07			     db	     ??0515	     ;
1 13300	12D7  46 4E 45 47 41 54	45	     db	     'FNEGATE'		     ;
1 13301	12DE  12CD			     dw	     lastl	     ;
1 13302	12E0  1C03r			     dw	     cfadr	     ;
1 13303	12E2			     heads   ends
1 13304					     cseg	     ;
  13305	1C03			     fneg:
  13306	1C03  8B 1E 0FC4r		     mov     bx,fspp
  13307	1C07  80 77 01 80		     xor     byte ptr [bx+1],80h
  13308					     nextt
1 13309	1C0B  AD			     lodsw
1 13310	1C0C  FF E0			     jmp     ax
  13311
  13312				     ;	     D>F  ( d -- r )
  13313
  13314					     hdr     1,'D>F'
1 13315					     cseg
1 13316	12E2			     heads   segment public	     ;
1 13317	12E2  03			     db	     ??0517	     ;
1 13318	12E3  44 3E 46			     db	     'D>F'	     ;
1 13319	12E6  12D6			     dw	     lastl	     ;
1 13320	12E8  1C0Er			     dw	     cfadr	     ;
1 13321	12EA			     heads   ends
1 13322					     cseg	     ;
  13323	1C0E  59		     dtof:   pop     cx
  13324	1C0F  5A			     pop     dx
  13325	1C10  E8 FF49			     call    flt
  13326	1C13  E9 FC60			     jmp     svop
  13327
  13328				     ;	     F>D  ( r -- d )
  13329
  13330					     hdr     1,'F>D'
1 13331					     cseg
1 13332	12EA			     heads   segment public	     ;
1 13333	12EA  03			     db	     ??0519	     ;
1 13334	12EB  46 3E 44			     db	     'F>D'	     ;
1 13335	12EE  12E2			     dw	     lastl	     ;
1 13336	12F0  1C16r			     dw	     cfadr	     ;
1 13337	12F2			     heads   ends
1 13338					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 235
kernel.asm



  13339	1C16  E8 FC3F		     ftod:   call    ldop
  13340	1C19  E8 FF57			     call    fix
  13341	1C1C  73 03			     jnc     ftod1
  13342	1C1E  E9 EBE7			     jmp     cverr	     ; overflow
  13343
  13344	1C21  52		     ftod1:  push    dx
  13345	1C22  51			     push    cx
  13346					     nextt
1 13347	1C23  AD			     lodsw
1 13348	1C24  FF E0			     jmp     ax
  13349
  13350				     ;	     S>F  ( n -- r )	     s>d d>f
  13351
  13352					     hdr     1,'S>F'
1 13353					     cseg
1 13354	12F2			     heads   segment public	     ;
1 13355	12F2  03			     db	     ??051B	     ;
1 13356	12F3  53 3E 46			     db	     'S>F'	     ;
1 13357	12F6  12EA			     dw	     lastl	     ;
1 13358	12F8  1C26r			     dw	     cfadr	     ;
1 13359	12FA			     heads   ends
1 13360					     cseg	     ;
  13361	1C26  E8 E64C		     stof:   call    docol
  13362	1C29  0742r 1C0Er		     dw	     stod,dtof
  13363	1C2D  0289r			     dw	     exit
  13364
  13365				     ;	     F>S  ( r -- n )	     f>d d>s
  13366
  13367					     hdr     1,'F>S'
1 13368					     cseg
1 13369	12FA			     heads   segment public	     ;
1 13370	12FA  03			     db	     ??051D	     ;
1 13371	12FB  46 3E 53			     db	     'F>S'	     ;
1 13372	12FE  12F2			     dw	     lastl	     ;
1 13373	1300  1C2Fr			     dw	     cfadr	     ;
1 13374	1302			     heads   ends
1 13375					     cseg	     ;
  13376	1C2F  E8 E643		     ftos:   call    docol
  13377	1C32  1C16r 02FEr		     dw	     ftod,dtos
  13378	1C36  0289r			     dw	     exit
  13379
  13380				     ;	     F0=  ( r -- flag )
  13381
  13382					     hdr     1,'F0='
1 13383					     cseg
1 13384	1302			     heads   segment public	     ;
1 13385	1302  03			     db	     ??051F	     ;
1 13386	1303  46 30 3D			     db	     'F0='	     ;
1 13387	1306  12FA			     dw	     lastl	     ;
1 13388	1308  1C38r			     dw	     cfadr	     ;
1 13389	130A			     heads   ends
1 13390					     cseg	     ;
  13391	1C38  E8 FC1D		     fze:    call    ldop
  13392	1C3B  75 03		     fze1:   jnz     ffl
  13393	1C3D  E9 F332			     jmp     true
  13394	1C40  E9 F336		     ffl:    jmp     false
  13395
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 236
kernel.asm



  13396
  13397				     ;	     F0<  ( r -- flag )
  13398
  13399					     hdr     1,'F0<'
1 13400					     cseg
1 13401	130A			     heads   segment public	     ;
1 13402	130A  03			     db	     ??0521	     ;
1 13403	130B  46 30 3C			     db	     'F0<'	     ;
1 13404	130E  1302			     dw	     lastl	     ;
1 13405	1310  1C43r			     dw	     cfadr	     ;
1 13406	1312			     heads   ends
1 13407					     cseg	     ;
  13408	1C43  E8 FC12		     fzl:    call    ldop
  13409	1C46  79 F8		     fzl1:   jns     ffl
  13410	1C48  E9 F327			     jmp     true
  13411
  13412				     ;	     F<	 ( r1 r2 -- flag )
  13413
  13414					     hdr     1,'F<'
1 13415					     cseg
1 13416	1312			     heads   segment public	     ;
1 13417	1312  02			     db	     ??0523	     ;
1 13418	1313  46 3C			     db	     'F<'	     ;
1 13419	1315  130A			     dw	     lastl	     ;
1 13420	1317  1C4Br			     dw	     cfadr	     ;
1 13421	1319			     heads   ends
1 13422					     cseg	     ;
  13423	1C4B  E8 FC17		     fles:   call    ld2op
  13424	1C4E  E8 FCB8			     call    fcmp
  13425	1C51  EB F3			     jmp     fzl1
  13426
  13427				     ;	     F0>  ( r -- flag )
  13428
  13429					     hdr     1,'F0>'
1 13430					     cseg
1 13431	1319			     heads   segment public	     ;
1 13432	1319  03			     db	     ??0525	     ;
1 13433	131A  46 30 3E			     db	     'F0>'	     ;
1 13434	131D  1312			     dw	     lastl	     ;
1 13435	131F  1C53r			     dw	     cfadr	     ;
1 13436	1321			     heads   ends
1 13437					     cseg	     ;
  13438	1C53  E8 FC02		     fzg:    call    ldop
  13439	1C56  74 E8		     fzg1:   jz	     ffl
  13440	1C58  78 E6			     js	     ffl
  13441	1C5A  E9 F315			     jmp     true
  13442
  13443				     ;	     F>	 ( r1 r2 -- flag )
  13444
  13445					     hdr     1,'F>'
1 13446					     cseg
1 13447	1321			     heads   segment public	     ;
1 13448	1321  02			     db	     ??0527	     ;
1 13449	1322  46 3E			     db	     'F>'	     ;
1 13450	1324  1319			     dw	     lastl	     ;
1 13451	1326  1C5Dr			     dw	     cfadr	     ;
1 13452	1328			     heads   ends
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 237
kernel.asm



1 13453					     cseg	     ;
  13454	1C5D  E8 FC05		     fgre:   call    ld2op
  13455	1C60  E8 FCA6			     call    fcmp
  13456	1C63  EB F1			     jmp     fzg1
  13457
  13458				     ;	     FMIN  ( r1	r2 -- r3 )
  13459
  13460					     hdr     1,'FMIN'
1 13461					     cseg
1 13462	1328			     heads   segment public	     ;
1 13463	1328  04			     db	     ??0529	     ;
1 13464	1329  46 4D 49 4E		     db	     'FMIN'	     ;
1 13465	132D  1321			     dw	     lastl	     ;
1 13466	132F  1C65r			     dw	     cfadr	     ;
1 13467	1331			     heads   ends
1 13468					     cseg	     ;
  13469	1C65  E8 FBFD		     fmin:   call    ld2op
  13470	1C68  E8 FC9E			     call    fcmp
  13471	1C6B  78 03			     js	     fmin1
  13472	1C6D  E8 FC23			     call    lod	     ; r1 >= r2
  13473	1C70  E9 FC03		     fmin1:  jmp     svop
  13474
  13475				     ;	     FMAX  ( r1	r2 -- r3 )
  13476
  13477					     hdr     1,'FMAX'
1 13478					     cseg
1 13479	1331			     heads   segment public	     ;
1 13480	1331  04			     db	     ??052B	     ;
1 13481	1332  46 4D 41 58		     db	     'FMAX'	     ;
1 13482	1336  1328			     dw	     lastl	     ;
1 13483	1338  1C73r			     dw	     cfadr	     ;
1 13484	133A			     heads   ends
1 13485					     cseg	     ;
  13486	1C73  E8 FBEF		     fmax:   call    ld2op
  13487	1C76  E8 FC90			     call    fcmp
  13488	1C79  79 03			     jns     fmax1
  13489	1C7B  E8 FC15			     call    lod	     ; r1 < r2
  13490	1C7E  E9 FBF5		     fmax1:  jmp     svop
  13491
  13492				     ;	     FLOOR  ( r1 -- r2 )
  13493
  13494					     hdr     1,'FLOOR'
1 13495					     cseg
1 13496	133A			     heads   segment public	     ;
1 13497	133A  05			     db	     ??052D	     ;
1 13498	133B  46 4C 4F 4F 52		     db	     'FLOOR'	     ;
1 13499	1340  1331			     dw	     lastl	     ;
1 13500	1342  1C81r			     dw	     cfadr	     ;
1 13501	1344			     heads   ends
1 13502					     cseg	     ;
  13503	1C81  E8 FBD4		     floor:  call    ldop
  13504	1C84  E8 FF17			     call    flr
  13505	1C87  E9 FBEC			     jmp     svop
  13506
  13507				     ;	     FROUND  ( r1 -- r2	)
  13508
  13509					     hdr     1,'FROUND'
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 238
kernel.asm



1 13510					     cseg
1 13511	1344			     heads   segment public	     ;
1 13512	1344  06			     db	     ??052F	     ;
1 13513	1345  46 52 4F 55 4E 44		     db	     'FROUND'		     ;
1 13514	134B  133A			     dw	     lastl	     ;
1 13515	134D  1C8Ar			     dw	     cfadr	     ;
1 13516	134F			     heads   ends
1 13517					     cseg	     ;
  13518	1C8A  E8 FBCB		     frnd:   call    ldop
  13519	1C8D  B3 00			     mov     bl,0
  13520	1C8F  E8 FF0E		     frnd1:  call    flr1
  13521	1C92  E9 FBE1			     jmp     svop
  13522
  13523
  13524				     ;	     F+	 ( r1 r2 -- r3 )
  13525
  13526					     hdr     1,'F+'
1 13527					     cseg
1 13528	134F			     heads   segment public	     ;
1 13529	134F  02			     db	     ??0531	     ;
1 13530	1350  46 2B			     db	     'F+'	     ;
1 13531	1352  1344			     dw	     lastl	     ;
1 13532	1354  1C95r			     dw	     cfadr	     ;
1 13533	1356			     heads   ends
1 13534					     cseg	     ;
  13535	1C95  E8 FBCD		     fplus:  call    ld2op
  13536	1C98  E8 FD0C			     call    fad
  13537	1C9B  E9 FBD8			     jmp     svop
  13538
  13539				     ;	     F-	 ( r1 r2 -- r3 )
  13540
  13541					     hdr     1,'F-'
1 13542					     cseg
1 13543	1356			     heads   segment public	     ;
1 13544	1356  02			     db	     ??0533	     ;
1 13545	1357  46 2D			     db	     'F-'	     ;
1 13546	1359  134F			     dw	     lastl	     ;
1 13547	135B  1C9Er			     dw	     cfadr	     ;
1 13548	135D			     heads   ends
1 13549					     cseg	     ;
  13550	1C9E  E8 FBC4		     fsubb:  call    ld2op
  13551	1CA1  E8 FD00			     call    fsu
  13552	1CA4  E9 FBCF			     jmp     svop
  13553
  13554				     ;	     F*	 ( r1 r2 -- r3 )
  13555
  13556					     hdr     1,'F*'
1 13557					     cseg
1 13558	135D			     heads   segment public	     ;
1 13559	135D  02			     db	     ??0535	     ;
1 13560	135E  46 2A			     db	     'F*'	     ;
1 13561	1360  1356			     dw	     lastl	     ;
1 13562	1362  1CA7r			     dw	     cfadr	     ;
1 13563	1364			     heads   ends
1 13564					     cseg	     ;
  13565	1CA7  E8 FBBB		     fstar:  call    ld2op
  13566	1CAA  E8 FE0C			     call    fmu
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 239
kernel.asm



  13567	1CAD  E9 FBC6			     jmp     svop
  13568
  13569				     ;	     F/	 ( r1 r2 -- r3 )
  13570
  13571					     hdr     1,'F/'
1 13572					     cseg
1 13573	1364			     heads   segment public	     ;
1 13574	1364  02			     db	     ??0537	     ;
1 13575	1365  46 2F			     db	     'F/'	     ;
1 13576	1367  135D			     dw	     lastl	     ;
1 13577	1369  1CB0r			     dw	     cfadr	     ;
1 13578	136B			     heads   ends
1 13579					     cseg	     ;
  13580	1CB0  E8 FBB2		     fslas:  call    ld2op
  13581	1CB3  E8 FE7E			     call    fdi
  13582	1CB6  E9 FBBD			     jmp     svop
  13583
  13584				     ;	     FRANDOM  (	r1 -- r2 )
  13585
  13586					     hdr     1,'FRANDOM'
1 13587					     cseg
1 13588	136B			     heads   segment public	     ;
1 13589	136B  07			     db	     ??0539	     ;
1 13590	136C  46 52 41 4E 44 4F	4D	     db	     'FRANDOM'		     ;
1 13591	1373  1364			     dw	     lastl	     ;
1 13592	1375  1CB9r			     dw	     cfadr	     ;
1 13593	1377			     heads   ends
1 13594					     cseg	     ;
  13595	1CB9  E8 FB9C		     rand:   call    ldop
  13596	1CBC  78 16			     js	     rand1		     ; neg = seed generator
  13597	1CBE  9C			     pushf
  13598	1CBF  BB 1CFEr			     mov     bx,offset rand5
  13599	1CC2  E8 FBCE			     call    lod
  13600	1CC5  9D			     popf
  13601	1CC6  74 2B			     jz	     rand2		     ; zero = return last value
  13602	1CC8  BB 1CF6r			     mov     bx,offset rand3	     ; pos = get next value
  13603	1CCB  E8 FDEB			     call    fmu
  13604	1CCE  BB 1CFAr			     mov     bx,offset rand4
  13605	1CD1  E8 FCD3			     call    fad
  13606	1CD4  BB 182Fr		     rand1:  mov     bx,offset acc3
  13607	1CD7  8A 2F			     mov     ch,[bx]		     ; swap msb	lsb
  13608	1CD9  8A 4F FF			     mov     cl,[bx-1]
  13609	1CDC  8A 77 FE			     mov     dh,[bx-2]
  13610	1CDF  C6 47 FD 80		     mov     byte ptr [bx-3],80h     ; make positive
  13611	1CE3  8A 57 FC			     mov     dl,[bx-4]
  13612	1CE6  C6 47 FC 80		     mov     byte ptr [bx-4],80h     ; fix exponent
  13613	1CEA  E8 FC09			     call    npack		     ; normalize
  13614	1CED  BB 1CFEr			     mov     bx,offset rand5
  13615	1CF0  E8 FBC5			     call    stom
  13616	1CF3  E9 FB80		     rand2:  jmp     svop
  13617
  13618	1CF6  98 35 44 7A	     rand3   db	     98h,35h,44h,7Ah
  13619	1CFA  68 28 B1 46	     rand4   db	     68h,28h,0B1h,46h
  13620	1CFE  80 31 41 59	     rand5   db	     80h,31h,41h,59h	     ; seed
  13621
  13622					     cseg
  13623
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 240
kernel.asm



  13624	1D02  E8 E4B5		     fxp:    call    docre		     ; variable	fxp
  13625	1D05  ????			     dw	     ?
  13626
  13627	1D07  E8 E4B0		     dpf:    call    docre		     ; variable	dpf
  13628	1D0A  ????			     dw	     ?
  13629
  13630	1D0C  E8 E4AB		     fvr:    call    docre		     ; fvariable fvr
  13631	1D0F  ???? ????			     dw	     ?,?
  13632
  13633				     ;	     +dig  ( a u -- a2 u2 )	     begin dup while c/string [char] 0
  13634				     ;					     - dup 9 u>	if drop	-1 /string end
  13635				     ;					     0 d>f fvr f@ 10.E f* f+ fvr f!
  13636				     ;					     dpf @ exp +! repeat
  13637
  13638					     hdr     x,'+DIG'
1 13639					     cseg	     ;
  13640	1D13  E8 E55F		     pdig:   call    docol
  13641	1D16  0304r		     pdig1   dw	     dupp
  13642	1D18  0A92r 1D54r		     dw	     zbran,pdig3
  13643	1D1C  0543r			     dw	     csst
  13644	1D1E  02A1r			     dw	     clit
  13645	1D20  30			     db	     '0'
  13646	1D21  0775r 0304r		     dw	     subb,dupp
  13647	1D25  02A1r			     dw	     clit
  13648	1D27  09			     db	     9
  13649	1D28  067Ar			     dw	     ugrea
  13650	1D2A  0A92r 1D36r		     dw	     zbran,pdig2
  13651	1D2E  02FEr 0F72r 0538r		     dw	     drop,true,sstr
  13652	1D34  0289r			     dw	     exit
  13653	1D36  0F79r 1C0Er	     pdig2   dw	     zero,dtof
  13654	1D3A  1D0Cr 1804r		     dw	     fvr,fat
  13655	1D3E  183Dr 1CA7r		     dw	     ften,fstar
  13656	1D42  1C95r			     dw	     fplus
  13657	1D44  1D0Cr 1810r		     dw	     fvr,fstor
  13658	1D48  1D07r 03D2r		     dw	     dpf,at
  13659	1D4C  1D02r 044Cr		     dw	     fxp,pstor
  13660	1D50  0A8Dr 1D16r		     dw	     bran,pdig1
  13661	1D54  0289r		     pdig3   dw	     exit
  13662
  13663				     ;	     /mant  ( a	u -- a2	u2 n )	     tuck +dig dup if over c@ [char] .
  13664				     ;					     = if dpf on 1 /string +dig	then
  13665				     ;					     then rot over - dpf @ +
  13666
  13667					     hdr     x,'/MANT'
1 13668					     cseg	     ;
  13669	1D56  E8 E51C		     sman:   call    docol
  13670	1D59  036Ar			     dw	     tuck
  13671	1D5B  1D13r 0304r		     dw	     pdig,dupp
  13672	1D5F  0A92r 1D7Ar		     dw	     zbran,sman1
  13673	1D63  031Cr 03DEr		     dw	     over,cat
  13674	1D67  02A1r			     dw	     clit
  13675	1D69  2E			     db	     '.'
  13676	1D6A  063Br			     dw	     equal
  13677	1D6C  0A92r 1D7Ar		     dw	     zbran,sman1
  13678	1D70  1D07r 0453r		     dw	     dpf,on
  13679	1D74  0F7Fr 0538r 1D13r		     dw	     one,sstr,pdig
  13680	1D7A  0324r 031Cr 0775r	     sman1   dw	     rot,over,subb
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 241
kernel.asm



  13681	1D80  1D07r 03D2r 076Dr		     dw	     dpf,at,plus
  13682	1D86  0289r			     dw	     exit
  13683
  13684				     ;	     /exp  ( a u -- a2 u2 )  dup if over c@ 33 or [char] e = negate
  13685				     ;				     /string then /number drop fxp @ + begin
  13686				     ;				     ?dup while	dup 0< if 1+ fvr f@ 10e	f/
  13687				     ;				     else 1- fvr f@ 10e	f* then	fvr f! repeat
  13688
  13689					     hdr     x,'/EXP'
1 13690					     cseg	     ;
  13691	1D88  E8 E4EA		     sexp:   call    docol
  13692	1D8B  0304r			     dw	     dupp
  13693	1D8D  0A92r 1DA3r		     dw	     zbran,sexp1
  13694	1D91  031Cr 03DEr		     dw	     over,cat
  13695	1D95  02A1r			     dw	     clit
  13696	1D97  21			     db	     33
  13697	1D98  072Br			     dw	     orr
  13698	1D9A  02A1r			     dw	     clit
  13699	1D9C  65			     db	     'e'
  13700	1D9D  063Br			     dw	     equal
  13701	1D9F  0749r 0538r		     dw	     negat,sstr
  13702	1DA3  095Ar 02FEr	     sexp1   dw	     snumb,drop
  13703	1DA7  1D02r 03D2r 076Dr		     dw	     fxp,at,plus
  13704	1DAD  030Br		     sexp2   dw	     qdup
  13705	1DAF  0A92r 1DDBr		     dw	     zbran,sexp5
  13706	1DB3  0304r 0654r		     dw	     dupp,zless
  13707	1DB7  0A92r 1DC9r		     dw	     zbran,sexp3
  13708	1DBB  0798r			     dw	     onep
  13709	1DBD  1D0Cr 1804r		     dw	     fvr,fat
  13710	1DC1  183Dr 1CB0r		     dw	     ften,fslas
  13711	1DC5  0A8Dr 1DD3r		     dw	     bran,sexp4
  13712	1DC9  07A6r		     sexp3   dw	     onem
  13713	1DCB  1D0Cr 1804r		     dw	     fvr,fat
  13714	1DCF  183Dr 1CA7r		     dw	     ften,fstar
  13715	1DD3  1D0Cr 1810r	     sexp4   dw	     fvr,fstor
  13716	1DD7  0A8Dr 1DADr		     dw	     bran,sexp2
  13717	1DDB  0289r		     sexp5   dw	     exit
  13718
  13719				     ;	     /FLOAT  ( a u -- a2 u2 r )	     exp off dpf off 0.E fvr f!	/sign
  13720				     ;					     >r	/mant if /exp then fvr f@ r>
  13721				     ;					     if	fnegate	then
  13722
  13723					     hdr     1,'/FLOAT'
1 13724					     cseg
1 13725	1377			     heads   segment public	     ;
1 13726	1377  06			     db	     ??0541	     ;
1 13727	1378  2F 46 4C 4F 41 54		     db	     '/FLOAT'		     ;
1 13728	137E  136B			     dw	     lastl	     ;
1 13729	1380  1DDDr			     dw	     cfadr	     ;
1 13730	1382			     heads   ends
1 13731					     cseg	     ;
  13732	1DDD  E8 E495		     sflt:   call    docol
  13733	1DE0  1D02r 045Br		     dw	     fxp,off
  13734	1DE4  1D07r 045Br		     dw	     dpf,off
  13735	1DE8  176Cr			     dw	     flit
  13736	1DEA  00 00 00 00		     db	     0,0,0,0
  13737	1DEE  1D0Cr 1810r		     dw	     fvr,fstor
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 242
kernel.asm



  13738	1DF2  0941r 02C9r		     dw	     ssgn,tor
  13739	1DF6  1D56r			     dw	     sman
  13740	1DF8  0A92r 1DFEr		     dw	     zbran,sflt1
  13741	1DFC  1D88r			     dw	     sexp
  13742	1DFE  1D0Cr 1804r	     sflt1   dw	     fvr,fat
  13743	1E02  02D2r			     dw	     fromr
  13744	1E04  0A92r 1E0Ar		     dw	     zbran,sflt2
  13745	1E08  1C03r			     dw	     fneg
  13746	1E0A  0289r		     sflt2   dw	     exit
  13747
  13748				     ;	     >FLOAT  ( a u -- r	-1 | 0 )     -trailing /float fvr f! nip if false
  13749				     ;					     end fvr f@	true
  13750
  13751					     hdr     1,'>FLOAT'
1 13752					     cseg
1 13753	1382			     heads   segment public	     ;
1 13754	1382  06			     db	     ??0543	     ;
1 13755	1383  3E 46 4C 4F 41 54		     db	     '>FLOAT'		     ;
1 13756	1389  1377			     dw	     lastl	     ;
1 13757	138B  1E0Cr			     dw	     cfadr	     ;
1 13758	138D			     heads   ends
1 13759					     cseg	     ;
  13760	1E0C  E8 E466		     tflt:   call    docol
  13761	1E0F  04FAr 1DDDr		     dw	     dtrai,sflt
  13762	1E13  1D0Cr 1810r		     dw	     fvr,fstor
  13763	1E17  0362r			     dw	     nip
  13764	1E19  0A92r 1E21r		     dw	     zbran,tflt1
  13765	1E1D  0F79r			     dw	     false
  13766	1E1F  0289r			     dw	     exit
  13767	1E21  1D0Cr 1804r	     tflt1   dw	     fvr,fat
  13768	1E25  0F72r			     dw	     true
  13769	1E27  0289r			     dw	     exit
  13770
  13771					     hdr     1,'MAX-PRECISION'
1 13772					     cseg
1 13773	138D			     heads   segment public	     ;
1 13774	138D  0D			     db	     ??0545	     ;
1 13775	138E  4D 41 58 2D 50 52	45+	     db	     'MAX-PRECISION'	     ;
  13776	      43 49 53 49 4F 4E
1 13777	139B  1382			     dw	     lastl	     ;
1 13778	139D  1E29r			     dw	     cfadr	     ;
1 13779	139F			     heads   ends
1 13780					     cseg	     ;
  13781	1E29  E8 E5B2		     mprec:  call    docco	     ; max precision
  13782	1E2C  07			     db	     maxsig
  13783
  13784					     hdr     x,'EXSN'
1 13785					     cseg	     ;
  13786	1E2D  E8 E38A		     exsn:   call    docre	     ; exponent, sign
  13787	1E30  02*(????)			     dw	     2 dup (?)
  13788
  13789				     ;	     REPRESENT	( r c-addr n --	exp sign flag )
  13790				     ;				     2dup max-precision	max [char] 0 fill
  13791				     ;				     max-precision min 2>r fdup	f0< 0 exsn 2!
  13792				     ;				     fabs fdup f0= 0= if begin fdup 1.0e f<
  13793				     ;				     0=	while 10.0e f/ 1 exsn +! repeat	begin
  13794				     ;				     fdup 0.1e f< while	10.0e f* -1 exsn +!
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 243
kernel.asm



  13795				     ;				     repeat then r@ 0max 0 ?do 10.0e f*	loop
  13796				     ;				     fround f>d	2dup <#	#s #> dup r@ - exsn +!
  13797				     ;				     2r> rot min 1 max cmove d0= if 1 0	else
  13798				     ;				     exsn 2@ swap then true
  13799
  13800					     hdr     1,'REPRESENT'
1 13801					     cseg
1 13802	139F			     heads   segment public	     ;
1 13803	139F  09			     db	     ??0549	     ;
1 13804	13A0  52 45 50 52 45 53	45+	     db	     'REPRESENT'	     ;
  13805	      4E 54
1 13806	13A9  138D			     dw	     lastl	     ;
1 13807	13AB  1E34r			     dw	     cfadr	     ;
1 13808	13AD			     heads   ends
1 13809					     cseg	     ;
  13810	1E34  E8 E43E		     repr:   call    docol
  13811	1E37  037Er			     dw	     tdup
  13812	1E39  1E29r 0693r		     dw	     mprec,max
  13813	1E3D  02A1r			     dw	     clit
  13814	1E3F  30			     db	     '0'
  13815	1E40  0469r			     dw	     fill
  13816	1E42  1E29r 0684r		     dw	     mprec,min
  13817	1E46  02E1r			     dw	     ttor
  13818	1E48  17ABr 1C43r		     dw	     fdup,fzl
  13819	1E4C  0F79r 1E2Dr 03F7r		     dw	     zero,exsn,tstor
  13820	1E52  1BF8r			     dw	     fabss
  13821	1E54  17ABr 1C38r		     dw	     fdup,fze
  13822	1E58  0628r			     dw	     zequ
  13823	1E5A  0A92r 1E98r		     dw	     zbran,repr3
  13824	1E5E  17ABr		     repr1   dw	     fdup	     ; begin
  13825	1E60  176Cr			     dw	     flit
  13826	1E62  81 00 00 00		     db	     81h,0,0,0
  13827	1E66  1C4Br 0628r		     dw	     fles,zequ
  13828	1E6A  0A92r 1E7Cr		     dw	     zbran,repr2     ; while
  13829	1E6E  183Dr 1CB0r		     dw	     ften,fslas
  13830	1E72  0F7Fr 1E2Dr 044Cr		     dw	     one,exsn,pstor
  13831	1E78  0A8Dr 1E5Er		     dw	     bran,repr1	     ; repeat
  13832	1E7C  17ABr		     repr2   dw	     fdup	     ; begin
  13833	1E7E  176Cr			     dw	     flit
  13834	1E80  7D 4C CC CD		     db	     7dh,4ch,0cch,0cdh
  13835	1E84  1C4Br			     dw	     fles
  13836	1E86  0A92r 1E98r		     dw	     zbran,repr3     ; while
  13837	1E8A  183Dr 1CA7r		     dw	     ften,fstar
  13838	1E8E  0F72r 1E2Dr 044Cr		     dw	     true,exsn,pstor
  13839	1E94  0A8Dr 1E7Cr		     dw	     bran,repr2	     ; repeat
  13840	1E98  02DBr		     repr3   dw	     rat
  13841	1E9A  0690r 0F79r		     dw	     zmax,zero
  13842	1E9E  0AB4r 1EAAr		     dw	     xqdo,repr5
  13843	1EA2  183Dr 1CA7r	     repr4   dw	     ften,fstar
  13844	1EA6  0A9Br 1EA2r		     dw	     xloop,repr4
  13845	1EAA  1C8Ar 1C16r	     repr5   dw	     frnd,ftod
  13846	1EAE  037Er			     dw	     tdup
  13847	1EB0  09CCr 0A4Fr 09D7r		     dw	     bdigs,digs,edigs
  13848	1EB6  0304r			     dw	     dupp
  13849	1EB8  02DBr 0775r		     dw	     rat,subb	     ; handle overflow
  13850	1EBC  1E2Dr 044Cr		     dw	     exsn,pstor
  13851	1EC0  02EDr			     dw	     tfrom
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 244
kernel.asm



  13852	1EC2  0324r 0684r		     dw	     rot,min
  13853	1EC6  0F7Fr 0693r		     dw	     one,max
  13854	1ECA  047Br			     dw	     cmove
  13855	1ECC  0623r			     dw	     dzequ
  13856	1ECE  0A92r 1EDAr		     dw	     zbran,repr6
  13857	1ED2  0F7Fr 0F79r		     dw	     one,zero	     ; 0.0E fixup
  13858	1ED6  0A8Dr 1EE0r		     dw	     bran,repr7
  13859	1EDA  1E2Dr 03EEr	     repr6   dw	     exsn,tat
  13860	1EDE  0315r			     dw	     swap
  13861	1EE0  0F72r		     repr7   dw	     true
  13862	1EE2  0289r			     dw	     exit
  13863
  13864				     ;	     PRECISION	( -- u )
  13865
  13866					     hdr     1,'PRECISION'
1 13867					     cseg
1 13868	13AD			     heads   segment public	     ;
1 13869	13AD  09			     db	     ??054B	     ;
1 13870	13AE  50 52 45 43 49 53	49+	     db	     'PRECISION'	     ;
  13871	      4F 4E
1 13872	13B7  139F			     dw	     lastl	     ;
1 13873	13B9  1EE4r			     dw	     cfadr	     ;
1 13874	13BB			     heads   ends
1 13875					     cseg	     ;
  13876	1EE4  E8 E4EB		     prec:   call    doval
  13877	1EE7  ????			     dw	     ?		     ; set by FPINIT
  13878
  13879				     ;	     SET-PRECISION  ( u	-- )	     1 max max-precision min to	precision
  13880
  13881					     hdr     1,'SET-PRECISION'
1 13882					     cseg
1 13883	13BB			     heads   segment public	     ;
1 13884	13BB  0D			     db	     ??054D	     ;
1 13885	13BC  53 45 54 2D 50 52	45+	     db	     'SET-PRECISION'	     ;
  13886	      43 49 53 49 4F 4E
1 13887	13C9  13AD			     dw	     lastl	     ;
1 13888	13CB  1EE9r			     dw	     cfadr	     ;
1 13889	13CD			     heads   ends
1 13890					     cseg	     ;
  13891	1EE9  E8 E389		     setpr:  call    docol
  13892	1EEC  0F7Fr 0693r		     dw	     one,max
  13893	1EF0  1E29r 0684r		     dw	     mprec,min
  13894	1EF4  0F50r 1EE4r		     dw	     pto,prec
  13895	1EF8  0289r			     dw	     exit
  13896
  13897					     hdr     1,'FDP'
1 13898					     cseg
1 13899	13CD			     heads   segment public	     ;
1 13900	13CD  03			     db	     ??054F	     ;
1 13901	13CE  46 44 50			     db	     'FDP'	     ;
1 13902	13D1  13BB			     dw	     lastl	     ;
1 13903	13D3  1EFAr			     dw	     cfadr	     ;
1 13904	13D5			     heads   ends
1 13905					     cseg	     ;
  13906	1EFA  E8 E2BD		     fdp:    call    docre	     ; decimal point display
  13907	1EFD  ???? ????			     dw	     ?,?	     ; set by FPINIT
  13908
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 245
kernel.asm



  13909					     hdr     x,'FBUF'
1 13910					     cseg	     ;
  13911	1F01  E8 E2B6		     fbuf:   call    docre	     ; fp string buffer
  13912	1F04  07*(??)			     db	     maxsig dup	(?)
  13913
  13914					     hdr     x,'EX#'
1 13915					     cseg	     ;
  13916	1F0B  E8 E4C4		     exn:    call    doval	     ; exponent
  13917	1F0E  ????			     dw	     ?
  13918
  13919					     hdr     x,'SN#'
1 13920					     cseg	     ;
  13921	1F10  E8 E4BF		     snn:    call    doval	     ; sign
  13922	1F13  ????			     dw	     ?
  13923
  13924					     hdr     x,'EF#'
1 13925					     cseg	     ;
  13926	1F15  E8 E4BA		     efn:    call    doval	     ; exponent	factor
  13927	1F18  ????			     dw	     ?
  13928
  13929					     hdr     x,'PL#'
1 13930					     cseg	     ;
  13931	1F1A  E8 E4B5		     pln:    call    doval	     ; places after decimal point
  13932	1F1D  ????			     dw	     ?
  13933
  13934				     ;	     (f1)  ( r -- r exp	)
  13935				     ;				     fdup fbuf max-precision represent 2drop
  13936
  13937					     hdr     x,'(F1)'	     ; get exponent
1 13938					     cseg	     ;
  13939	1F1F  E8 E353		     pf1:    call    docol
  13940	1F22  17ABr			     dw	     fdup
  13941	1F24  1F01r 1E29r		     dw	     fbuf,mprec
  13942	1F28  1E34r 0378r		     dw	     repr,tdrop	     ; never error
  13943	1F2C  0289r			     dw	     exit
  13944
  13945				     ;	     (f2)  ( exp -- offset exp'	)  s>d ef# fm/mod ef# *
  13946
  13947					     hdr     x,'(F2)'	     ; apply exponent factor
1 13948					     cseg	     ;
  13949	1F2E  E8 E344		     pf2:    call    docol
  13950	1F31  0742r			     dw	     stod
  13951	1F33  1F15r 0818r		     dw	     efn,fmmod
  13952	1F37  1F15r 07C6r		     dw	     efn,star
  13953	1F3B  0289r			     dw	     exit
  13954
  13955				     ;	     (f3)  ( r places -- c-addr	u )
  13956				     ;				     dup to pl#	0< if precision	else (f1) ef# 0>
  13957				     ;				     if	1- (f2)	drop 1+	then pl# + max-precision
  13958				     ;				     min then fbuf swap	represent drop to sn# to
  13959				     ;				     ex# fbuf max-precision -trailing <# ;
  13960
  13961					     hdr     x,'(F3)'	     ; float to	ascii
1 13962					     cseg	     ;
  13963	1F3D  E8 E335		     pf3:    call    docol
  13964	1F40  0304r			     dw	     dupp
  13965	1F42  0F50r 1F1Ar		     dw	     pto,pln
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 246
kernel.asm



  13966	1F46  0654r			     dw	     zless
  13967	1F48  0A92r 1F52r		     dw	     zbran,pf31
  13968	1F4C  1EE4r			     dw	     prec
  13969	1F4E  0A8Dr 1F6Cr		     dw	     bran,pf33
  13970	1F52  1F1Fr		     pf31    dw	     pf1
  13971	1F54  1F15r 065Ar		     dw	     efn,zgrea
  13972	1F58  0A92r 1F64r		     dw	     zbran,pf32
  13973	1F5C  07A6r			     dw	     onem
  13974	1F5E  1F2Er 02FEr		     dw	     pf2,drop
  13975	1F62  0798r			     dw	     onep
  13976	1F64  1F1Ar 076Dr	     pf32    dw	     pln,plus
  13977	1F68  1E29r 0684r		     dw	     mprec,min
  13978	1F6C  1F01r 0315r	     pf33    dw	     fbuf,swap
  13979	1F70  1E34r			     dw	     repr
  13980	1F72  02FEr			     dw	     drop	     ; never error
  13981	1F74  0F50r 1F10r		     dw	     pto,snn
  13982	1F78  0F50r 1F0Br		     dw	     pto,exn
  13983	1F7C  1F01r			     dw	     fbuf
  13984	1F7E  1E29r			     dw	     mprec
  13985	1F80  04FAr			     dw	     dtrai
  13986	1F82  09CCr			     dw	     bdigs
  13987	1F84  0289r			     dw	     exit
  13988
  13989				     ;	     (f4)  ( exp -- )	     pl# 0< >r dup abs s>d r@ 0= if # then #s
  13990				     ;				     2drop dup sign 0< r> d0= if [char]	+ hold
  13991				     ;				     then [char] E hold
  13992
  13993					     hdr     x,'(F4)'	     ; insert exponent
1 13994					     cseg	     ;
  13995	1F86  E8 E2EC		     pf4:    call    docol
  13996	1F89  1F1Ar 0654r		     dw	     pln,zless
  13997	1F8D  02C9r			     dw	     tor
  13998	1F8F  0304r			     dw	     dupp
  13999	1F91  0750r 0742r		     dw	     abss,stod
  14000	1F95  02DBr 0628r		     dw	     rat,zequ
  14001	1F99  0A92r 1F9Fr		     dw	     zbran,pf41
  14002	1F9D  0A16r			     dw	     dig
  14003	1F9F  0A4Fr		     pf41    dw	     digs
  14004	1FA1  0378r			     dw	     tdrop
  14005	1FA3  0304r 0A3Fr		     dw	     dupp,sign
  14006	1FA7  0654r			     dw	     zless
  14007	1FA9  02D2r			     dw	     fromr
  14008	1FAB  0623r			     dw	     dzequ
  14009	1FAD  0A92r 1FB6r		     dw	     zbran,pf42
  14010	1FB1  02A1r			     dw	     clit
  14011	1FB3  2B			     db	     '+'
  14012	1FB4  0A34r			     dw	     hold
  14013	1FB6  02A1r		     pf42    dw	     clit
  14014	1FB8  45			     db	     'E'
  14015	1FB9  0A34r			     dw	     hold
  14016	1FBB  0289r			     dw	     exit
  14017
  14018				     ;	     (f5)  ( n -- +n|0 )     0max dup fdp 2+ +!
  14019
  14020					     hdr     x,'(F5)'	     ; conditionally set flag
1 14021					     cseg	     ;
  14022	1FBD  E8 E2B5		     pf5:    call    docol
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 247
kernel.asm



  14023	1FC0  0690r			     dw	     zmax
  14024	1FC2  0304r			     dw	     dupp
  14025	1FC4  1EFAr 079Er		     dw	     fdp,twop
  14026	1FC8  044Cr			     dw	     pstor
  14027	1FCA  0289r			     dw	     exit
  14028
  14029				     ;	     (f6)  ( c-addr u -- )   (f5) shold
  14030
  14031					     hdr     x,'(F6)'	     ; insert string
1 14032					     cseg	     ;
  14033	1FCC  E8 E2A6		     pf6:    call    docol
  14034	1FCF  1FBDr 0A5Er		     dw	     pf5,shold
  14035	1FD3  0289r			     dw	     exit
  14036
  14037				     ;	     (f7)  ( n -- )	     (f5) [char] 0 nhold
  14038
  14039					     hdr     x,'(F7)'	     ; insert '0's
1 14040					     cseg	     ;
  14041	1FD5  E8 E29D		     pf7:    call    docol
  14042	1FD8  1FBDr			     dw	     pf5
  14043	1FDA  02A1r			     dw	     clit
  14044	1FDC  30			     db	     '0'
  14045	1FDD  0A6Br			     dw	     nhold
  14046	1FDF  0289r			     dw	     exit
  14047
  14048				     ;	     (f8)  ( --	)	     sn# sign 0	0 #>
  14049
  14050					     hdr     x,'(F8)'	     ; insert sign
1 14051					     cseg	     ;
  14052	1FE1  E8 E291		     pf8:    call    docol
  14053	1FE4  1F10r 0A3Fr		     dw	     snn,sign
  14054	1FE8  0F79r 0F79r		     dw	     zero,zero
  14055	1FEC  09D7r			     dw	     edigs
  14056	1FEE  0289r			     dw	     exit
  14057
  14058				     ;	     (f9)  ( c-addr u1 -- c-addr u2 )  pl# 0< if [char]	0 trim then
  14059
  14060					     hdr     x,'(F9)'	     ; trim trailing '0's
1 14061					     cseg	     ;
  14062	1FF0  E8 E282		     pf9:    call    docol
  14063	1FF3  1F1Ar 0654r		     dw	     pln,zless
  14064	1FF7  0A92r 2000r		     dw	     zbran,pf91
  14065	1FFB  02A1r			     dw	     clit
  14066	1FFD  30			     db	     '0'
  14067	1FFE  04FDr			     dw	     trim
  14068	2000  0289r		     pf91    dw	     exit
  14069
  14070				     ;	     (fa)  ( u1	-- u1 u2 )   pl# 0< if dup end pl#
  14071
  14072					     hdr     x,'(FA)'
1 14073					     cseg	     ;
  14074	2002  E8 E270		     pfaa:   call    docol
  14075	2005  1F1Ar 0654r		     dw	     pln,zless
  14076	2009  0A92r 2011r		     dw	     zbran,pfaa1
  14077	200D  0304r			     dw	     dupp
  14078	200F  0289r			     dw	     exit
  14079	2011  1F1Ar		     pfaa1   dw	     pln
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 248
kernel.asm



  14080	2013  0289r			     dw	     exit
  14081
  14082				     ;	     (fb)  ( c-addr u n	-- )  fdp cell+	off >r (f9) r@ + (fa) over -
  14083				     ;				     (f7) (fa) min r@ -	(f6) r>	(fa) min (f7)
  14084				     ;				     fdp 2@ or if [char] . hold	then
  14085
  14086					     hdr     x,'(FB)'	     ; insert fraction n places	right of dec. pt
1 14087					     cseg	     ;
  14088	2015  E8 E25D		     pfbb:   call    docol
  14089	2018  1EFAr 079Er		     dw	     fdp,twop
  14090	201C  045Br			     dw	     off
  14091	201E  02C9r			     dw	     tor
  14092	2020  1FF0r			     dw	     pf9
  14093	2022  02DBr 076Dr		     dw	     rat,plus
  14094	2026  2002r			     dw	     pfaa
  14095	2028  031Cr 0775r		     dw	     over,subb
  14096	202C  1FD5r			     dw	     pf7
  14097	202E  2002r 0684r		     dw	     pfaa,min
  14098	2032  02DBr 0775r		     dw	     rat,subb
  14099	2036  1FCCr			     dw	     pf6
  14100	2038  02D2r			     dw	     fromr
  14101	203A  2002r 0684r		     dw	     pfaa,min
  14102	203E  1FD5r			     dw	     pf7
  14103	2040  1EFAr 03EEr 072Br		     dw	     fdp,tat,orr
  14104	2046  0A92r 204Fr		     dw	     zbran,pfbb1
  14105	204A  02A1r			     dw	     clit
  14106	204C  2E			     db	     '.'
  14107	204D  0A34r			     dw	     hold
  14108	204F  0289r		     pfbb1   dw	     exit
  14109
  14110				     ;	     (fc)  ( c-addr u n	-- )
  14111				     ;				     >r	2dup r@	min 2swap r> /string 0 (fb) (f6)
  14112
  14113					     hdr     x,'(FC)'	     ; split into int/frac and insert
1 14114					     cseg	     ;
  14115	2051  E8 E221		     pfcc:   call    docol
  14116	2054  02C9r			     dw	     tor
  14117	2056  037Er			     dw	     tdup
  14118	2058  02DBr 0684r		     dw	     rat,min
  14119	205C  0388r			     dw	     tswap
  14120	205E  02D2r 0538r		     dw	     fromr,sstr
  14121	2062  0F79r 2015r		     dw	     zero,pfbb
  14122	2066  1FCCr			     dw	     pf6
  14123	2068  0289r			     dw	     exit
  14124
  14125				     ;	     (fd)  ( r n factor	-- c-addr u )
  14126				     ;				     to	ef# (f3) ex# 1-	(f2) (f4) 1+ (fc) (f8)
  14127
  14128					     hdr     x,'(FD)'	     ; exponent	form
1 14129					     cseg	     ;
  14130	206A  E8 E208		     pfdd:   call    docol
  14131	206D  0F50r 1F15r		     dw	     pto,efn
  14132	2071  1F3Dr			     dw	     pf3
  14133	2073  1F0Br 07A6r		     dw	     exn,onem
  14134	2077  1F2Er			     dw	     pf2
  14135	2079  1F86r			     dw	     pf4
  14136	207B  0798r 2051r		     dw	     onep,pfcc
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 249
kernel.asm



  14137	207F  1FE1r			     dw	     pf8
  14138	2081  0289r			     dw	     exit
  14139
  14140				     ;	     (FS.)  ( r	n -- c-addr u )	 1 (fd)
  14141
  14142					     hdr     1,'(FS.)'
1 14143					     cseg
1 14144	13D5			     heads   segment public	     ;
1 14145	13D5  05			     db	     ??0575	     ;
1 14146	13D6  28 46 53 2E 29		     db	     '(FS.)'	     ;
1 14147	13DB  13CD			     dw	     lastl	     ;
1 14148	13DD  2083r			     dw	     cfadr	     ;
1 14149	13DF			     heads   ends
1 14150					     cseg	     ;
  14151	2083  B8 0001		     pfsd:   mov     ax,1
  14152	2086  50			     push    ax
  14153	2087  EB E1			     jmp     pfdd
  14154
  14155				     ;	     FS.R  ( r n1 n2 --	)    >r	(fs.) r> s.r
  14156
  14157					     hdr     1,'FS.R'
1 14158					     cseg
1 14159	13DF			     heads   segment public	     ;
1 14160	13DF  04			     db	     ??0577	     ;
1 14161	13E0  46 53 2E 52		     db	     'FS.R'	     ;
1 14162	13E4  13D5			     dw	     lastl	     ;
1 14163	13E6  2089r			     dw	     cfadr	     ;
1 14164	13E8			     heads   ends
1 14165					     cseg	     ;
  14166	2089  E8 E1E9		     fsdr:   call    docol
  14167	208C  02C9r			     dw	     tor
  14168	208E  2083r			     dw	     pfsd
  14169	2090  0A8Dr 0B26r		     dw	     bran,ddotr1
  14170
  14171				     ;	     FS.  ( r -- )	     -1	0 fs.r space
  14172
  14173					     hdr     1,'FS.'
1 14174					     cseg
1 14175	13E8			     heads   segment public	     ;
1 14176	13E8  03			     db	     ??0579	     ;
1 14177	13E9  46 53 2E			     db	     'FS.'	     ;
1 14178	13EC  13DF			     dw	     lastl	     ;
1 14179	13EE  2094r			     dw	     cfadr	     ;
1 14180	13F0			     heads   ends
1 14181					     cseg	     ;
  14182	2094  E8 E1DE		     fsdot:  call    docol
  14183	2097  0F72r			     dw	     true
  14184	2099  0F79r 2089r		     dw	     zero,fsdr
  14185	209D  0ECCr			     dw	     space
  14186	209F  0289r			     dw	     exit
  14187
  14188
  14189				     ;	     (FE.)  ( r	-- c-addr u )  3 (fd)
  14190
  14191					     hdr     1,'(FE.)'
1 14192					     cseg
1 14193	13F0			     heads   segment public	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 250
kernel.asm



1 14194	13F0  05			     db	     ??057B	     ;
1 14195	13F1  28 46 45 2E 29		     db	     '(FE.)'	     ;
1 14196	13F6  13E8			     dw	     lastl	     ;
1 14197	13F8  20A1r			     dw	     cfadr	     ;
1 14198	13FA			     heads   ends
1 14199					     cseg	     ;
  14200	20A1  B8 0003		     pfse:   mov     ax,3
  14201	20A4  50			     push    ax
  14202	20A5  EB C3			     jmp     pfdd
  14203
  14204				     ;	     FE.R  ( r n1 n2 --	)    >r	(fe.) r> s.r
  14205
  14206					     hdr     1,'FE.R'
1 14207					     cseg
1 14208	13FA			     heads   segment public	     ;
1 14209	13FA  04			     db	     ??057D	     ;
1 14210	13FB  46 45 2E 52		     db	     'FE.R'	     ;
1 14211	13FF  13F0			     dw	     lastl	     ;
1 14212	1401  20A7r			     dw	     cfadr	     ;
1 14213	1403			     heads   ends
1 14214					     cseg	     ;
  14215	20A7  E8 E1CB		     fedr:   call    docol
  14216	20AA  02C9r			     dw	     tor
  14217	20AC  20A1r			     dw	     pfse
  14218	20AE  0A8Dr 0B26r		     dw	     bran,ddotr1
  14219
  14220				     ;	     FE.  ( r -- )	     -1	0 fe.r space
  14221
  14222					     hdr     1,'FE.'
1 14223					     cseg
1 14224	1403			     heads   segment public	     ;
1 14225	1403  03			     db	     ??057F	     ;
1 14226	1404  46 45 2E			     db	     'FE.'	     ;
1 14227	1407  13FA			     dw	     lastl	     ;
1 14228	1409  20B2r			     dw	     cfadr	     ;
1 14229	140B			     heads   ends
1 14230					     cseg	     ;
  14231	20B2  E8 E1C0		     fedot:  call    docol
  14232	20B5  0F72r			     dw	     true
  14233	20B7  0F79r 20A7r		     dw	     zero,fedr
  14234	20BB  0ECCr			     dw	     space
  14235	20BD  0289r			     dw	     exit
  14236
  14237
  14238				     ;	     (F.)  ( r n -- c-addr u )
  14239				     ;				     0 to ef# (f3) ex# dup max-precision > if
  14240				     ;				     fbuf 0 0 (fb) max-precision - (f7)	(f6)
  14241				     ;				     else dup 0> if (fc) else abs (fb) 1 (f7)
  14242				     ;				     then then (f8)
  14243
  14244					     hdr     1,'(F.)'
1 14245					     cseg
1 14246	140B			     heads   segment public	     ;
1 14247	140B  04			     db	     ??0581	     ;
1 14248	140C  28 46 2E 29		     db	     '(F.)'	     ;
1 14249	1410  1403			     dw	     lastl	     ;
1 14250	1412  20BFr			     dw	     cfadr	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 251
kernel.asm



1 14251	1414			     heads   ends
1 14252					     cseg	     ;
  14253	20BF  E8 E1B3		     pfd:    call    docol
  14254	20C2  0F79r			     dw	     zero
  14255	20C4  0F50r 1F15r		     dw	     pto,efn
  14256	20C8  1F3Dr			     dw	     pf3
  14257	20CA  1F0Br 0304r		     dw	     exn,dupp
  14258	20CE  1E29r 066Cr		     dw	     mprec,great
  14259	20D2  0A92r 20EAr		     dw	     zbran,pfd1	     ; if
  14260	20D6  1F01r 0F79r		     dw	     fbuf,zero
  14261	20DA  0F79r 2015r		     dw	     zero,pfbb
  14262	20DE  1E29r 0775r		     dw	     mprec,subb
  14263	20E2  1FD5r			     dw	     pf7
  14264	20E4  1FCCr			     dw	     pf6
  14265	20E6  0A8Dr 2100r		     dw	     bran,pfd3	     ; else
  14266	20EA  0304r 065Ar	     pfd1    dw	     dupp,zgrea
  14267	20EE  0A92r 20F8r		     dw	     zbran,pfd2
  14268	20F2  2051r			     dw	     pfcc
  14269	20F4  0A8Dr 2100r		     dw	     bran,pfd3	     ; else
  14270	20F8  0750r		     pfd2    dw	     abss
  14271	20FA  2015r			     dw	     pfbb
  14272	20FC  0F7Fr 1FD5r		     dw	     one,pf7
  14273	2100  1FE1r		     pfd3    dw	     pf8	     ; then then
  14274	2102  0289r			     dw	     exit
  14275
  14276				     ;	     F.R  ( r n1 n2 -- )     >r	(f.) r>	s.r
  14277
  14278					     hdr     1,'F.R'
1 14279					     cseg
1 14280	1414			     heads   segment public	     ;
1 14281	1414  03			     db	     ??0583	     ;
1 14282	1415  46 2E 52			     db	     'F.R'	     ;
1 14283	1418  140B			     dw	     lastl	     ;
1 14284	141A  2104r			     dw	     cfadr	     ;
1 14285	141C			     heads   ends
1 14286					     cseg	     ;
  14287	2104  E8 E16E		     fdotr:  call    docol
  14288	2107  02C9r			     dw	     tor
  14289	2109  20BFr			     dw	     pfd
  14290	210B  0A8Dr 0B26r		     dw	     bran,ddotr1
  14291
  14292				     ;	     F.	 ( r --	)	     -1	0 f.r space
  14293
  14294					     hdr     1,'F.'
1 14295					     cseg
1 14296	141C			     heads   segment public	     ;
1 14297	141C  02			     db	     ??0585	     ;
1 14298	141D  46 2E			     db	     'F.'	     ;
1 14299	141F  1414			     dw	     lastl	     ;
1 14300	1421  210Fr			     dw	     cfadr	     ;
1 14301	1423			     heads   ends
1 14302					     cseg	     ;
  14303	210F  E8 E163		     fdot:   call    docol
  14304	2112  0F72r			     dw	     true
  14305	2114  0F79r 2104r		     dw	     zero,fdotr
  14306	2118  0ECCr			     dw	     space
  14307	211A  0289r			     dw	     exit
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 252
kernel.asm



  14308
  14309				     ;	     (G.)  ( r n -- c-addr u )
  14310				     ;				     >r	(f1) -3	7 within  r> swap if (f.) end
  14311				     ;				     (fs.)
  14312
  14313					     hdr     1,'(G.)'
1 14314					     cseg
1 14315	1423			     heads   segment public	     ;
1 14316	1423  04			     db	     ??0587	     ;
1 14317	1424  28 47 2E 29		     db	     '(G.)'	     ;
1 14318	1428  141C			     dw	     lastl	     ;
1 14319	142A  211Cr			     dw	     cfadr	     ;
1 14320	142C			     heads   ends
1 14321					     cseg	     ;
  14322	211C  E8 E156		     pgd:    call    docol
  14323	211F  02C9r			     dw	     tor
  14324	2121  1F1Fr			     dw	     pf1
  14325	2123  02A8r FFFD		     dw	     lit,-3
  14326	2127  02A1r			     dw	     clit
  14327	2129  07			     db	     7
  14328	212A  06B7r			     dw	     within
  14329	212C  02D2r 0315r		     dw	     fromr,swap
  14330	2130  0A92r 2138r		     dw	     zbran,pgd1	     ; if
  14331	2134  20BFr			     dw	     pfd
  14332	2136  0289r			     dw	     exit	     ; end
  14333	2138  2083r		     pgd1    dw	     pfsd
  14334	213A  0289r			     dw	     exit
  14335
  14336				     ;	     G.R  ( r n1 n2 -- )     >r	(g.) r>	s.r
  14337
  14338					     hdr     1,'G.R'
1 14339					     cseg
1 14340	142C			     heads   segment public	     ;
1 14341	142C  03			     db	     ??0589	     ;
1 14342	142D  47 2E 52			     db	     'G.R'	     ;
1 14343	1430  1423			     dw	     lastl	     ;
1 14344	1432  213Cr			     dw	     cfadr	     ;
1 14345	1434			     heads   ends
1 14346					     cseg	     ;
  14347	213C  E8 E136		     gdotr:  call    docol
  14348	213F  02C9r			     dw	     tor
  14349	2141  211Cr			     dw	     pgd
  14350	2143  0A8Dr 0B26r		     dw	     bran,ddotr1
  14351
  14352				     ;	     G.	 ( r --	)	     -1	0 g.r space
  14353
  14354					     hdr     1,'G.'
1 14355					     cseg
1 14356	1434			     heads   segment public	     ;
1 14357	1434  02			     db	     ??058B	     ;
1 14358	1435  47 2E			     db	     'G.'	     ;
1 14359	1437  142C			     dw	     lastl	     ;
1 14360	1439  2147r			     dw	     cfadr	     ;
1 14361	143B			     heads   ends
1 14362					     cseg	     ;
  14363	2147  E8 E12B		     gdot:   call    docol
  14364	214A  0F72r			     dw	     true
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 253
kernel.asm



  14365	214C  0F79r 213Cr		     dw	     zero,gdotr
  14366	2150  0ECCr			     dw	     space
  14367	2152  0289r			     dw	     exit
  14368
  14369					     cseg
  14370
  14371				     ;	     sqr
  14372
  14373	2154  E8 F794		     sqr:    call    tstr
  14374	2157  75 01			     jnz     sqr1
  14375	2159  C3			     ret		     ; zero
  14376
  14377	215A  79 03		     sqr1:   jns     sqr2
  14378	215C  E9 F721			     jmp     ovf	     ; neg
  14379
  14380	215F  E8 F6E2		     sqr2:   call    savf1
  14381	2162  22 C0			     and     al,al
  14382	2164  D0 D8			     rcr     al,1
  14383	2166  04 40			     add     al,40h
  14384	2168  E8 F6DE			     call    savf2
  14385	216B  B6 05			     mov     dh,5
  14386	216D  52		     sqr3:   push    dx
  14387	216E  E8 F6DD			     call    lodf1
  14388	2171  BB 1835r			     mov     bx,offset f2
  14389	2174  E8 F9BD			     call    fdi
  14390	2177  BB 1835r			     mov     bx,offset f2
  14391	217A  E8 F82A			     call    fad
  14392	217D  2C 01			     sub     al,1
  14393	217F  E8 F6C7			     call    savf2
  14394	2182  5A			     pop     dx
  14395	2183  FE CE			     dec     dh
  14396	2185  75 E6			     jnz     sqr3
  14397	2187  BB 1835r			     mov     bx,offset f2
  14398	218A  E9 F706			     jmp     lod
  14399
  14400				     ;	     poly
  14401
  14402	218D  53		     poly:   push    bx
  14403	218E  E8 F6B3			     call    savf1
  14404	2191  5B			     pop     bx
  14405	2192  8A 07			     mov     al,[bx]
  14406	2194  A2 21B5r			     mov     poly3,al
  14407	2197  43			     inc     bx
  14408	2198  53			     push    bx
  14409	2199  E8 F6F7			     call    lod
  14410	219C  EB 0C			     jmp     short poly2
  14411
  14412	219E  53		     poly1:  push    bx
  14413	219F  BB 1831r			     mov     bx,offset f1
  14414	21A2  E8 F914			     call    fmu
  14415	21A5  5B			     pop     bx
  14416	21A6  53			     push    bx
  14417	21A7  E8 F7FD			     call    fad
  14418	21AA  5B		     poly2:  pop     bx
  14419	21AB  83 C3 04			     add     bx,fw
  14420	21AE  FE 0E 21B5r		     dec     byte ptr poly3
  14421	21B2  75 EA			     jnz     poly1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 254
kernel.asm



  14422	21B4  C3			     ret
  14423
  14424	21B5  ??		     poly3   db	     ?
  14425
  14426				     ;	     polx
  14427
  14428	21B6  53		     polx:   push    bx
  14429	21B7  E8 F68F			     call    savf2
  14430	21BA  BB 1835r			     mov     bx,offset f2
  14431	21BD  E8 F8F9			     call    fmu
  14432	21C0  5B			     pop     bx
  14433	21C1  E8 FFC9			     call    poly
  14434	21C4  BB 1835r			     mov     bx,offset f2
  14435	21C7  E9 F8EF			     jmp     fmu
  14436
  14437				     ;	     exp
  14438
  14439	21CA  BB 222Cr		     exp:    mov     bx,offset ln2
  14440	21CD  E8 F964			     call    fdi
  14441	21D0  3C 88			     cmp     al,88h
  14442	21D2  73 40			     jnc     exp3
  14443
  14444	21D4  3C 68			     cmp     al,68h
  14445	21D6  73 06			     jnc     exp1
  14446	21D8  BB 2230r			     mov     bx,offset fp1
  14447	21DB  E9 F6B5			     jmp     lod
  14448
  14449	21DE  E8 F668		     exp1:   call    savf2
  14450	21E1  E8 F9BA			     call    flr
  14451	21E4  E8 F65D			     call    savf1
  14452	21E7  8A C2			     mov     al,dl
  14453	21E9  04 81			     add     al,81h
  14454	21EB  74 1F			     jz	     exp2
  14455
  14456	21ED  50			     push    ax
  14457	21EE  E8 F662			     call    lodf2
  14458	21F1  BB 1831r			     mov     bx,offset f1
  14459	21F4  E8 F7AD			     call    fsu
  14460	21F7  BB 2217r			     mov     bx,offset exp4
  14461	21FA  E8 FF90			     call    poly
  14462	21FD  58			     pop     ax
  14463	21FE  B9 0000			     mov     cx,0
  14464	2201  8A F5			     mov     dh,ch
  14465	2203  E8 F63E			     call    savf1
  14466	2206  BB 1831r			     mov     bx,offset f1
  14467	2209  E9 F8AD			     jmp     fmu
  14468
  14469	220C  E8 F6C0		     exp2:   call    lodr
  14470	220F  79 03			     jns     exp3
  14471	2211  E9 F675			     jmp     zro
  14472
  14473	2214  E9 F669		     exp3:   jmp     ovf
  14474
  14475	2217  07		     exp4    db	     7
  14476	2218  74 59 88 7C		     db	     74h,59h,88h,7ch
  14477	221C  77 26 97 E0		     db	     77h,26h,97h,0e0h
  14478	2220  7A 1E 1D C4		     db	     7ah,1eh,1dh,0c4h
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 255
kernel.asm



  14479	2224  7C 63 50 5E		     db	     7ch,63h,50h,5eh
  14480	2228  7E 75 FE 1A		     db	     7eh,75h,0feh,1ah
  14481	222C  80 31 72 18	     ln2     db	     80h,31h,72h,18h	     ; ln2
  14482	2230  81 00 00 00	     fp1     db	     81h,0,0,0		     ; 1.0
  14483
  14484				     ;	     log
  14485
  14486	2234  E8 F6B4		     log:    call    tstr
  14487	2237  7E 1E			     jng     log1	     ; neg or zero
  14488	2239  34 80			     xor     al,80h
  14489	223B  50			     push    ax
  14490	223C  B0 80			     mov     al,80h
  14491	223E  BB 225Ar			     mov     bx,offset log2
  14492	2241  E8 FF49			     call    poly
  14493	2244  E8 F5FD			     call    savf1
  14494	2247  58			     pop     ax
  14495	2248  E8 F908			     call    flta
  14496	224B  BB 1831r			     mov     bx,offset f1
  14497	224E  E8 F756			     call    fad
  14498	2251  BB 222Cr			     mov     bx,offset ln2
  14499	2254  E9 F862			     jmp     fmu
  14500
  14501	2257  E9 F62F		     log1:   jmp     zro
  14502
  14503	225A  09		     log2    db	     9
  14504	225B  82 94 EE D8		     db	     82h,94h,0eeh,0d8h
  14505	225F  84 7D AA A9		     db	     84h,7dh,0aah,0a9h
  14506	2263  86 BF 99 7D		     db	     86h,0bfh,99h,7dh
  14507	2267  87 28 E5 7B		     db	     87h,28h,0e5h,7bh
  14508	226B  87 C0 71 8A		     db	     87h,0c0h,71h,8ah
  14509	226F  87 14 95 6E		     db	     87h,14h,95h,6eh
  14510	2273  86 A0 1E B2		     db	     86h,0a0h,1eh,0b2h
  14511	2277  85 02 7A AD		     db	     85h,02h,7ah,0adh
  14512	227B  83 8D 9D 09		     db	     83h,8dh,9dh,09h
  14513
  14514				     ;	     sin / cos
  14515
  14516	227F  BB 22ECr		     cos:    mov     bx,offset fpi2
  14517	2282  E8 F722			     call    fad
  14518	2285  0A C0		     sin:    or	     al,al
  14519	2287  75 01			     jnz     sin1
  14520	2289  C3			     ret
  14521
  14522	228A  3C 99		     sin1:   cmp     al,80h+25
  14523	228C  72 03			     jc	     sin2
  14524	228E  E9 F5EF			     jmp     ovf
  14525
  14526	2291  BB 22E8r		     sin2:   mov     bx,offset f2pi
  14527	2294  E8 F89D			     call    fdi
  14528	2297  E8 F5AA			     call    savf1
  14529	229A  E8 F901			     call    flr
  14530	229D  0A C0			     or	     al,al
  14531	229F  9C			     pushf
  14532	22A0  74 03			     jz	     sin3
  14533	22A2  E8 F5A4			     call    savf2
  14534	22A5  E8 F5A6		     sin3:   call    lodf1
  14535	22A8  9D			     popf
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 256
kernel.asm



  14536	22A9  74 06			     jz	     sin4
  14537	22AB  BB 1835r			     mov     bx,offset f2
  14538	22AE  E8 F6F3			     call    fsu
  14539	22B1  BB 22F4r		     sin4:   mov     bx,offset fp25  ; 0.25
  14540	22B4  E8 F6ED			     call    fsu
  14541	22B7  9C			     pushf
  14542	22B8  78 0B			     js	     sin5
  14543	22BA  BB 22F0r			     mov     bx,offset fp50  ; 0.5
  14544	22BD  E8 F6E4			     call    fsu
  14545	22C0  78 03			     js	     sin5
  14546	22C2  E8 F605			     call    chs
  14547	22C5  BB 22F4r		     sin5:   mov     bx,offset fp25  ; 0.25
  14548	22C8  E8 F6DC			     call    fad
  14549	22CB  9D			     popf
  14550	22CC  78 03			     js	     sin6
  14551	22CE  E8 F5F9			     call    chs
  14552	22D1  BB 22D7r		     sin6:   mov     bx,offset sin7
  14553	22D4  E9 FEDF			     jmp     polx
  14554
  14555	22D7  05		     sin7    db	     5
  14556	22D8  86 1E D7 FB		     db	     86h,1eh,0d7h,0fbh
  14557	22DC  87 99 26 64		     db	     87h,99h,26h,64h
  14558	22E0  87 23 34 58		     db	     87h,23h,34h,58h
  14559	22E4  86 A5 5D E1		     db	     86h,0a5h,5dh,0e1h
  14560	22E8  83 49 0F DB	     f2pi    db	     83h,49h,0fh,0dbh ;	2pi
  14561
  14562	22EC  81 49 0F DB	     fpi2    db	     81h,49h,0fh,0dbh ;	pi/2
  14563	22F0  80 00 00 00	     fp50    db	     80h,0,0,0	     ; 0.5
  14564	22F4  7F 00 00 00	     fp25    db	     7fh,0,0,0	     ; 0.25
  14565
  14566				     ;	     atan
  14567
  14568	22F8  E8 F5F0		     atan:   call    tstr
  14569	22FB  79 03			     jns     atan1
  14570	22FD  E8 F5C4			     call    chss	     ; make positive
  14571	2300  3C 81		     atan1:  cmp     al,81h
  14572	2302  72 13			     jc	     atan2	     ; < 1
  14573
  14574	2304  BB 2347r			     mov     bx,offset atan4
  14575	2307  53			     push    bx
  14576	2308  E8 F539			     call    savf1
  14577	230B  BB 2230r			     mov     bx,offset fp1
  14578	230E  E8 F582			     call    lod
  14579	2311  BB 1831r			     mov     bx,offset f1
  14580	2314  E8 F81D			     call    fdi
  14581	2317  BB 2370r		     atan2:  mov     bx,offset atan9
  14582	231A  E8 F5EC			     call    fcmp
  14583	231D  78 22			     js	     atan3
  14584
  14585	231F  BB 2350r			     mov     bx,offset atan5
  14586	2322  53			     push    bx
  14587	2323  E8 F51E			     call    savf1
  14588	2326  BB 2357r			     mov     bx,offset atan7
  14589	2329  E8 F67B			     call    fad
  14590	232C  BB 1839r			     mov     bx,offset f3
  14591	232F  E8 F586			     call    stom
  14592	2332  E8 F519			     call    lodf1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 257
kernel.asm



  14593	2335  BB 2356r			     mov     bx,offset atan6
  14594	2338  E8 FE52			     call    poly
  14595	233B  BB 1839r			     mov     bx,offset f3
  14596	233E  E8 F7F3			     call    fdi
  14597	2341  BB 235Fr		     atan3:  mov     bx,offset atan8
  14598	2344  E9 FE6F			     jmp     polx
  14599
  14600	2347  BB 22ECr		     atan4:  mov     bx,offset fpi2
  14601	234A  E8 F657			     call    fsu
  14602	234D  E9 F57A			     jmp     chs
  14603
  14604	2350  BB 2374r		     atan5:  mov     bx,offset atan10
  14605	2353  E9 F651			     jmp     fad
  14606
  14607	2356  02		     atan6   db	     2
  14608	2357  81 5D B3 D7	     atan7   db	     81h,5dh,0b3h,0d7h
  14609	235B  81 80 00 00		     db	     81h,80h,0,0     ; -1.0
  14610
  14611	235F  04		     atan8   db	     4
  14612	2360  7E 83 35 62		     db	     7eh,83h,35h,62h
  14613	2364  7E 4C 24 50		     db	     7eh,4ch,24h,50h
  14614	2368  7F AA A9 79		     db	     7fh,0aah,0a9h,79h
  14615	236C  81 00 00 00		     db	     81h,0,0,0
  14616
  14617	2370  7F 09 38 A3	     atan9   db	     7fh,09h,38h,0a3h
  14618	2374  80 06 0A 92	     atan10  db	     80h,06h,0ah,92h
  14619
  14620				     ;	     FSQRT  ( r1 -- r2 )
  14621
  14622					     hdr     1,'FSQRT'
1 14623					     cseg
1 14624	143B			     heads   segment public	     ;
1 14625	143B  05			     db	     ??058D	     ;
1 14626	143C  46 53 51 52 54		     db	     'FSQRT'	     ;
1 14627	1441  1434			     dw	     lastl	     ;
1 14628	1443  2378r			     dw	     cfadr	     ;
1 14629	1445			     heads   ends
1 14630					     cseg	     ;
  14631	2378  E8 F4DD		     fsqr:   call    ldop
  14632	237B  E8 FDD6			     call    sqr
  14633	237E  E9 F4F5			     jmp     svop
  14634
  14635				     ;	     FEXP  ( r1	-- r2 )
  14636
  14637					     hdr     1,'FEXP'
1 14638					     cseg
1 14639	1445			     heads   segment public	     ;
1 14640	1445  04			     db	     ??058F	     ;
1 14641	1446  46 45 58 50		     db	     'FEXP'	     ;
1 14642	144A  143B			     dw	     lastl	     ;
1 14643	144C  2381r			     dw	     cfadr	     ;
1 14644	144E			     heads   ends
1 14645					     cseg	     ;
  14646	2381  E8 F4D4		     fexp:   call    ldop
  14647	2384  E8 FE43			     call    exp
  14648	2387  E9 F4EC			     jmp     svop
  14649
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 258
kernel.asm



  14650				     ;	     FLN  ( r1 -- r2 )
  14651
  14652					     hdr     1,'FLN'
1 14653					     cseg
1 14654	144E			     heads   segment public	     ;
1 14655	144E  03			     db	     ??0591	     ;
1 14656	144F  46 4C 4E			     db	     'FLN'	     ;
1 14657	1452  1445			     dw	     lastl	     ;
1 14658	1454  238Ar			     dw	     cfadr	     ;
1 14659	1456			     heads   ends
1 14660					     cseg	     ;
  14661	238A  E8 F4CB		     ffln:   call    ldop
  14662	238D  E8 FEA4			     call    log
  14663	2390  E9 F4E3			     jmp     svop
  14664
  14665				     ;	     F**  ( r1 -- r2 )	     fswap fln f* fexp
  14666
  14667					     hdr     1,'F**'
1 14668					     cseg
1 14669	1456			     heads   segment public	     ;
1 14670	1456  03			     db	     ??0593	     ;
1 14671	1457  46 2A 2A			     db	     'F**'	     ;
1 14672	145A  144E			     dw	     lastl	     ;
1 14673	145C  2393r			     dw	     cfadr	     ;
1 14674	145E			     heads   ends
1 14675					     cseg	     ;
  14676	2393  E8 DEDF		     fsq:    call    docol
  14677	2396  17BDr 238Ar		     dw	     fswap,ffln
  14678	239A  1CA7r 2381r		     dw	     fstar,fexp
  14679	239E  0289r			     dw	     exit
  14680
  14681				     ;	     FSIN  ( r1	-- r2 )
  14682
  14683					     hdr     1,'FSIN'
1 14684					     cseg
1 14685	145E			     heads   segment public	     ;
1 14686	145E  04			     db	     ??0595	     ;
1 14687	145F  46 53 49 4E		     db	     'FSIN'	     ;
1 14688	1463  1456			     dw	     lastl	     ;
1 14689	1465  23A0r			     dw	     cfadr	     ;
1 14690	1467			     heads   ends
1 14691					     cseg	     ;
  14692	23A0  E8 F4B5		     fsinn:  call    ldop
  14693	23A3  E8 FEDF			     call    sin
  14694	23A6  E9 F4CD			     jmp     svop
  14695
  14696				     ;	     FCOS  r1 -- r2 )
  14697
  14698					     hdr     1,'FCOS'
1 14699					     cseg
1 14700	1467			     heads   segment public	     ;
1 14701	1467  04			     db	     ??0597	     ;
1 14702	1468  46 43 4F 53		     db	     'FCOS'	     ;
1 14703	146C  145E			     dw	     lastl	     ;
1 14704	146E  23A9r			     dw	     cfadr	     ;
1 14705	1470			     heads   ends
1 14706					     cseg	     ;
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 259
kernel.asm



  14707	23A9  E8 F4AC		     fcoss:  call    ldop
  14708	23AC  E8 FED0			     call    cos
  14709	23AF  E9 F4C4			     jmp     svop
  14710
  14711				     ;	     FATAN  ( r1 -- r2 )
  14712
  14713					     hdr     1,'FATAN'
1 14714					     cseg
1 14715	1470			     heads   segment public	     ;
1 14716	1470  05			     db	     ??0599	     ;
1 14717	1471  46 41 54 41 4E		     db	     'FATAN'	     ;
1 14718	1476  1467			     dw	     lastl	     ;
1 14719	1478  23B2r			     dw	     cfadr	     ;
1 14720	147A			     heads   ends
1 14721					     cseg	     ;
  14722	23B2  E8 F4A3		     fatan:  call    ldop
  14723	23B5  E8 FF40			     call    atan
  14724	23B8  E9 F4BB			     jmp     svop
  14725
  14726				     ;	     PI	 ( -- r	)
  14727
  14728					     hdr     1,'PI'
1 14729					     cseg
1 14730	147A			     heads   segment public	     ;
1 14731	147A  02			     db	     ??059B	     ;
1 14732	147B  50 49			     db	     'PI'	     ;
1 14733	147D  1470			     dw	     lastl	     ;
1 14734	147F  23BBr			     dw	     cfadr	     ;
1 14735	1481			     heads   ends
1 14736					     cseg	     ;
  14737	23BB  E8 F3BA		     fpi:    call    dofcon
  14738	23BE  82 49 0F DB		     db	     82h,49h,0fh,0dbh	     ; pi
  14739
  14740				     ;	     fpinit  ( -- )	     max-precision set-precision fdp on
  14741
  14742					     hdr     x,'FPINIT'
1 14743					     cseg	     ;
  14744	23C2  E8 DEB0		     fpini:  call    docol
  14745	23C5  1E29r 1EE9r		     dw	     mprec,setpr
  14746	23C9  1EFAr 0453r		     dw	     fdp,on
  14747	23CD  0289r			     dw	     exit
  14748
  14749				     ;	     fident  ( -- )
  14750
  14751					     hdr     x,'FIDENT',,1
1 14752					     cseg	     ;
1 14753					     aseg
  14754	C418  E8 3E5A		     fiden:  call    docol
  14755	C41B  0F13r			     dw	     crr
  14756	C41D  144Dr			     dw	     pdotq
  14757	C41F  28			     db	     fiden1-$-1
  14758	C420  53 6F 66 74 77 61	72+	     db	     'Software floating-point ('
  14759	      65 20 66 6C 6F 61	74+
  14760	      69 6E 67 2D 70 6F	69+
  14761	      6E 74 20 28
  14762	C439  73 65 70 61 72 61	74+	     db	     'separate'
  14763	      65
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 260
kernel.asm



  14764	C441  20 73 74 61 63 6B	29	     db	     ' stack)'
  14765	C448  0289r		     fiden1  dw	     exit
  14766
  14767
  14768				     ;	     fnumber  (	c-addr u -- [r]	xt true	| ? false )
  14769				     ;				     2dup s" E"	caps search nip	nip decimal?
  14770				     ;				     and if >float (fliteral) swap end 0
  14771
  14772					     hdr     x,'FNUMBER',,1
1 14773					     cseg	     ;
1 14774					     aseg
  14775	C44A  E8 3E28		     fnumb:  call    docol
  14776	C44D  037Er			     dw	     tdup	     ; scan 'E'
  14777	C44F  1447r			     dw	     psqot
  14778					     dcs     'E'
1 14779	C451  01			     db	     ??05A3	     ;
1 14780	C452  45		     ??05A4  db	     'E'
  14781	C453  0552r			     dw	     caps
  14782	C455  05A7r			     dw	     sear
  14783	C457  0362r 0362r		     dw	     nip,nip
  14784	C45B  0A78r			     dw	     dcmq	     ; decimal base?
  14785	C45D  0723r			     dw	     andd
  14786	C45F  0A92r C46Dr		     dw	     zbran,fnumb1
  14787	C463  1E0Cr			     dw	     tflt
  14788	C465  02A8r C400r		     dw	     lit,flite
  14789	C469  0315r			     dw	     swap
  14790	C46B  0289r			     dw	     exit
  14791	C46D  0F79r		     fnumb1  dw	     zero
  14792	C46F  0289r			     dw	     exit
  14793
  14794
  14795					     aseg
  14796
  14797				     ;	     ( -- )		     :noname ['] noop dup (pinit) ! (piden) !
  14798				     ;				     ['] false (pfnum) ! (nfps)	off (nfpm) off
  14799				     ;				     ; remember
  14800
  14801					     hdr     x,'(-FP)',,1
1 14802					     cseg	     ;
1 14803					     aseg
  14804	C471  B8 01BAr		     fprun:  mov     ax,offset noop
  14805	C474  A3 141Fr			     mov     word ptr pinit,ax	     ; INIT
  14806	C477  A3 BB82r			     mov     word ptr piden,ax	     ; INDENTIFY
  14807	C47A  B8 0F79r			     mov     ax,offset false
  14808	C47D  A3 B93Ar			     mov     word ptr pfnum,ax	     ; FNUMBER
  14809	C480  2B C0			     sub     ax,ax
  14810	C482  A3 0FACr			     mov     nfps,ax
  14811	C485  A3 0FB0r			     mov     nfpm,ax
  14812					     nextt
1 14813	C488  AD			     lodsw
1 14814	C489  FF E0			     jmp     ax
  14815
  14816	C48B  0000		     fprun1  dw	     0		     ; link
  14817	C48D  C471r			     dw	     fprun	     ; xt
  14818
  14819
  14820	      =147A		     topnfa  equ     lnk-horig	     ; nfa of top word in forth	vocab
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 261
kernel.asm



  14821				     topxt   equ     cfadr	     ; xt  of top word in forth	vocab
  14822
  14823					     cseg
  14824	      =MAIN:23CF	     initdp  equ     $
  14825
  14826					     aseg
  14827	      =MAIN:C48F	     initdps equ     $
  14828
  14829	1481			     heads   segment public
  14830	      =1481		     initdph equ     $-horig
  14831	1481			     heads   ends
  14832
  14833					     cseg
  14834
  14835				     ; Move heads into place for .COM executable only.
  14836				     ; Assumes heads located entirely in DS segment.
  14837				     ; Code is run once	then disabled.
  14838
  14839				     ;	     MOVE-PATCH	 ( -- )
  14840
  14841	23CF  8E 06 03D0r	     movpat: mov     es,hseg1		     ; ES = headers segment
  14842	23D3  8B 0E 01D4r		     mov     cx,idph		     ; move heads
  14843	23D7  8B F9			     mov     di,cx
  14844	23D9  4F			     dec     di
  14845	23DA  8B F7			     mov     si,di
  14846	23DC  03 36 01CEr		     add     si,idps
  14847	23E0  FD			     std
  14848	23E1  F3> A4			     rep     movsb
  14849	23E3  FC			     cld
  14850	23E4  C7 06 1359r CF8B		     mov     word ptr cldd6,0CF8Bh	     ; change 'MOV CX,DI'
  14851	23EA  C7 06 1379r F929		     mov     word ptr cldd7,0F929h	     ; change 'SUB CX,DI'
  14852	23F0  C7 06 1384r 0000		     mov     word ptr cldd9,cold-cldd9-2     ; patch myself out
  14853	23F6  E9 EF8D			     jmp     cold
  14854
  14855	23F9			     main    ends
  14856
  14857					     end     start   ; start address
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 262
Symbol Table




Symbol Name			  Type	 Value

??0000				  Number 0007
??0001				  Number HEADS:0002
??0002				  Number 0004
??0003				  Number HEADS:000E
??0004				  Number 0004
??0005				  Number HEADS:0017
??0006				  Number 0006
??0007				  Number HEADS:0020
??0008				  Number 0007
??0009				  Number HEADS:002B
??000A				  Number 0008
??000B				  Number HEADS:0037
??0012				  Number 0003
??0013				  Number HEADS:0044
??0014				  Number 0003
??0015				  Number HEADS:004C
??0016				  Number 0003
??0017				  Number HEADS:0054
??0018				  Number 0003
??0019				  Number HEADS:005C
??001A				  Number 0002
??001B				  Number HEADS:0064
??001C				  Number 0002
??001D				  Number HEADS:006B
??001E				  Number 0002
??001F				  Number HEADS:0072
??0020				  Number 0003
??0021				  Number HEADS:0079
??0022				  Number 0003
??0023				  Number HEADS:0081
??0024				  Number 0003
??0025				  Number HEADS:0089
??0026				  Number 0085
??0027				  Number HEADS:0091
??0028				  Number 0004
??0029				  Number HEADS:009B
??002A				  Number 0003
??002B				  Number HEADS:00A4
??002C				  Number 0004
??002D				  Number HEADS:00AC
??002E				  Number 0004
??002F				  Number HEADS:00B5
??0030				  Number 0004
??0031				  Number HEADS:00BE
??0032				  Number 0003
??0033				  Number HEADS:00C7
??0034				  Number 0004
??0035				  Number HEADS:00CF
??0036				  Number 0004
??0037				  Number HEADS:00D8
??0038				  Number 0005
??0039				  Number HEADS:00E1
??003A				  Number 0004
??003B				  Number HEADS:00EB
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 263
Symbol Table



??003C				  Number 0003
??003D				  Number HEADS:00F4
??003E				  Number 0004
??003F				  Number HEADS:00FC
??0040				  Number 0002
??0041				  Number HEADS:0105
??0042				  Number 0005
??0043				  Number HEADS:010C
??0044				  Number 0004
??0045				  Number HEADS:0116
??0046				  Number 0005
??0047				  Number HEADS:011F
??0048				  Number 0005
??0049				  Number HEADS:0129
??004A				  Number 0004
??004B				  Number HEADS:0133
??004C				  Number 0004
??004D				  Number HEADS:013C
??004E				  Number 0005
??004F				  Number HEADS:0145
??0050				  Number 0004
??0051				  Number HEADS:014F
??0052				  Number 0004
??0053				  Number HEADS:0158
??0054				  Number 0004
??0055				  Number HEADS:0161
??0056				  Number 0001
??0057				  Number HEADS:016A
??0058				  Number 0001
??0059				  Number HEADS:0170
??005A				  Number 0002
??005B				  Number HEADS:0176
??005C				  Number 0002
??005D				  Number HEADS:017D
??005E				  Number 0002
??005F				  Number HEADS:0184
??0060				  Number 0002
??0061				  Number HEADS:018B
??0062				  Number 0002
??0063				  Number HEADS:0192
??0064				  Number 0002
??0065				  Number HEADS:0199
??0066				  Number 0003
??0067				  Number HEADS:01A0
??0068				  Number 0003
??0069				  Number HEADS:01A8
??006A				  Number 0003
??006B				  Number HEADS:01B0
??006C				  Number 0003
??006D				  Number HEADS:01B8
??006E				  Number 0002
??006F				  Number HEADS:01C0
??0076				  Number 0002
??0077				  Number HEADS:01C7
??0078				  Number 0003
??0079				  Number HEADS:01CE
??007A				  Number 0005
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 264
Symbol Table



??007B				  Number HEADS:01D6
??007C				  Number 0005
??007D				  Number HEADS:01E0
??007E				  Number 0004
??007F				  Number HEADS:01EA
??0080				  Number 0005
??0081				  Number HEADS:01F3
??0082				  Number 0005
??0083				  Number HEADS:01FD
??0084				  Number 0006
??0085				  Number HEADS:0207
??0086				  Number 0006
??0087				  Number HEADS:0212
??0088				  Number 0004
??0089				  Number HEADS:021D
??008A				  Number 0005
??008B				  Number HEADS:0226
??008C				  Number 0004
??008D				  Number HEADS:0230
??008E				  Number 0005
??008F				  Number HEADS:0239
??0092				  Number 0004
??0093				  Number HEADS:0243
??0094				  Number 0004
??0095				  Number HEADS:024C
??0096				  Number 0009
??0097				  Number HEADS:0255
??0098				  Number 0004
??0099				  Number HEADS:0263
??009A				  Number 0007
??009B				  Number HEADS:026C
??009C				  Number 0007
??009D				  Number HEADS:0278
??009E				  Number 0007
??009F				  Number HEADS:0284
??00A0				  Number 0008
??00A1				  Number HEADS:0290
??00A4				  Number 0004
??00A5				  Number HEADS:029D
??00A6				  Number 0007
??00A7				  Number HEADS:02A6
??00A8				  Number 0006
??00A9				  Number HEADS:02B2
??00AA				  Number 0007
??00AB				  Number HEADS:02BD
??00AC				  Number 0006
??00AD				  Number HEADS:02C9
??00AE				  Number 0006
??00AF				  Number HEADS:02D4
??00B0				  Number 0003
??00B1				  Number HEADS:02DF
??00B2				  Number 0003
??00B3				  Number HEADS:02E7
??00B4				  Number 0002
??00B5				  Number HEADS:02EF
??00B6				  Number 0003
??00B7				  Number HEADS:02F6
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 265
Symbol Table



??00B8				  Number 0001
??00B9				  Number HEADS:02FE
??00BA				  Number 0002
??00BB				  Number HEADS:0304
??00BC				  Number 0002
??00BD				  Number HEADS:030B
??00BE				  Number 0002
??00BF				  Number HEADS:0312
??00C0				  Number 0001
??00C1				  Number HEADS:0319
??00C2				  Number 0001
??00C3				  Number HEADS:031F
??00C4				  Number 0002
??00C5				  Number HEADS:0325
??00C6				  Number 0002
??00C7				  Number HEADS:032C
??00C8				  Number 0003
??00C9				  Number HEADS:0333
??00CC				  Number 0003
??00CD				  Number HEADS:033B
??00CE				  Number 0004
??00CF				  Number HEADS:0343
??00D0				  Number 0004
??00D1				  Number HEADS:034C
??00D2				  Number 0006
??00D3				  Number HEADS:0355
??00D4				  Number 0007
??00D5				  Number HEADS:0360
??00D6				  Number 0002
??00D7				  Number HEADS:036C
??00D8				  Number 0003
??00D9				  Number HEADS:0373
??00DA				  Number 0002
??00DB				  Number HEADS:037B
??00DC				  Number 0003
??00DD				  Number HEADS:0382
??00DE				  Number 0004
??00DF				  Number HEADS:038A
??00E0				  Number 0004
??00E1				  Number HEADS:0393
??00E2				  Number 0003
??00E3				  Number HEADS:039C
??00E4				  Number 0002
??00E5				  Number HEADS:03A4
??00E6				  Number 0003
??00E7				  Number HEADS:03AB
??00E8				  Number 0006
??00E9				  Number HEADS:03B3
??00EA				  Number 0083
??00EB				  Number HEADS:03BE
??00EC				  Number 0003
??00ED				  Number HEADS:03C6
??00EE				  Number 0083
??00EF				  Number HEADS:03CE
??00F0				  Number 0006
??00F1				  Number HEADS:03D6
??00F2				  Number 0003
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 266
Symbol Table



??00F3				  Number HEADS:03E1
??00F4				  Number 0007
??00F5				  Number HEADS:03E9
??00F6				  Number 0004
??00F7				  Number HEADS:03F5
??00F8				  Number 0001
??00F9				  Number HEADS:03FE
??00FA				  Number 0001
??00FB				  Number HEADS:0404
??00FC				  Number 0002
??00FD				  Number HEADS:040A
??00FE				  Number 0002
??00FF				  Number HEADS:0411
??0100				  Number 0002
??0101				  Number HEADS:0418
??0102				  Number 0002
??0103				  Number HEADS:041F
??0104				  Number 0002
??0105				  Number HEADS:0426
??0106				  Number 0002
??0107				  Number HEADS:042D
??0108				  Number 0002
??0109				  Number HEADS:0434
??010A				  Number 0003
??010B				  Number HEADS:043B
??010C				  Number 0002
??010D				  Number HEADS:0443
??010E				  Number 0001
??010F				  Number HEADS:044A
??0110				  Number 0006
??0111				  Number HEADS:0450
??0112				  Number 0006
??0113				  Number HEADS:045B
??0114				  Number 0006
??0115				  Number HEADS:0466
??0116				  Number 0005
??0117				  Number HEADS:0471
??0118				  Number 0002
??0119				  Number HEADS:047B
??011A				  Number 0004
??011B				  Number HEADS:0482
??011C				  Number 0001
??011D				  Number HEADS:048B
??011E				  Number 0003
??011F				  Number HEADS:0491
??0120				  Number 0003
??0121				  Number HEADS:0499
??0122				  Number 0002
??0123				  Number HEADS:04A1
??0124				  Number 0002
??0125				  Number HEADS:04A8
??0126				  Number 0003
??0127				  Number HEADS:04AF
??0128				  Number 0003
??0129				  Number HEADS:04B7
??012A				  Number 0003
??012B				  Number HEADS:04BF
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 267
Symbol Table



??012C				  Number 0006
??012D				  Number HEADS:04C7
??012E				  Number 0006
??012F				  Number HEADS:04D2
??0132				  Number 0007
??0133				  Number HEADS:04DD
??0134				  Number 0003
??0135				  Number HEADS:04E9
??0136				  Number 0006
??0137				  Number HEADS:04F1
??013A				  Number 0007
??013B				  Number HEADS:04FC
??013C				  Number 0005
??013D				  Number HEADS:0508
??013E				  Number 0007
??013F				  Number HEADS:0512
??0140				  Number 0007
??0141				  Number HEADS:051E
??0142				  Number 0002
??0143				  Number HEADS:052A
??0144				  Number 0002
??0145				  Number HEADS:0531
??0148				  Number 0014
??0149				  Byte	 MAIN:0A00
??014A				  Number 0001
??014B				  Number HEADS:0538
??014C				  Number 0004
??014D				  Number HEADS:053E
??014E				  Number 0004
??014F				  Number HEADS:0547
??0150				  Number 0002
??0151				  Number HEADS:0550
??0152				  Number 0005
??0153				  Number HEADS:0557
??0154				  Number 0005
??0155				  Number HEADS:0561
??0162				  Number 0006
??0163				  Number HEADS:056B
??016A				  Number 0003
??016B				  Number HEADS:0576
??0170				  Number 0004
??0171				  Number HEADS:057E
??0172				  Number 0015
??0173				  Byte	 MAIN:B038
??017A				  Number 0045
??017B				  Number HEADS:0587
??017C				  Number 0005
??017D				  Number HEADS:0591
??017E				  Number 0008
??017F				  Number HEADS:059B
??0180				  Number 0044
??0181				  Number HEADS:05A8
??0182				  Number 0043
??0183				  Number HEADS:05B1
??0184				  Number 0042
??0185				  Number HEADS:05B9
??0186				  Number 0045
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 268
Symbol Table



??0187				  Number HEADS:05C0
??0188				  Number 0044
??0189				  Number HEADS:05CA
??018A				  Number 0045
??018B				  Number HEADS:05D3
??018C				  Number 0045
??018D				  Number HEADS:05DD
??018E				  Number 0045
??018F				  Number HEADS:05E7
??0190				  Number 0046
??0191				  Number HEADS:05F1
??0194				  Number 0042
??0195				  Number HEADS:05FC
??0196				  Number 0043
??0197				  Number HEADS:0603
??0198				  Number 0001
??0199				  Number HEADS:060B
??019A				  Number 0001
??019B				  Number HEADS:0611
??019C				  Number 0002
??019D				  Number HEADS:0617
??019E				  Number 0045
??019F				  Number HEADS:061E
??01A0				  Number 0045
??01A1				  Number HEADS:0628
??01A2				  Number 0044
??01A3				  Number HEADS:0632
??01A4				  Number 0045
??01A5				  Number HEADS:063B
??01A6				  Number 0006
??01A7				  Number HEADS:0645
??01A8				  Number 0007
??01A9				  Number HEADS:0650
??01AA				  Number 0087
??01AB				  Number HEADS:065C
??01AC				  Number 0007
??01AD				  Number HEADS:0668
??01B0				  Number 0007
??01B1				  Number HEADS:0674
??01B2				  Number 0006
??01B3				  Number HEADS:0680
??01B4				  Number 0007
??01B5				  Number HEADS:068B
??01B6				  Number 0007
??01B7				  Number HEADS:0697
??01B8				  Number 0044
??01B9				  Number HEADS:06A3
??01BA				  Number 0044
??01BB				  Number HEADS:06AC
??01BC				  Number 0042
??01BD				  Number HEADS:06B5
??01BE				  Number 00C5
??01BF				  Number HEADS:06BC
??01C0				  Number 00C4
??01C1				  Number HEADS:06C6
??01C2				  Number 0047
??01C3				  Number HEADS:06CF
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 269
Symbol Table



??01C4				  Number 0046
??01C5				  Number HEADS:06DB
??01C6				  Number 0004
??01C7				  Byte	 MAIN:B1D2
??01C8				  Number 0006
??01C9				  Byte	 MAIN:B1E1
??01CA				  Number 0006
??01CB				  Byte	 MAIN:B1F0
??01CC				  Number 0044
??01CD				  Number HEADS:06E6
??01CE				  Number 00C6
??01CF				  Number HEADS:06EF
??01D0				  Number 0004
??01D1				  Number HEADS:06FA
??01D2				  Number 0004
??01D3				  Number HEADS:0703
??01D4				  Number 0003
??01D5				  Number HEADS:070C
??01D6				  Number 0002
??01D7				  Number HEADS:0714
??01D8				  Number 0002
??01D9				  Number HEADS:071B
??01DA				  Number 0003
??01DB				  Number HEADS:0722
??01DC				  Number 0003
??01DD				  Number HEADS:072A
??01DE				  Number 0002
??01DF				  Number HEADS:0732
??01E0				  Number 0001
??01E1				  Number HEADS:0739
??01E2				  Number 0001
??01E3				  Number HEADS:073F
??01E4				  Number 0006
??01E5				  Number HEADS:0745
??01E6				  Number 0007
??01E7				  Number HEADS:0750
??01E8				  Number 0007
??01E9				  Number HEADS:075C
??01EA				  Number 0006
??01EB				  Number HEADS:0768
??01EC				  Number 0003
??01ED				  Number HEADS:0773
??01EE				  Number 0003
??01EF				  Number HEADS:077B
??01F0				  Number 0003
??01F1				  Number HEADS:0783
??01F2				  Number 0003
??01F3				  Number HEADS:078B
??01F4				  Number 0003
??01F5				  Number HEADS:0793
??01F6				  Number 0003
??01F7				  Number HEADS:079B
??01F8				  Number 0003
??01F9				  Number HEADS:07A3
??01FA				  Number 0003
??01FB				  Number HEADS:07AB
??01FC				  Number 0003
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 270
Symbol Table



??01FD				  Number HEADS:07B3
??01FE				  Number 0003
??01FF				  Number HEADS:07BB
??0200				  Number 0003
??0201				  Number HEADS:07C3
??0202				  Number 0003
??0203				  Number HEADS:07CB
??0204				  Number 0003
??0205				  Number HEADS:07D3
??0206				  Number 0007
??0207				  Number HEADS:07DB
??0208				  Number 0004
??0209				  Number HEADS:07E7
??020A				  Number 0005
??020B				  Number HEADS:07F0
??020C				  Number 0009
??020D				  Number HEADS:07FA
??0210				  Number 0003
??0211				  Number HEADS:0808
??0218				  Number 0002
??0219				  Number HEADS:0810
??021A				  Number 0005
??021B				  Number HEADS:0817
??021C				  Number 0004
??021D				  Number HEADS:0821
??021E				  Number 0005
??021F				  Number HEADS:082A
??0220				  Number 0006
??0221				  Number HEADS:0834
??0222				  Number 000A
??0223				  Number HEADS:083F
??0224				  Number 000A
??0225				  Number HEADS:084E
??0226				  Number 0006
??0227				  Number HEADS:085D
??0228				  Number 000A
??0229				  Number HEADS:0868
??022A				  Number 000A
??022B				  Number HEADS:0877
??022C				  Number 000B
??022D				  Number HEADS:0886
??022E				  Number 0006
??022F				  Number HEADS:0896
??0230				  Number 0007
??0231				  Number HEADS:08A1
??0232				  Number 0004
??0233				  Number HEADS:08AD
??0234				  Number 0006
??0235				  Number HEADS:08B6
??0236				  Number 000A
??0237				  Number HEADS:08C1
??0238				  Number 000B
??0239				  Number HEADS:08D0
??023A				  Number 000B
??023B				  Number HEADS:08E0
??023C				  Number 0005
??023D				  Number HEADS:08F0
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 271
Symbol Table



??023E				  Number 0007
??023F				  Number HEADS:08FA
??0240				  Number 0006
??0241				  Number HEADS:0906
??0244				  Number 0004
??0245				  Number HEADS:0911
??024A				  Number 0003
??024B				  Number HEADS:091A
??0250				  Number 0004
??0251				  Number HEADS:0922
??0252				  Number 0005
??0253				  Number HEADS:092B
??0254				  Number 0004
??0255				  Number HEADS:0935
??0256				  Number 0004
??0257				  Number HEADS:093E
??0258				  Number 0006
??0259				  Number HEADS:0947
??025A				  Number 0004
??025B				  Number HEADS:0952
??025C				  Number 0002
??025D				  Number HEADS:095B
??025E				  Number 0007
??025F				  Number HEADS:0962
??0260				  Number 0007
??0261				  Number HEADS:096E
??0262				  Number 0006
??0263				  Number HEADS:097A
??0264				  Number 0005
??0265				  Number HEADS:0985
??0266				  Number 0007
??0267				  Number HEADS:098F
??026A				  Number 000B
??026B				  Number HEADS:099B
??026C				  Number 000B
??026D				  Number HEADS:09AB
??0272				  Number 0004
??0273				  Number HEADS:09BB
??0274				  Number 0002
??0275				  Number HEADS:09C4
??027A				  Number 000D
??027B				  Byte	 MAIN:B317
??027C				  Number 000C
??027D				  Byte	 MAIN:B336
??027E				  Number 000E
??027F				  Byte	 MAIN:B359
??0282				  Number 0005
??0283				  Number HEADS:09CB
??0284				  Number 0001
??0285				  Number HEADS:09D5
??0286				  Number 0041
??0287				  Number HEADS:09DB
??0288				  Number 0007
??0289				  Number HEADS:09E1
??028A				  Number 0007
??028B				  Number HEADS:09ED
??028C				  Number 0045
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 272
Symbol Table



??028D				  Number HEADS:09F9
??028E				  Number 0006
??028F				  Number HEADS:0A03
??0290				  Number 0008
??0291				  Number HEADS:0A0E
??0292				  Number 0005
??0293				  Number HEADS:0A1B
??0294				  Number 0008
??0295				  Number HEADS:0A25
??0296				  Number 0009
??0297				  Number HEADS:0A32
??0298				  Number 0009
??0299				  Number HEADS:0A40
??029A				  Number 0004
??029B				  Number HEADS:0A4E
??029C				  Number 0044
??029D				  Number HEADS:0A57
??02A0				  Number 0042
??02A1				  Number HEADS:0A60
??02A2				  Number 0011
??02A3				  Byte	 MAIN:0F61
??02A4				  Number 0005
??02A5				  Number HEADS:0A67
??02A6				  Number 00C2
??02A7				  Number HEADS:0A71
??02A8				  Number 0003
??02A9				  Number HEADS:0A78
??02AA				  Number 0004
??02AB				  Number HEADS:0A80
??02AC				  Number 0005
??02AD				  Number HEADS:0A89
??02AE				  Number 0082
??02AF				  Number HEADS:0A93
??02B0				  Number 0081
??02B1				  Number HEADS:0A9A
??02B2				  Number 0001
??02B3				  Number HEADS:0AA0
??02B4				  Number 0001
??02B5				  Number HEADS:0AA6
??02B6				  Number 0001
??02B7				  Number HEADS:0AAC
??02B8				  Number 0002
??02B9				  Number HEADS:0AB2
??02BA				  Number 0005
??02BB				  Number HEADS:0AB9
??02BC				  Number 0003
??02BD				  Number HEADS:0AC3
??02BE				  Number 0005
??02BF				  Number HEADS:0ACB
??02C0				  Number 0006
??02C1				  Number HEADS:0AD5
??02C2				  Number 0005
??02C3				  Number HEADS:0AE0
??02C4				  Number 0007
??02C5				  Number HEADS:0AEA
??02C6				  Number 0002
??02C7				  Number HEADS:0AF6
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 273
Symbol Table



??02C8				  Number 0003
??02C9				  Number HEADS:0AFD
??02CC				  Number 0003
??02CD				  Number HEADS:0B05
??02CE				  Number 0004
??02CF				  Number HEADS:0B0D
??02D0				  Number 0003
??02D1				  Number HEADS:0B16
??02D2				  Number 0003
??02D3				  Number HEADS:0B1E
??02D4				  Number 0007
??02D5				  Number HEADS:0B26
??02D6				  Number 0005
??02D7				  Number HEADS:0B32
??02D8				  Number 0003
??02D9				  Number HEADS:0B3C
??02DA				  Number 0007
??02DB				  Number HEADS:0B44
??02DC				  Number 0003
??02DD				  Number HEADS:0B50
??02DE				  Number 0008
??02DF				  Number HEADS:0B58
??02E4				  Number 0002
??02E5				  Number HEADS:0B65
??02E6				  Number 0002
??02E7				  Number HEADS:0B6C
??02E8				  Number 0002
??02E9				  Number HEADS:0B73
??02EC				  Number 0008
??02ED				  Number HEADS:0B7A
??02EE				  Number 0003
??02EF				  Number HEADS:0B87
??02F0				  Number 0003
??02F1				  Number HEADS:0B8F
??02F2				  Number 0007
??02F3				  Number HEADS:0B97
??02F4				  Number 0004
??02F5				  Number HEADS:0BA3
??02F8				  Number 0003
??02F9				  Number HEADS:0BAC
??02FA				  Number 0003
??02FB				  Number HEADS:0BB4
??02FC				  Number 0005
??02FD				  Number HEADS:0BBC
??0304				  Number 000B
??0305				  Number HEADS:0BC6
??0306				  Number 0006
??0307				  Number HEADS:0BD6
??030A				  Number 0004
??030B				  Number HEADS:0BE1
??030C				  Number 0005
??030D				  Number HEADS:0BEA
??030E				  Number 000D
??030F				  Byte	 MAIN:103B
??0310				  Number 0006
??0311				  Number HEADS:0BF4
??0312				  Number 0007
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 274
Symbol Table



??0313				  Number HEADS:0BFF
??0314				  Number 0002
??0315				  Number HEADS:0C0B
??0316				  Number 0001
??0317				  Number HEADS:0C12
??0318				  Number 0005
??0319				  Number HEADS:0C18
??031E				  Number 0006
??031F				  Number HEADS:0C22
??0322				  Number 0006
??0323				  Number HEADS:0C2D
??0326				  Number 0005
??0327				  Number HEADS:0C38
??0328				  Number 0006
??0329				  Number HEADS:0C42
??032A				  Number 0003
??032B				  Number HEADS:0C4D
??032C				  Number 0008
??032D				  Byte	 MAIN:B62D
??0330				  Number 0004
??0331				  Number HEADS:0C55
??0332				  Number 0004
??0333				  Number HEADS:0C5E
??0334				  Number 0004
??0335				  Number HEADS:0C67
??0336				  Number 0005
??0337				  Number HEADS:0C70
??0338				  Number 0010
??0339				  Byte	 MAIN:B663
??033A				  Number 0005
??033B				  Number HEADS:0C7A
??033C				  Number 000E
??033D				  Byte	 MAIN:B67D
??033E				  Number 0006
??033F				  Number HEADS:0C84
??0340				  Number 0006
??0341				  Byte	 MAIN:B69F
??0342				  Number 0008
??0343				  Byte	 MAIN:B6B6
??0344				  Number 0008
??0345				  Byte	 MAIN:B6D9
??0348				  Number 000C
??0349				  Byte	 MAIN:B6EB
??034A				  Number 0041
??034B				  Number HEADS:0C8F
??034C				  Number 0001
??034D				  Number HEADS:0C95
??0350				  Number 0006
??0351				  Number HEADS:0C9B
??0352				  Number 0003
??0353				  Number HEADS:0CA6
??0354				  Number 0004
??0355				  Number HEADS:0CAE
??0356				  Number 0006
??0357				  Number HEADS:0CB7
??0358				  Number 0005
??0359				  Number HEADS:0CC2
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 275
Symbol Table



??0360				  Number 0006
??0361				  Number HEADS:0CCC
??0368				  Number 0004
??0369				  Number HEADS:0CD7
??036A				  Number 0005
??036B				  Number HEADS:0CE0
??036E				  Number 0001
??036F				  Number HEADS:0CEA
??0370				  Number 004B
??0371				  Number HEADS:0CF0
??0372				  Number 0049
??0373				  Number HEADS:0D00
??0374				  Number 0009
??0375				  Number HEADS:0D0E
??0376				  Number 0006
??0377				  Number HEADS:0D1C
??0378				  Number 0041
??0379				  Number HEADS:0D27
??037A				  Number 0042
??037B				  Number HEADS:0D2D
??037C				  Number 0041
??037D				  Number HEADS:0D34
??037E				  Number 0005
??037F				  Number HEADS:0D3A
??0382				  Number 000A
??0383				  Number HEADS:0D44
??0384				  Number 000B
??0385				  Number HEADS:0D53
??0386				  Number 0045
??0387				  Number HEADS:0D67
??0388				  Number 0006
??0389				  Number HEADS:0D71
??038C				  Number 0009
??038D				  Number HEADS:0D7C
??0390				  Number 0006
??0391				  Number HEADS:0D8A
??0392				  Number 0008
??0393				  Number HEADS:0D95
??0396				  Number 0006
??0397				  Number HEADS:0DA2
??03A0				  Number 0003
??03A1				  Byte	 MAIN:BA79
??03A2				  Number 0006
??03A3				  Number HEADS:0DAD
??03A4				  Number 0003
??03A5				  Number HEADS:0DB8
??03A8				  Number 0004
??03A9				  Number HEADS:0DC0
??03B0				  Number 0008
??03B1				  Byte	 MAIN:BABD
??03B2				  Number 0005
??03B3				  Byte	 MAIN:BACE
??03B4				  Number 0007
??03B5				  Byte	 MAIN:BADA
??03B8				  Number 000D
??03B9				  Byte	 MAIN:1204
??03BA				  Number 0005
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 276
Symbol Table



??03BB				  Number HEADS:0DC9
??03BC				  Number 0005
??03BD				  Number HEADS:0DD3
??03BE				  Number 0005
??03BF				  Number HEADS:0DDD
??03C2				  Number 0006
??03C3				  Number HEADS:0DE7
??03C4				  Number 0046
??03C5				  Number HEADS:0DF2
??03C6				  Number 0007
??03C7				  Number HEADS:0DFD
??03C8				  Number 0004
??03C9				  Number HEADS:0E09
??03CA				  Number 0005
??03CB				  Byte	 MAIN:BB53
??03CC				  Number 0006
??03CD				  Byte	 MAIN:BB91
??03CE				  Number 0009
??03CF				  Number HEADS:0E12
??03D0				  Number 0007
??03D1				  Number HEADS:0E20
??03D4				  Number 0008
??03D5				  Number HEADS:0E2C
??03DC				  Number 000C
??03DD				  Byte	 MAIN:BC1F
??03E2				  Number 0006
??03E3				  Number HEADS:0E39
??03E6				  Number 000D
??03E7				  Byte	 MAIN:BC86
??03E8				  Number 0005
??03E9				  Number HEADS:0E44
??03EC				  Number 0005
??03ED				  Number HEADS:0E4E
??03EE				  Number 0006
??03EF				  Number HEADS:0E58
??03F0				  Number 0008
??03F1				  Byte	 MAIN:BD72
??03F2				  Number 0006
??03F3				  Number HEADS:0E63
??03F4				  Number 0008
??03F5				  Number HEADS:0E6E
??03F6				  Number 000B
??03F7				  Byte	 MAIN:BDCF
??03F8				  Number 0007
??03F9				  Number HEADS:0E7B
??03FA				  Number 0048
??03FB				  Number HEADS:0E87
??03FC				  Number 0002
??03FD				  Number HEADS:0E94
??03FE				  Number 0002
??03FF				  Number HEADS:0E9B
??0402				  Number 0048
??0403				  Number HEADS:0EA2
??0404				  Number 0042
??0405				  Number HEADS:0EAF
??0408				  Number 0042
??0409				  Number HEADS:0EB6
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 277
Symbol Table



??040C				  Number 0047
??040D				  Number HEADS:0EBD
??040E				  Number 0048
??040F				  Number HEADS:0EC9
??0410				  Number 0043
??0411				  Number HEADS:0ED6
??0412				  Number 0049
??0413				  Number HEADS:0EDE
??0414				  Number 0047
??0415				  Number HEADS:0EEC
??0416				  Number 0004
??0417				  Number HEADS:0EF8
??0418				  Number 0046
??0419				  Number HEADS:0F01
??041A				  Number 0003
??041B				  Number HEADS:0F0C
??041C				  Number 0002
??041D				  Byte	 MAIN:145D
??041E				  Number 0002
??041F				  Byte	 MAIN:1464
??0420				  Number 0003
??0421				  Number HEADS:0F14
??0422				  Number 0002
??0423				  Byte	 MAIN:146E
??0424				  Number 0005
??0425				  Number HEADS:0F1C
??0426				  Number 0006
??0427				  Number HEADS:0F26
??0428				  Number 0004
??0429				  Number HEADS:0F31
??042A				  Number 0008
??042B				  Number HEADS:0F3A
??042C				  Number 0004
??042D				  Number HEADS:0F47
??042E				  Number 0002
??042F				  Byte	 MAIN:14E7
??0430				  Number 0005
??0431				  Number HEADS:0F50
??0434				  Number 0004
??0435				  Number HEADS:0F5A
??0436				  Number 0001
??0437				  Byte	 MAIN:1551
??0438				  Number 0004
??0439				  Number HEADS:0F63
??043A				  Number 000D
??043B				  Number HEADS:0F6C
??043C				  Number 0009
??043D				  Number HEADS:0F7E
??043E				  Number 000B
??043F				  Number HEADS:0F8C
??0440				  Number 000F
??0441				  Number HEADS:0F9C
??0442				  Number 0009
??0443				  Number HEADS:0FB0
??0444				  Number 0005
??0445				  Number HEADS:0FBE
??0446				  Number 000A
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 278
Symbol Table



??0447				  Number HEADS:0FC8
??0448				  Number 0006
??0449				  Number HEADS:0FD7
??044C				  Number 0009
??044D				  Number HEADS:0FE2
??044E				  Number 000A
??044F				  Number HEADS:0FF0
??0450				  Number 0006
??0451				  Number HEADS:0FFF
??0452				  Number 0083
??0453				  Number HEADS:100A
??0454				  Number 0083
??0455				  Number HEADS:1012
??0456				  Number 0083
??0457				  Number HEADS:101A
??0458				  Number 00C3
??0459				  Number HEADS:1022
??045A				  Number 0009
??045B				  Number HEADS:102A
??045C				  Number 000B
??045D				  Number HEADS:1038
??045E				  Number 000A
??045F				  Number HEADS:1048
??0460				  Number 000A
??0461				  Number HEADS:1057
??0462				  Number 000B
??0463				  Number HEADS:1066
??0464				  Number 000B
??0465				  Number HEADS:1076
??0466				  Number 000B
??0467				  Number HEADS:1086
??0468				  Number F97D
??046B				  Number 0009
??046C				  Number HEADS:1096
??046D				  Number 0003
??046E				  Number HEADS:10A4
??046F				  Number 000E
??0470				  Byte	 MAIN:BF00
??047F				  Number 0007
??0480				  Number HEADS:10AC
??0481				  Number 0008
??0482				  Number HEADS:10B8
??0485				  Number 000C
??0486				  Byte	 MAIN:BF53
??0487				  Number 0008
??0488				  Number HEADS:10C5
??0489				  Number 000D
??048A				  Number HEADS:10D2
??048B				  Number 0006
??048C				  Number HEADS:10E4
??048F				  Number 000F
??0490				  Byte	 MAIN:BF8B
??0495				  Number 0012
??0496				  Byte	 MAIN:BFE3
??0497				  Number 000C
??0498				  Number HEADS:10EF
??0499				  Number 0005
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 279
Symbol Table



??049A				  Number HEADS:1100
??049B				  Number 0006
??049C				  Number HEADS:110A
??049D				  Number 0005
??049E				  Number HEADS:1115
??049F				  Number 0043
??04A0				  Number HEADS:111F
??04A1				  Number 000C
??04A2				  Byte	 MAIN:C06D
??04A5				  Number 0004
??04A6				  Number HEADS:1127
??04A7				  Number 0004
??04A8				  Number HEADS:1130
??04AB				  Number 000A
??04AC				  Number HEADS:1139
??04AD				  Number 0011
??04AE				  Byte	 MAIN:C0ED
??04B1				  Number 0005
??04B2				  Number HEADS:1148
??04B3				  Number 0009
??04B4				  Number HEADS:1152
??04B5				  Number 0008
??04B6				  Number HEADS:1160
??04BB				  Number 0014
??04BC				  Byte	 MAIN:C187
??04BD				  Number 0011
??04BE				  Byte	 MAIN:C1AE
??04C1				  Number 0004
??04C2				  Number HEADS:116D
??04C3				  Number 0003
??04C4				  Byte	 MAIN:C204
??04C7				  Number 000F
??04C8				  Byte	 MAIN:C21D
??04C9				  Number 000B
??04CA				  Number HEADS:1176
??04CB				  Number 0010
??04CC				  Byte	 MAIN:C23A
??04CD				  Number 0005
??04CE				  Number HEADS:1186
??04CF				  Number 000D
??04D0				  Byte	 MAIN:C26C
??04D1				  Number 0017
??04D2				  Byte	 MAIN:C282
??04D3				  Number 0006
??04D4				  Number HEADS:1190
??04D5				  Number 0005
??04D6				  Number HEADS:119B
??04D7				  Number 0004
??04D8				  Number HEADS:11A5
??04D9				  Number 0003
??04DA				  Byte	 MAIN:C307
??04DB				  Number 000F
??04DC				  Byte	 MAIN:C3D8
??04DD				  Number 0007
??04DE				  Number HEADS:11AE
??04DF				  Number 000E
??04E0				  Number HEADS:11BA
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 280
Symbol Table



??04E1				  Number 0085
??04E2				  Number HEADS:11CD
??04E3				  Number 00C5
??04E4				  Number HEADS:11D7
??04E5				  Number 0085
??04E6				  Number HEADS:11E1
??04E7				  Number 0085
??04E8				  Number HEADS:11EB
??04E9				  Number 0085
??04EA				  Number HEADS:11F5
??04EB				  Number 00C5
??04EC				  Number HEADS:11FF
??04ED				  Number 00C7
??04EE				  Number HEADS:1209
??04EF				  Number 0003
??04F0				  Number HEADS:1215
??04F1				  Number 0006
??04F2				  Number HEADS:121D
??04F3				  Number 0006
??04F4				  Number HEADS:1228
??04F5				  Number 00C6
??04F6				  Number HEADS:1233
??04F7				  Number 00C8
??04F8				  Number HEADS:123E
??04F9				  Number 0002
??04FA				  Number HEADS:124B
??04FB				  Number 0048
??04FC				  Number HEADS:1252
??04FD				  Number 0009
??04FE				  Number HEADS:125F
??04FF				  Number 0089
??0500				  Number HEADS:126D
??0501				  Number 0006
??0502				  Number HEADS:127B
??0503				  Number 0005
??0504				  Number HEADS:1286
??0505				  Number 0004
??0506				  Number HEADS:1290
??0507				  Number 0005
??0508				  Number HEADS:1299
??0509				  Number 0005
??050A				  Number HEADS:12A3
??050B				  Number 0004
??050C				  Number HEADS:12AD
??050D				  Number 0002
??050E				  Number HEADS:12B6
??050F				  Number 0002
??0510				  Number HEADS:12BD
??0511				  Number 0005
??0512				  Number HEADS:12C4
??0513				  Number 0004
??0514				  Number HEADS:12CE
??0515				  Number 0007
??0516				  Number HEADS:12D7
??0517				  Number 0003
??0518				  Number HEADS:12E3
??0519				  Number 0003
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 281
Symbol Table



??051A				  Number HEADS:12EB
??051B				  Number 0003
??051C				  Number HEADS:12F3
??051D				  Number 0003
??051E				  Number HEADS:12FB
??051F				  Number 0003
??0520				  Number HEADS:1303
??0521				  Number 0003
??0522				  Number HEADS:130B
??0523				  Number 0002
??0524				  Number HEADS:1313
??0525				  Number 0003
??0526				  Number HEADS:131A
??0527				  Number 0002
??0528				  Number HEADS:1322
??0529				  Number 0004
??052A				  Number HEADS:1329
??052B				  Number 0004
??052C				  Number HEADS:1332
??052D				  Number 0005
??052E				  Number HEADS:133B
??052F				  Number 0006
??0530				  Number HEADS:1345
??0531				  Number 0002
??0532				  Number HEADS:1350
??0533				  Number 0002
??0534				  Number HEADS:1357
??0535				  Number 0002
??0536				  Number HEADS:135E
??0537				  Number 0002
??0538				  Number HEADS:1365
??0539				  Number 0007
??053A				  Number HEADS:136C
??0541				  Number 0006
??0542				  Number HEADS:1378
??0543				  Number 0006
??0544				  Number HEADS:1383
??0545				  Number 000D
??0546				  Number HEADS:138E
??0549				  Number 0009
??054A				  Number HEADS:13A0
??054B				  Number 0009
??054C				  Number HEADS:13AE
??054D				  Number 000D
??054E				  Number HEADS:13BC
??054F				  Number 0003
??0550				  Number HEADS:13CE
??0575				  Number 0005
??0576				  Number HEADS:13D6
??0577				  Number 0004
??0578				  Number HEADS:13E0
??0579				  Number 0003
??057A				  Number HEADS:13E9
??057B				  Number 0005
??057C				  Number HEADS:13F1
??057D				  Number 0004
??057E				  Number HEADS:13FB
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 282
Symbol Table



??057F				  Number 0003
??0580				  Number HEADS:1404
??0581				  Number 0004
??0582				  Number HEADS:140C
??0583				  Number 0003
??0584				  Number HEADS:1415
??0585				  Number 0002
??0586				  Number HEADS:141D
??0587				  Number 0004
??0588				  Number HEADS:1424
??0589				  Number 0003
??058A				  Number HEADS:142D
??058B				  Number 0002
??058C				  Number HEADS:1435
??058D				  Number 0005
??058E				  Number HEADS:143C
??058F				  Number 0004
??0590				  Number HEADS:1446
??0591				  Number 0003
??0592				  Number HEADS:144F
??0593				  Number 0003
??0594				  Number HEADS:1457
??0595				  Number 0004
??0596				  Number HEADS:145F
??0597				  Number 0004
??0598				  Number HEADS:1468
??0599				  Number 0005
??059A				  Number HEADS:1471
??059B				  Number 0002
??059C				  Number HEADS:147B
??05A3				  Number 0001
??05A4				  Byte	 MAIN:C452
??DATE				  Text	 "22/05/10"
??FILENAME			  Text	 "kernel  "
??TIME				  Text	 "22:21:49"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 MAIN
@FILENAME			  Text	 KERNEL
@WORDSIZE			  Text	 2
ABORQ				  Near	 MAIN:BAF7
ABORQ1				  Word	 MAIN:BB08
ABORT				  Near	 MAIN:1215
ABSS				  Near	 MAIN:0750
ACC1				  Number MAIN:182D
ACC2				  Number MAIN:182E
ACC3				  Number MAIN:182F
ACCE				  Byte	 MAIN:182B
ACCEPT				  Near	 MAIN:1110
ACCS				  Number MAIN:182C
ACONT				  Word	 MAIN:B22D
ACURR				  Word	 MAIN:B22F
ADDR				  Near	 MAIN:B48E
ADDR1				  Word	 MAIN:B49D
AEXEC				  Near	 MAIN:029A
AFFIX				  Near	 MAIN:04C5
AFNUMB				  Word	 MAIN:0FAA
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 283
Symbol Table



AGAIN				  Near	 MAIN:B0E3
AHEAD				  Near	 MAIN:B0BE
AIDENT				  Word	 MAIN:0FA8
AINIT				  Word	 MAIN:0FA6
AKA				  Near	 MAIN:B4C9
AKA1				  Word	 MAIN:B4E1
ALIGND				  Alias	 NEXT
ALIGNN				  Alias	 NEXT
ALLOT				  Near	 MAIN:102F
ALLOT1				  Word	 MAIN:1048
ANDD				  Near	 MAIN:0723
ANUMB				  Word	 MAIN:0FAE
APP				  Near	 MAIN:1014
APUSH				  Near	 MAIN:01B9
ARROW				  Near	 MAIN:C061
AT				  Near	 MAIN:03D2
ATAN				  Near	 MAIN:22F8
ATAN1				  Near	 MAIN:2300
ATAN10				  Byte	 MAIN:2374
ATAN2				  Near	 MAIN:2317
ATAN3				  Near	 MAIN:2341
ATAN4				  Near	 MAIN:2347
ATAN5				  Near	 MAIN:2350
ATAN6				  Byte	 MAIN:2356
ATAN7				  Byte	 MAIN:2357
ATAN8				  Byte	 MAIN:235F
ATAN9				  Byte	 MAIN:2370
ATL				  Near	 MAIN:0400
ATTRIB				  Near	 MAIN:0CF2
ATXY				  Near	 MAIN:0CAC
ATXY1				  Near	 MAIN:0CB8
BAL				  Near	 MAIN:B01B
BAL1				  Word	 MAIN:B01E
BASE				  Near	 MAIN:0FF9
BBUF				  Near	 MAIN:B4E3
BBUF1				  Word	 MAIN:B4E6
BCOMP				  Near	 MAIN:BE8A
BCONI				  Near	 MAIN:0D7C
BCONI1				  Near	 MAIN:0D9A
BCONI2				  Near	 MAIN:0DA4
BCONO				  Near	 MAIN:0DB1
BCONO1				  Near	 MAIN:0DE4
BCONO2				  Near	 MAIN:0E00
BCONO3				  Near	 MAIN:0E03
BCONO4				  Near	 MAIN:0E0A
BCONO5				  Near	 MAIN:0E0E
BCONO6				  Near	 MAIN:0E18
BCONO7				  Near	 MAIN:0E23
BCONQ				  Near	 MAIN:0D63
BCONQ1				  Near	 MAIN:0D70
BCONQ2				  Near	 MAIN:0D76
BDEF				  Near	 MAIN:B80D
BDIGS				  Near	 MAIN:09CC
BEEP				  Near	 MAIN:0CA7
BEEP0				  Near	 MAIN:0C60
BEGIN				  Near	 MAIN:B078
BEHEAD				  Near	 MAIN:BC5F
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 284
Symbol Table



BEHEAD1				  Word	 MAIN:BC74
BEL				  Number 0007
BETA				  Alias	 NO
BETW				  Near	 MAIN:06C5
BG				  Near	 MAIN:0D06
BIN				  Near	 MAIN:08DC
BINN				  Alias	 NEXT
BIOSFN				  Word	 MAIN:0E32
BIOSIO				  Near	 MAIN:0E3E
BIOSIO1				  Near	 MAIN:0E41
BITS				  Number 0000
BLANK				  Near	 MAIN:0463
BLK				  Near	 MAIN:B4F9
BLK1				  Word	 MAIN:B4FC
BLKERR				  Near	 MAIN:BF85
BLKRW				  Near	 MAIN:BF9C
BLKRW1				  Word	 MAIN:BFC9
BLKRW2				  Word	 MAIN:BFD1
BLKS				  Near	 MAIN:BF18
BLL				  Near	 MAIN:0F8B
BLOCK				  Near	 MAIN:C036
BLOCK1				  Word	 MAIN:C05B
BLOCK2				  Word	 MAIN:C05D
BLWORD				  Near	 MAIN:B7D8
BMOVE				  Near	 MAIN:023A
BMOVU				  Near	 MAIN:025B
BNUM				  Near	 MAIN:BF30
BNUM1				  Word	 MAIN:BF33
BOOT				  Near	 MAIN:0FC6
BOOT1				  Word	 MAIN:0FC9
BOOT2				  Word	 MAIN:0FCB
BOOTQ				  Near	 MAIN:11A9
BOUNDS				  Near	 MAIN:0AE6
BRAN				  Near	 MAIN:0A8D
BREAK				  Near	 MAIN:B12C
BRESOL				  Near	 MAIN:B08E
BS				  Number 0008
BSLAS				  Near	 MAIN:B82C
BSLAS1				  Word	 MAIN:B849
BSLSS				  Near	 MAIN:B851
BSWP				  Near	 MAIN:0372
BTICK				  Near	 MAIN:BE81
BUDEF				  Near	 MAIN:B802
BUF				  Near	 MAIN:BF2B
BUFFER				  Near	 MAIN:C027
BUFSIZ				  Number 0500
BUILD				  Near	 MAIN:B3C6
BYE				  Near	 MAIN:BA80
CAN				  Number 0018
CAPS				  Near	 MAIN:0552
CASEE				  Alias	 COND
CAT				  Near	 MAIN:03DE
CATCH				  Near	 MAIN:124A
CATCH1				  Word	 MAIN:126D
CATCHR				  Near	 MAIN:0FF4
CATL				  Near	 MAIN:0416
CATTR				  Byte	 MAIN:0103
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 285
Symbol Table



CCOMM				  Near	 MAIN:1062
CELLM				  Alias	 TWOM
CELLP				  Alias	 TWOP
CELLS				  Alias	 TSTAR
CFADR				  Number MAIN:23BB
CFS				  Alias	 YES
CHAIN				  Near	 MAIN:BC95
CHAR				  Near	 MAIN:BE9A
CHARP				  Alias	 ONEP
CHARQ				  Near	 MAIN:BE54
CHARS				  Alias	 NEXT
CHECK				  Near	 MAIN:B520
CHECK1				  Word	 MAIN:B523
CHKQ				  Near	 MAIN:B540
CHS				  Near	 MAIN:18CA
CHSS				  Near	 MAIN:18C4
CLDD				  Near	 MAIN:12BC
CLDD1				  Near	 MAIN:12FB
CLDD2				  Near	 MAIN:1309
CLDD3				  Near	 MAIN:1311
CLDD4				  Near	 MAIN:133D
CLDD5				  Near	 MAIN:134F
CLDD6				  Near	 MAIN:1359
CLDD7				  Near	 MAIN:1379
CLDD8				  Near	 MAIN:137F
CLDD9				  Word	 MAIN:1384
CLEOL				  Near	 MAIN:0D33
CLEOL1				  Near	 MAIN:0D3F
CLIT				  Near	 MAIN:02A1
CLOSA				  Near	 MAIN:C12B
CLOSA1				  Word	 MAIN:C13D
CLOSA2				  Word	 MAIN:C14B
CLOSE				  Near	 MAIN:C11C
CLOSE1				  Word	 MAIN:C129
CLOSF				  Near	 MAIN:16FD
CLRTBL				  Near	 MAIN:0D14
CLS				  Near	 MAIN:0E9C
CMDF				  Byte	 MAIN:01E0
CMDTAIL				  Near	 MAIN:1287
CMODE				  Byte	 MAIN:0105
CMOVE				  Near	 MAIN:047B
CMOVE1				  Near	 MAIN:047E
CMOVL				  Near	 MAIN:048D
CMOVU				  Near	 MAIN:0484
CMPNC				  Near	 MAIN:0564
CMPNC1				  Near	 MAIN:0569
CMPNC2				  Near	 MAIN:057C
CMPP				  Near	 MAIN:057E
CMPP1				  Near	 MAIN:0593
CMPP2				  Near	 MAIN:0596
CMPP3				  Near	 MAIN:05A2
CMPSS				  Near	 MAIN:055A
COLD				  Near	 MAIN:1386
COLD1				  Near	 MAIN:13CE
COLD10				  Word	 MAIN:BB9D
COLD2				  Near	 MAIN:13E5
COLD3				  Near	 MAIN:13FB
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 286
Symbol Table



COLD6				  Word	 MAIN:BB0E
COLD7				  Word	 MAIN:BB4A
COLD8				  Word	 MAIN:BB50
COLD9				  Word	 MAIN:BB5E
COLON				  Near	 MAIN:B3D1
COLON1				  Word	 MAIN:B3DC
COMCALL				  Near	 MAIN:B3B4
COMMA				  Near	 MAIN:106D
COMP				  Near	 MAIN:BDDE
COMQ				  Near	 MAIN:BE1A
COMXT				  Near	 MAIN:BDAB
COMXT1				  Word	 MAIN:BDDA
CON				  Near	 MAIN:B453
COND				  Near	 MAIN:B18A
CONIN				  Near	 MAIN:0E74
CONIN1				  Word	 MAIN:0E77
CONIN2				  Word	 MAIN:0E8D
CONOUT				  Near	 MAIN:0EB2
CONSOL				  Near	 MAIN:0F20
CONT				  Near	 MAIN:B22A
CONTT				  Near	 MAIN:B193
CONTT1				  Word	 MAIN:B196
CONTT2				  Word	 MAIN:B1A2
COS				  Near	 MAIN:227F
COUNT				  Near	 MAIN:04A5
CR				  Number 000D
CREAT				  Near	 MAIN:B435
CREAT1				  Near	 MAIN:B438
CREATF				  Near	 MAIN:16E0
CREATF1				  Near	 MAIN:16F4
CRR				  Near	 MAIN:0F13
CSDRO				  Near	 MAIN:B154
CSEG1				  Word	 MAIN:03C6
CSEGG				  Near	 MAIN:03C3
CSLL				  Near	 MAIN:B4E8
CSM				  Near	 MAIN:B179
CSPIC				  Near	 MAIN:B14D
CSPOP				  Near	 MAIN:B170
CSPP				  Near	 MAIN:B51B
CSPP1				  Word	 MAIN:B51E
CSPUSH				  Near	 MAIN:B167
CSROL				  Alias	 ROLL
CSST				  Near	 MAIN:0543
CSTES				  Near	 MAIN:B17F
CSTOR				  Near	 MAIN:03E7
CSTORL				  Near	 MAIN:0424
CTLZ				  Number 001A
CVERR				  Near	 MAIN:0808
CVERR0				  Near	 MAIN:0807
CW				  Number 0002
DABS				  Near	 MAIN:0765
DALIAS				  Near	 MAIN:B580
DALLOT				  Near	 MAIN:104E
DBAL				  Near	 MAIN:B027
DBLAN				  Near	 MAIN:0515
DBOLD				  Byte	 MAIN:0D19
DBRITE				  Byte	 MAIN:0D1A
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 287
Symbol Table



DCAPS				  Near	 MAIN:054F
DCMQ				  Near	 MAIN:0A78
DCONI				  Near	 MAIN:0DA5
DCONO				  Near	 MAIN:0DAA
DCONQ				  Near	 MAIN:0D77
DDOT				  Near	 MAIN:0B0F
DDOT1				  Word	 MAIN:0B14
DDOTR				  Near	 MAIN:0B1F
DDOTR1				  Word	 MAIN:0B26
DEBUG				  Alias	 NO
DECIM				  Near	 MAIN:08D4
DEFDRV				  Byte	 MAIN:01DE
DEFER				  Near	 MAIN:B4B8
DEFIN				  Near	 MAIN:B8BC
DEFINED				  Near	 MAIN:B7F0
DELF				  Near	 MAIN:171E
DELLN				  Near	 MAIN:0D59
DEPTH				  Near	 MAIN:03B5
DEQU				  Near	 MAIN:06D4
DEXT				  Near	 MAIN:156B
DFP				  Near	 MAIN:C3FD
DIG				  Near	 MAIN:0A16
DIG1				  Near	 MAIN:0A30
DIGIT				  Near	 MAIN:08E0
DIGIT1				  Near	 MAIN:08F3
DIGIT2				  Near	 MAIN:08FD
DIGS				  Near	 MAIN:0A4F
DIGS1				  Word	 MAIN:0A52
DINVER				  Byte	 MAIN:0D18
DIVX				  Near	 MAIN:1AE2
DIVX1				  Near	 MAIN:1B0D
DIVX2				  Near	 MAIN:1B0F
DIVX3				  Near	 MAIN:1B17
DIVX4				  Near	 MAIN:1B1E
DIVX5				  Near	 MAIN:1B2E
DLESS				  Near	 MAIN:06E4
DLESS1				  Near	 MAIN:06F1
DMAX				  Near	 MAIN:0716
DMIN				  Near	 MAIN:0701
DMIN1				  Word	 MAIN:070C
DMIN2				  Word	 MAIN:0712
DNEG				  Near	 MAIN:0759
DNEG1				  Near	 MAIN:075A
DNFA				  Byte	 HEADS:0000
DNORM				  Byte	 MAIN:0D17
DO				  Near	 MAIN:B101
DO1				  Near	 MAIN:B104
DOCCO				  Alias	 CAT
DOCOL				  Near	 MAIN:0275
DOCON				  Alias	 AT
DOCRE				  Alias	 NEXT
DOES				  Near	 MAIN:B426
DOFCON				  Near	 MAIN:1778
DOSBUF				  Number 0080
DOSC				  Near	 MAIN:0B64
DOSERR				  Near	 MAIN:0BFF
DOSERR1				  Near	 MAIN:0C07
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 288
Symbol Table



DOSERR2				  Near	 MAIN:0C0A
DOSERR3				  Near	 MAIN:0C11
DOSFCB				  Number 005C
DOSFN				  Word	 MAIN:0E38
DOSIO				  Near	 MAIN:0E4C
DOSV				  Word	 MAIN:01DA
DOSVER				  Near	 MAIN:0B4A
DOT				  Near	 MAIN:0B37
DOT1				  Word	 MAIN:0B46
DOTCON				  Alias	 TAT
DOTERR				  Near	 MAIN:BA8D
DOTERR1				  Word	 MAIN:BAD7
DOTID				  Near	 MAIN:B5EC
DOTID1				  Word	 MAIN:B609
DOTID2				  Word	 MAIN:B60D
DOTID3				  Word	 MAIN:B62A
DOTLF				  Near	 MAIN:C15C
DOTNAM				  Near	 MAIN:B637
DOTQ				  Near	 MAIN:BE3D
DOTQ1				  Word	 MAIN:BE4E
DOTR				  Near	 MAIN:0B2C
DOTVAR				  Alias	 NEXT
DOTVOC				  Near	 MAIN:B640
DOUSE				  Near	 MAIN:027F
DOVAL				  Alias	 AT
DOVOC				  Near	 MAIN:B8B1
DPATH				  Near	 MAIN:14FA
DPATH1				  Word	 MAIN:1510
DPATH2				  Word	 MAIN:1529
DPF				  Near	 MAIN:1D07
DPH				  Near	 MAIN:B52F
DPL				  Near	 MAIN:1003
DPLUS				  Near	 MAIN:0780
DPP				  Near	 MAIN:0FEA
DPS				  Near	 MAIN:B525
DPUSH				  Near	 MAIN:01B8
DQUES				  Near	 MAIN:B2DA
DROLL				  Near	 MAIN:034F
DROP				  Near	 MAIN:02FE
DROT				  Near	 MAIN:032D
DSUB				  Near	 MAIN:078C
DTDIV				  Near	 MAIN:08B0
DTOF				  Near	 MAIN:1C0E
DTOS				  Alias	 DROP
DTRAI				  Near	 MAIN:04FA
DTSTR				  Near	 MAIN:08A7
DULES				  Near	 MAIN:06F4
DUPP				  Near	 MAIN:0304
DXF				  Near	 MAIN:01B2
DYN				  Near	 MAIN:1453
DYN1				  Word	 MAIN:1461
DZEQU				  Near	 MAIN:0623
DZLE				  Near	 MAIN:06DD
EDIGS				  Near	 MAIN:09D7
EFN				  Near	 MAIN:1F15
ELOGO				  Number MAIN:BB80
ELSEE				  Near	 MAIN:B0C9
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 289
Symbol Table



EM				  Number FFF0
EMIT				  Near	 MAIN:0ED1
EMPTY				  Near	 MAIN:BD49
ENDC				  Near	 MAIN:B1B1
ENDD				  Near	 MAIN:B0A8
ENDOF				  Alias	 ELSEE
EQUAL				  Near	 MAIN:063B
ERASE				  Near	 MAIN:0466
ERRMSG				  Near	 MAIN:0FD2
ERROR				  Near	 MAIN:11D6
ERROR1				  Word	 MAIN:11E1
ERROR2				  Word	 MAIN:11F7
ERROR3				  Word	 MAIN:1201
ESCAPE				  Number 001B
ESM				  Word	 MAIN:01D6
EVAL				  Near	 MAIN:B9CB
EXEC				  Near	 MAIN:0299
EXEHDR				  Byte	 MAIN:C2D9
EXIT				  Near	 MAIN:0289
EXIT1				  Near	 MAIN:0292
EXN				  Near	 MAIN:1F0B
EXP				  Near	 MAIN:21CA
EXP1				  Near	 MAIN:21DE
EXP2				  Near	 MAIN:220C
EXP3				  Near	 MAIN:2214
EXP4				  Byte	 MAIN:2217
EXSN				  Near	 MAIN:1E2D
F1				  Dword	 MAIN:1831
F2				  Dword	 MAIN:1835
F2PI				  Byte	 MAIN:22E8
F3				  Dword	 MAIN:1839
FABSS				  Near	 MAIN:1BF8
FAD				  Near	 MAIN:19A7
FAD2				  Near	 MAIN:19D8
FAD3				  Near	 MAIN:19DB
FAD4				  Near	 MAIN:19F5
FAD5				  Near	 MAIN:1A1A
FAD6				  Near	 MAIN:1A1D
FAD7				  Near	 MAIN:1A38
FAD8				  Near	 MAIN:1A3B
FALIGN				  Alias	 NEXT
FALIGND				  Alias	 NEXT
FALSE				  Near	 MAIN:0F79
FAT				  Near	 MAIN:1804
FATAN				  Near	 MAIN:23B2
FBLOC				  Near	 MAIN:C0E1
FBUF				  Near	 MAIN:1F01
FCMP				  Near	 MAIN:1909
FCMP1				  Near	 MAIN:1930
FCOMM				  Near	 MAIN:1784
FCON				  Near	 MAIN:C40B
FCOSS				  Near	 MAIN:23A9
FCPL				  Near	 MAIN:1945
FD				  Near	 MAIN:BF1E
FDB				  Near	 MAIN:BEE8
FDB1				  Near	 MAIN:BEEE
FDB2				  Near	 MAIN:BEF5
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 290
Symbol Table



FDB3				  Near	 MAIN:BF0E
FDBS				  Number F76D
FDEPTH				  Near	 MAIN:1790
FDI				  Near	 MAIN:1B34
FDI1				  Near	 MAIN:1B40
FDI2				  Near	 MAIN:1B4D
FDI3				  Near	 MAIN:1B50
FDOT				  Near	 MAIN:210F
FDOTR				  Near	 MAIN:2104
FDP				  Near	 MAIN:1EFA
FDROP				  Near	 MAIN:17A3
FDSIZ				  Number 0058
FDT				  Near	 MAIN:BEAE
FDUP				  Near	 MAIN:17AB
FEDOT				  Near	 MAIN:20B2
FEDR				  Near	 MAIN:20A7
FEXP				  Near	 MAIN:2381
FF				  Number 000C
FFL				  Near	 MAIN:1C40
FFLN				  Near	 MAIN:238A
FG				  Near	 MAIN:0CF7
FG1				  Near	 MAIN:0CFF
FGRE				  Near	 MAIN:1C5D
FH				  Near	 MAIN:15FB
FID				  Near	 MAIN:BF1B
FIDEN				  Near	 MAIN:C418
FIDEN1				  Word	 MAIN:C448
FILL				  Near	 MAIN:0469
FILL1				  Near	 MAIN:0470
FIND				  Near	 MAIN:B2D5
FIX				  Near	 MAIN:1B73
FIX1				  Near	 MAIN:1B97
FIX2				  Near	 MAIN:1B99
FLES				  Near	 MAIN:1C4B
FLIT				  Near	 MAIN:176C
FLITE				  Near	 MAIN:C400
FLOAD				  Near	 MAIN:C2CE
FLOAT				  Number FFFF
FLOATP				  Near	 MAIN:173F
FLOATS				  Near	 MAIN:1746
FLOOR				  Near	 MAIN:1C81
FLR				  Near	 MAIN:1B9E
FLR1				  Near	 MAIN:1BA0
FLR2				  Near	 MAIN:1BC6
FLR3				  Near	 MAIN:1BDC
FLR4				  Near	 MAIN:1BE8
FLR5				  Near	 MAIN:1BF1
FLR6				  Near	 MAIN:1BF7
FLT				  Near	 MAIN:1B5C
FLT2				  Near	 MAIN:1B70
FLTA				  Near	 MAIN:1B53
FLUSF				  Near	 MAIN:1703
FLUSF1				  Near	 MAIN:170D
FLUSH				  Near	 MAIN:C01E
FMARK				  Near	 MAIN:B083
FMAX				  Near	 MAIN:1C73
FMAX1				  Near	 MAIN:1C7E
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 291
Symbol Table



FMIN				  Near	 MAIN:1C65
FMIN1				  Near	 MAIN:1C70
FMMOD				  Near	 MAIN:0818
FMMOD1				  Near	 MAIN:081B
FMMOD2				  Near	 MAIN:0829
FMU				  Near	 MAIN:1AB9
FMU1				  Near	 MAIN:1AC3
FMU2				  Near	 MAIN:1AD9
FMU3				  Near	 MAIN:1ADC
FMU4				  Near	 MAIN:1ADF
FNB				  Near	 MAIN:BF12
FNEG				  Near	 MAIN:1C03
FNU				  Number MAIN:C44A
FNUM				  Number 0006
FNUMB				  Near	 MAIN:C44A
FNUMB1				  Word	 MAIN:C46D
FORG				  Near	 MAIN:BD60
FORG1				  Word	 MAIN:BD8E
FORG2				  Word	 MAIN:BD94
FORTH				  Near	 MAIN:B8CB
FORTH0				  Word	 HEADS:0D64
FORTH1				  Word	 MAIN:B8C5
FORTH2				  Word	 MAIN:B8C7
FORTH3				  Number 0D66
FOVER				  Near	 MAIN:17D4
FP1				  Byte	 MAIN:2230
FP10				  Byte	 MAIN:1840
FP25				  Byte	 MAIN:22F4
FP50				  Byte	 MAIN:22F0
FPACK				  Near	 MAIN:1901
FPENG				  Alias	 YES
FPI				  Near	 MAIN:23BB
FPI2				  Byte	 MAIN:22EC
FPICK				  Near	 MAIN:181C
FPINI				  Near	 MAIN:23C2
FPLUS				  Near	 MAIN:1C95
FPOP				  Near	 MAIN:174E
FPOS				  Near	 MAIN:1576
FPOS1				  Near	 MAIN:1582
FPRUN				  Near	 MAIN:C471
FPRUN1				  Word	 MAIN:C48B
FPS				  Number 002C
FPUSH				  Near	 MAIN:175D
FPX				  Alias	 NO
FRESET				  Near	 MAIN:BA2A
FRND				  Near	 MAIN:1C8A
FRND1				  Near	 MAIN:1C8F
FROMR				  Near	 MAIN:02D2
FROT				  Near	 MAIN:17E7
FSDOT				  Near	 MAIN:2094
FSDR				  Near	 MAIN:2089
FSINN				  Near	 MAIN:23A0
FSIZ				  Near	 MAIN:1585
FSLAS				  Near	 MAIN:1CB0
FSP				  Near	 MAIN:0FC1
FSPP				  Word	 MAIN:0FC4
FSQ				  Near	 MAIN:2393
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 292
Symbol Table



FSQR				  Near	 MAIN:2378
FSSAV				  Word	 MAIN:01E4
FSTACK				  Number FFFF
FSTAR				  Near	 MAIN:1CA7
FSTOR				  Near	 MAIN:1810
FSU				  Near	 MAIN:19A4
FSUBB				  Near	 MAIN:1C9E
FSWAP				  Near	 MAIN:17BD
FSZERO				  Near	 MAIN:0FEF
FTEN				  Near	 MAIN:183D
FTOD				  Near	 MAIN:1C16
FTOD1				  Near	 MAIN:1C21
FTOS				  Near	 MAIN:1C2F
FVAR				  Alias	 TVAR
FVR				  Near	 MAIN:1D0C
FW				  Number 0004
FXP				  Near	 MAIN:1D02
FZE				  Near	 MAIN:1C38
FZE1				  Near	 MAIN:1C3B
FZG				  Near	 MAIN:1C53
FZG1				  Near	 MAIN:1C56
FZL				  Near	 MAIN:1C43
FZL1				  Near	 MAIN:1C46
GCURS				  Near	 MAIN:01F1
GDOT				  Near	 MAIN:2147
GDOTR				  Near	 MAIN:213C
GDRV				  Near	 MAIN:149A
GETCON				  Near	 MAIN:B233
GETCUR				  Near	 MAIN:B23A
GETFN				  Near	 MAIN:C22E
GETWIN				  Near	 MAIN:0CE2
GETXY				  Near	 MAIN:0CBE
GETXY1				  Near	 MAIN:0CC9
GMODE				  Near	 MAIN:0204
GREAT				  Near	 MAIN:066C
HAT				  Near	 MAIN:B000
HCAT				  Near	 MAIN:B012
HEADR				  Near	 MAIN:B303
HEADR1				  Word	 MAIN:B367
HEADR2				  Word	 MAIN:B3A2
HERE				  Near	 MAIN:1026
HEX				  Near	 MAIN:08D8
HH				  Near	 MAIN:101A
HH1				  Near	 MAIN:1023
HLD				  Near	 MAIN:0FFE
HLIMIT				  Near	 MAIN:B4ED
HLTQ				  Near	 MAIN:147F
HLTQ1				  Word	 MAIN:1494
HLTQ2				  Word	 MAIN:1498
HM				  Number 8000
HOLD				  Near	 MAIN:0A34
HORIG				  Number HEADS:0000
HSEG				  Near	 MAIN:03CD
HSEG1				  Word	 MAIN:03D0
HSTART				  Word	 MAIN:01EA
HSTOR				  Near	 MAIN:B009
IATTR				  Byte	 MAIN:01BF
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 293
Symbol Table



IBOOT				  Word	 MAIN:01D8
IDENT				  Number MAIN:C418
IDO				  Near	 MAIN:0ACD
IDP				  Word	 MAIN:01CC
IDPH				  Word	 MAIN:01D4
IDPS				  Word	 MAIN:01CE
IFF				  Near	 MAIN:B0B3
IFS0				  Word	 MAIN:01D2
IMMED				  Near	 MAIN:B816
IMODE				  Byte	 MAIN:01BD
INISCR				  Near	 MAIN:C1C1
INISCR1				  Word	 MAIN:C1CC
INIT				  Number MAIN:23C2
INITDP				  Number MAIN:23CF
INITDPH				  Number 1481
INITDPS				  Number MAIN:C48F
INITU				  Number MAIN:01C2
INITU2				  Number MAIN:01D6
INN				  Near	 MAIN:B4FE
INN1				  Word	 MAIN:B501
INSLN				  Near	 MAIN:0D45
INSLN1				  Near	 MAIN:0D48
INTC				  Near	 MAIN:0B6F
INTC1				  Near	 MAIN:0B99
INTE				  Near	 MAIN:B946
INTE1				  Word	 MAIN:B949
INTE2				  Word	 MAIN:B969
INTE3				  Word	 MAIN:B96B
INTE4				  Word	 MAIN:B96F
INTE5				  Word	 MAIN:B97D
INTE6				  Word	 MAIN:B983
INTS				  Alias	 YES
INVERT				  Near	 MAIN:073B
IOFN				  Word	 MAIN:0E30
IORR				  Near	 MAIN:0C14
IR0				  Word	 MAIN:01CA
IS				  Alias	 TO
IS0				  Word	 MAIN:01C8
IVOC				  Word	 MAIN:01D0
JDO				  Near	 MAIN:0AD7
KBFN				  Byte	 MAIN:01E1
KBPEND				  Byte	 MAIN:01E3
KEY				  Near	 MAIN:0E8F
KEYQ				  Near	 MAIN:0E5B
LAST				  Near	 MAIN:B4F2
LAST1				  Word	 MAIN:B4F5
LAST2				  Word	 MAIN:B4F7
LASTF				  Near	 MAIN:C14F
LASTL				  Number 147A
LBRAC				  Near	 MAIN:B6F9
LD2OP				  Near	 MAIN:1865
LDOP				  Near	 MAIN:1858
LDP				  Alias	 YES
LEAVEE				  Near	 MAIN:B11D
LESS				  Near	 MAIN:0668
LF				  Number 000A
LFILL				  Near	 MAIN:0475
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 294
Symbol Table



LFIND				  Near	 MAIN:BC3C
LFIND1				  Word	 MAIN:BC43
LFIND2				  Word	 MAIN:BC5B
LIMIT				  Near	 MAIN:0F8F
LIMIT1				  Word	 MAIN:0F92
LINKC				  Near	 MAIN:112E
LIT				  Near	 MAIN:02A8
LITER				  Near	 MAIN:BE5B
LITER1				  Word	 MAIN:BE6C
LN2				  Byte	 MAIN:222C
LNK				  Number HEADS:147A
LOAD				  Near	 MAIN:C09A
LOADED				  Near	 MAIN:C2B5
LOADF				  Near	 MAIN:BF40
LOC				  Number MAIN:C48F
LOD				  Near	 MAIN:1893
LOD1				  Near	 MAIN:189B
LOD2				  Near	 MAIN:18AB
LODF1				  Near	 MAIN:184E
LODF2				  Near	 MAIN:1853
LODR				  Near	 MAIN:18CF
LOG				  Near	 MAIN:2234
LOG1				  Near	 MAIN:2257
LOG2				  Byte	 MAIN:225A
LOGO				  Number MAIN:BB65
LOOPP				  Near	 MAIN:B135
LOOPP1				  Near	 MAIN:B138
LREAD				  Near	 MAIN:15D4
LSH				  Near	 MAIN:08B9
LSTOUT				  Near	 MAIN:0EC1
LVV				  Near	 MAIN:B0FC
LWRIT				  Near	 MAIN:15F6
MARKER				  Near	 MAIN:BD98
MAX				  Near	 MAIN:0693
MAX1				  Near	 MAIN:069B
MAXP				  Near	 MAIN:14B3
MAXSIG				  Number 0007
MDEX				  Near	 MAIN:1A46
MDEX1				  Near	 MAIN:1A78
MDEX2				  Near	 MAIN:1A7E
MIN				  Near	 MAIN:0684
MIN1				  Near	 MAIN:068C
MODD				  Near	 MAIN:084A
MOVD				  Near	 MAIN:0244
MOVD1				  Near	 MAIN:0246
MOVD2				  Near	 MAIN:0251
MOVD3				  Near	 MAIN:0258
MOVE				  Near	 MAIN:049C
MOVPAT				  Near	 MAIN:23CF
MPLUS				  Near	 MAIN:077D
MPREC				  Near	 MAIN:1E29
MS				  Near	 MAIN:0C9D
MS0				  Near	 MAIN:0C6A
MS1				  Near	 MAIN:0C6F
MS2				  Near	 MAIN:0C71
MS3				  Near	 MAIN:0C7E
MS4				  Near	 MAIN:0C83
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 295
Symbol Table



MS5				  Number MAIN:0C8A
MS6				  Near	 MAIN:0C91
MS7				  Near	 MAIN:0C92
MSM				  Near	 MAIN:07DC
MSM1				  Near	 MAIN:07EA
MSM2				  Near	 MAIN:07F0
MSM3				  Near	 MAIN:07FC
MSM4				  Near	 MAIN:0803
MSSL				  Near	 MAIN:0853
MSSL1				  Word	 MAIN:0890
MSTAR				  Near	 MAIN:07BD
MTBUF				  Near	 MAIN:BF6C
MULX				  Near	 MAIN:1A7F
MULX1				  Near	 MAIN:1A94
MULX2				  Near	 MAIN:1A98
MULX3				  Near	 MAIN:1AA4
MULX4				  Near	 MAIN:1AA5
NAMEF				  Near	 MAIN:B56F
NAMEQ				  Near	 MAIN:BC2D
NCNT				  Near	 MAIN:B54D
NCS				  Near	 MAIN:B158
NCS1				  Near	 MAIN:B164
NEGAT				  Near	 MAIN:0749
NEQU				  Near	 MAIN:0648
NEXT				  Near	 MAIN:01BA
NFD				  Number 0006
NFPM				  Word	 MAIN:0FB0
NFPS				  Word	 MAIN:0FAC
NHOLD				  Near	 MAIN:0A6B
NIP				  Near	 MAIN:0362
NLNK				  Near	 MAIN:B55D
NMSCON				  Word	 MAIN:0FB8
NO				  Number 0000
NODOS				  Byte	 MAIN:1297
NONAM				  Near	 MAIN:B3FB
NOOP				  Number MAIN:01BA
NORAM				  Byte	 MAIN:12AB
NORM				  Near	 MAIN:1952
NORM1				  Near	 MAIN:1954
NORM2				  Near	 MAIN:1964
NORM3				  Near	 MAIN:196C
NORM4				  Near	 MAIN:197F
NOTT				  Alias	 ZEQU
NPACK				  Near	 MAIN:18F6
NPNO				  Word	 MAIN:0FB6
NRTS				  Word	 MAIN:0FB2
NSCR				  Near	 MAIN:BF61
NTMODE				  Word	 MAIN:0FBA
NTNAM				  Near	 MAIN:B566
NUMB				  Near	 MAIN:B8D0
NUMB1				  Word	 MAIN:B8EE
NUMB2				  Word	 MAIN:B8FD
NUMB3				  Word	 MAIN:B90C
NUMB4				  Word	 MAIN:B910
NUMB5				  Word	 MAIN:B930
NUMB6				  Word	 MAIN:B934
NUMB7				  Word	 MAIN:B93A
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 296
Symbol Table



NUMB8				  Word	 MAIN:B93C
NUMQ				  Near	 MAIN:0975
NUMQ1				  Word	 MAIN:09B0
NUMQ2				  Word	 MAIN:09B4
NUMQ3				  Word	 MAIN:09BE
NUMQ4				  Word	 MAIN:09C8
NUS				  Word	 MAIN:0FB4
NUSR				  Near	 MAIN:B534
OF				  Near	 MAIN:B1A6
OFF				  Near	 MAIN:045B
OFF1				  Near	 MAIN:045C
ON				  Near	 MAIN:0453
ON1				  Near	 MAIN:0454
ONE				  Near	 MAIN:0F7F
ONEM				  Near	 MAIN:07A6
ONEP				  Near	 MAIN:0798
OPEN				  Near	 MAIN:C1F8
OPENF				  Near	 MAIN:16D3
OPENF1				  Near	 MAIN:16DA
ORIG				  Number MAIN:0000
ORR				  Near	 MAIN:072B
OUTT				  Near	 MAIN:1008
OVER				  Near	 MAIN:031C
OVF				  Near	 MAIN:1880
PABOR				  Near	 MAIN:11C1
PABQ				  Near	 MAIN:1271
PACCE				  Near	 MAIN:107F
PACCE1				  Word	 MAIN:1084
PACCE2				  Word	 MAIN:10BB
PACCE3				  Word	 MAIN:10E4
PACCE4				  Word	 MAIN:10E8
PACCE5				  Word	 MAIN:10FD
PACCE6				  Word	 MAIN:10FF
PACK				  Near	 MAIN:04AF
PAD				  Near	 MAIN:1115
PAGEE				  Near	 MAIN:0EC9
PAREN				  Near	 MAIN:B85A
PARSE				  Near	 MAIN:B70B
PARSQ				  Near	 MAIN:B765
PASCII				  Near	 MAIN:16C6
PATH				  Near	 MAIN:14B7
PATH1				  Word	 MAIN:14E2
PAUSE				  Near	 MAIN:0D5E
PAUSE1				  Word	 MAIN:0D61
PBAL				  Near	 MAIN:B020
PCHAR				  Near	 MAIN:BEA5
PCHI				  Number MAIN:C48F
PCKEY				  Near	 MAIN:0E68
PCLO				  Number MAIN:23CF
PCLOS				  Near	 MAIN:C100
PCLOS1				  Word	 MAIN:C113
PCR				  Near	 MAIN:0F0C
PDDOT				  Near	 MAIN:0AF0
PDIG				  Near	 MAIN:1D13
PDIG1				  Word	 MAIN:1D16
PDIG2				  Word	 MAIN:1D36
PDIG3				  Word	 MAIN:1D54
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 297
Symbol Table



PDOT				  Near	 MAIN:0B03
PDOTQ				  Near	 MAIN:144D
PELS				  Near	 MAIN:B1BC
PELS1				  Word	 MAIN:B1C1
PELS2				  Word	 MAIN:B1FE
PELS3				  Word	 MAIN:B206
PELS4				  Word	 MAIN:B20A
PELS5				  Word	 MAIN:B20E
PELS6				  Word	 MAIN:B214
PELS7				  Word	 MAIN:B21A
PEVAL				  Near	 MAIN:B987
PEXT				  Near	 MAIN:153B
PEXT1				  Word	 MAIN:154A
PF1				  Near	 MAIN:1F1F
PF2				  Near	 MAIN:1F2E
PF3				  Near	 MAIN:1F3D
PF31				  Word	 MAIN:1F52
PF32				  Word	 MAIN:1F64
PF33				  Word	 MAIN:1F6C
PF4				  Near	 MAIN:1F86
PF41				  Word	 MAIN:1F9F
PF42				  Word	 MAIN:1FB6
PF5				  Near	 MAIN:1FBD
PF6				  Near	 MAIN:1FCC
PF7				  Near	 MAIN:1FD5
PF8				  Near	 MAIN:1FE1
PF9				  Near	 MAIN:1FF0
PF91				  Word	 MAIN:2000
PFAA				  Near	 MAIN:2002
PFAA1				  Word	 MAIN:2011
PFBB				  Near	 MAIN:2015
PFBB1				  Word	 MAIN:204F
PFBK				  Near	 MAIN:C0A6
PFBK1				  Word	 MAIN:C0B7
PFBK2				  Word	 MAIN:C0C5
PFBK3				  Word	 MAIN:C0CF
PFBK4				  Word	 MAIN:C0DF
PFCC				  Near	 MAIN:2051
PFD				  Near	 MAIN:20BF
PFD1				  Word	 MAIN:20EA
PFD2				  Word	 MAIN:20F8
PFD3				  Word	 MAIN:2100
PFDD				  Near	 MAIN:206A
PFIND				  Near	 MAIN:B2A6
PFIND1				  Word	 MAIN:B2B3
PFIND2				  Word	 MAIN:B2CF
PFIND3				  Word	 MAIN:B2D3
PFNUM				  Number MAIN:B93A
PFORG				  Near	 MAIN:BCCC
PFORG1				  Word	 MAIN:BCD7
PFORG2				  Word	 MAIN:BCEF
PFORG3				  Word	 MAIN:BCF9
PFORG4				  Word	 MAIN:BD1B
PFORG5				  Word	 MAIN:BD21
PFORG6				  Word	 MAIN:BD45
PFRES				  Number MAIN:141D
PFSD				  Near	 MAIN:2083
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 298
Symbol Table



PFSE				  Near	 MAIN:20A1
PFSIZ				  Number 0050
PGD				  Near	 MAIN:211C
PGD1				  Word	 MAIN:2138
PHLD				  Near	 MAIN:09E8
PICK				  Near	 MAIN:0358
PIDEN				  Number MAIN:BB82
PIF				  Near	 MAIN:B224
PINIT				  Number MAIN:141F
PIS				  Alias	 PTO
PLACE				  Near	 MAIN:04BC
PLEAV				  Near	 MAIN:0AAE
PLN				  Near	 MAIN:1F1A
PLOOP				  Near	 MAIN:B148
PLUS				  Near	 MAIN:076D
PNAME				  Near	 MAIN:B5CD
PNAME1				  Word	 MAIN:B5D4
PNAME2				  Word	 MAIN:B5E8
PNO				  Number 0044
PNUMB				  Number MAIN:B914
POF				  Near	 MAIN:0A86
POLX				  Near	 MAIN:21B6
POLY				  Near	 MAIN:218D
POLY1				  Near	 MAIN:219E
POLY2				  Near	 MAIN:21AA
POLY3				  Byte	 MAIN:21B5
POPEN				  Near	 MAIN:C213
POSTP				  Near	 MAIN:BDF1
POSTP1				  Word	 MAIN:BE06
POSTP2				  Word	 MAIN:BE0A
POSTP3				  Word	 MAIN:BE16
PPARS				  Near	 MAIN:B70F
PPARS1				  Word	 MAIN:B732
PPSB				  Near	 MAIN:B74C
PPSB1				  Near	 MAIN:B759
PQUI				  Near	 MAIN:BA57
PQUI1				  Word	 MAIN:BA66
PQUI2				  Word	 MAIN:BA7C
PREC				  Near	 MAIN:1EE4
PREFIL				  Near	 MAIN:B9D6
PREFIL1				  Word	 MAIN:BA01
PREFIL2				  Word	 MAIN:BA0E
PREFIL3				  Word	 MAIN:BA18
PRNT				  Near	 MAIN:0F29
PROT				  Near	 MAIN:BBAF
PRUNS				  Near	 MAIN:BBE0
PRUNS1				  Word	 MAIN:BBE3
PRUNS2				  Word	 MAIN:BC07
PSB				  Number FECD
PSCOD				  Near	 MAIN:B418
PSMS				  Near	 MAIN:0C25
PSMS1				  Near	 MAIN:0C48
PSMS2				  Near	 MAIN:0C58
PSQOT				  Near	 MAIN:1447
PSSIZ				  Number 00FF
PSTOR				  Near	 MAIN:044C
PSTR				  Near	 MAIN:05E1
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 299
Symbol Table



PTHEN				  Alias	 NEXT
PTHRU				  Near	 MAIN:C07F
PTHRU1				  Word	 MAIN:C08A
PTHRU2				  Word	 MAIN:C098
PTO				  Near	 MAIN:0F50
PUDOT				  Near	 MAIN:0AED
PWA				  Near	 MAIN:B7B0
QABOR				  Near	 MAIN:1274
QBAL				  Near	 MAIN:B02E
QBLK				  Near	 MAIN:BFD5
QBLOCK				  Near	 MAIN:B9B8
QBLOCK1				  Word	 MAIN:B9C7
QCHAI				  Near	 MAIN:BC80
QCOMP				  Near	 MAIN:B659
QCREAT				  Near	 MAIN:C16B
QCREAT1				  Word	 MAIN:C17C
QCREAT2				  Word	 MAIN:C1A5
QCSP				  Near	 MAIN:B650
QDEF				  Near	 MAIN:B6E3
QDEP				  Near	 MAIN:B04F
QDEST				  Near	 MAIN:B069
QDO				  Near	 MAIN:B118
QDUP				  Near	 MAIN:030B
QDUP1				  Near	 MAIN:0312
QEXEC				  Near	 MAIN:B675
QOPEN				  Near	 MAIN:BF49
QORIG				  Near	 MAIN:B05C
QPROT				  Near	 MAIN:BC0B
QRET				  Near	 MAIN:11B2
QRET1				  Word	 MAIN:11BD
QSTAC				  Near	 MAIN:B68D
QTERM				  Near	 MAIN:0E51
QUES				  Near	 MAIN:0B34
QUIT				  Near	 MAIN:11AF
QWARN				  Near	 MAIN:B2E2
QWARN1				  Word	 MAIN:B301
RAND				  Near	 MAIN:1CB9
RAND1				  Near	 MAIN:1CD4
RAND2				  Near	 MAIN:1CF3
RAND3				  Byte	 MAIN:1CF6
RAND4				  Byte	 MAIN:1CFA
RAND5				  Byte	 MAIN:1CFE
RAT				  Near	 MAIN:02DB
RBRAC				  Near	 MAIN:B6FF
RDROP				  Alias	 UNNEST
READF				  Near	 MAIN:15C3
READF1				  Near	 MAIN:15C7
READF2				  Near	 MAIN:15CC
READL				  Near	 MAIN:1600
READL1				  Word	 MAIN:1617
READL2				  Word	 MAIN:161F
READL3				  Word	 MAIN:1640
READL4				  Word	 MAIN:167C
READL5				  Word	 MAIN:1680
RECURS				  Near	 MAIN:BE93
REFIL				  Near	 MAIN:BA1A
REGS				  Word	 MAIN:0B50
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 300
Symbol Table



REL				  Number 0004
REMEM				  Near	 MAIN:BBC7
RENF				  Near	 MAIN:1728
REPEATT				  Near	 MAIN:B0F3
REPOSF				  Near	 MAIN:15BB
REPR				  Near	 MAIN:1E34
REPR1				  Word	 MAIN:1E5E
REPR2				  Word	 MAIN:1E7C
REPR3				  Word	 MAIN:1E98
REPR4				  Word	 MAIN:1EA2
REPR5				  Word	 MAIN:1EAA
REPR6				  Word	 MAIN:1EDA
REPR7				  Word	 MAIN:1EE0
RESET				  Near	 MAIN:1167
RESIZF				  Near	 MAIN:15A8
RESIZF1				  Near	 MAIN:15B6
RESIZF2				  Near	 MAIN:15B8
RESV				  Near	 MAIN:1057
RETRN				  Near	 MAIN:117C
RETRN1				  Near	 MAIN:119C
RETRO				  Number 0000
REV				  Number 002D
ROLL				  Near	 MAIN:0336
ROLL1				  Near	 MAIN:0342
ROLL2				  Near	 MAIN:034C
RONDR				  Near	 MAIN:1980
RONDR1				  Near	 MAIN:1999
RONDR2				  Near	 MAIN:19A3
ROT				  Near	 MAIN:0324
RPAT				  Near	 MAIN:02C1
RPSTO				  Near	 MAIN:02C5
RSH				  Near	 MAIN:08C1
RSO				  Alias	 FALSE
RSW				  Alias	 TWO
RTS				  Number 0100
RZERO				  Near	 MAIN:0FE5
SAVBUF				  Near	 MAIN:BFF7
SAVBUF1				  Word	 MAIN:C01C
SAVE				  Near	 MAIN:C2F9
SAVE1				  Word	 MAIN:C300
SAVE2				  Word	 MAIN:C3CF
SAVF1				  Near	 MAIN:1844
SAVF2				  Near	 MAIN:1849
SCAN				  Near	 MAIN:04D2
SCAN1				  Near	 MAIN:04E1
SCAPS				  Byte	 MAIN:01DF
SCOMM				  Near	 MAIN:1435
SCR				  Near	 MAIN:B50F
SCRNQ				  Near	 MAIN:BF35
SCSP				  Near	 MAIN:B648
SCURS				  Near	 MAIN:01EE
SDOTR				  Near	 MAIN:0616
SEAR				  Near	 MAIN:05A7
SEAR1				  Near	 MAIN:05BB
SEAR2				  Near	 MAIN:05CE
SEAR3				  Near	 MAIN:05D5
SEAR4				  Near	 MAIN:05D8
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 301
Symbol Table



SEAR5				  Near	 MAIN:05DC
SEMIC				  Near	 MAIN:B3E6
SETCUR				  Near	 MAIN:B241
SETDMA				  Near	 MAIN:149F
SETLIM				  Near	 MAIN:BB9F
SETPR				  Near	 MAIN:1EE9
SETWIN				  Near	 MAIN:0CD0
SEXP				  Near	 MAIN:1D88
SEXP1				  Word	 MAIN:1DA3
SEXP2				  Word	 MAIN:1DAD
SEXP3				  Word	 MAIN:1DC9
SEXP4				  Word	 MAIN:1DD3
SEXP5				  Word	 MAIN:1DDB
SEXT				  Near	 MAIN:152D
SF				  Byte	 MAIN:1830
SFB				  Number F97D
SFLT				  Near	 MAIN:1DDD
SFLT1				  Word	 MAIN:1DFE
SFLT2				  Word	 MAIN:1E0A
SFP				  Near	 MAIN:BEBA
SFP1				  Word	 MAIN:BEBD
SFP2				  Word	 MAIN:BEBF
SHOLD				  Near	 MAIN:0A5E
SHRR				  Near	 MAIN:1936
SHRR1				  Near	 MAIN:1938
SHRR2				  Near	 MAIN:1944
SIGN				  Near	 MAIN:0A3F
SIGN1				  Word	 MAIN:0A4D
SIN				  Near	 MAIN:2285
SIN1				  Near	 MAIN:228A
SIN2				  Near	 MAIN:2291
SIN3				  Near	 MAIN:22A5
SIN4				  Near	 MAIN:22B1
SIN5				  Near	 MAIN:22C5
SIN6				  Near	 MAIN:22D1
SIN7				  Byte	 MAIN:22D7
SINTE				  Near	 MAIN:BA1F
SKIP				  Near	 MAIN:04E6
SKIP1				  Near	 MAIN:04F5
SLASH				  Near	 MAIN:0841
SLITE				  Near	 MAIN:BE23
SLMOD				  Near	 MAIN:083C
SM				  Number B000
SMAN				  Near	 MAIN:1D56
SMAN1				  Word	 MAIN:1D7A
SMREM				  Near	 MAIN:080F
SMREM1				  Near	 MAIN:0812
SMSS				  Near	 MAIN:0C5B
SMUDG				  Near	 MAIN:B828
SNN				  Near	 MAIN:1F10
SNUM				  Near	 MAIN:BF15
SNUMB				  Near	 MAIN:095A
SNUMB1				  Word	 MAIN:0973
SOUND				  Near	 MAIN:0CA2
SOUND0				  Near	 MAIN:0C96
SOUND1				  Near	 MAIN:0C9C
SOURCE				  Near	 MAIN:B705
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 302
Symbol Table



SPACE				  Near	 MAIN:0ECC
SPACS				  Near	 MAIN:0EF9
SPACS1				  Word	 MAIN:0F04
SPACS2				  Word	 MAIN:0F0A
SPARS				  Near	 MAIN:B769
SPARS1				  Word	 MAIN:B76E
SPARS2				  Word	 MAIN:B7A6
SPAT				  Near	 MAIN:02B6
SPSTO				  Near	 MAIN:02BB
SQR				  Near	 MAIN:2154
SQR1				  Near	 MAIN:215A
SQR2				  Near	 MAIN:215F
SQR3				  Near	 MAIN:216D
SQUOT				  Near	 MAIN:BE2E
SQUOT1				  Word	 MAIN:BE3B
SSEG				  Near	 MAIN:03C8
SSEG1				  Word	 MAIN:03CB
SSGN				  Near	 MAIN:0941
SSGN1				  Near	 MAIN:0952
SSGN2				  Near	 MAIN:0954
SSLA				  Near	 MAIN:0833
SSMOD				  Near	 MAIN:082C
SSTR				  Near	 MAIN:0538
STAR				  Near	 MAIN:07C6
START				  Near	 MAIN:0100
STATE				  Near	 MAIN:B50A
STATE1				  Word	 MAIN:B50D
STATEQ				  Near	 MAIN:B539
STATF				  Near	 MAIN:1710
STOBAS				  Near	 MAIN:08C9
STOD				  Near	 MAIN:0742
STOF				  Near	 MAIN:1C26
STOM				  Near	 MAIN:18B8
STOM1				  Near	 MAIN:18BA
STORE				  Near	 MAIN:03D8
STORL				  Near	 MAIN:040B
STORR				  Near	 MAIN:18B2
STRR				  Near	 MAIN:026B
SUBB				  Near	 MAIN:0775
SVOP				  Near	 MAIN:1876
SWAP				  Near	 MAIN:0315
SWAPF				  Near	 MAIN:BEC1
SWAPF1				  Word	 MAIN:BED2
SYS				  Near	 MAIN:0FCD
SYS1				  Word	 MAIN:0FD0
SYSQ				  Near	 MAIN:100D
SYSTEM				  Near	 MAIN:B547
SYSVEC				  Near	 MAIN:0F99
SZERO				  Near	 MAIN:0FE0
TAB				  Number 0009
TAH				  Near	 MAIN:0BF3
TAT				  Near	 MAIN:03EE
TAT1				  Near	 MAIN:03EF
TATL				  Near	 MAIN:0430
TAX				  Near	 MAIN:0BF6
TBH				  Near	 MAIN:0BED
TBLAN				  Near	 MAIN:0520
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 303
Symbol Table



TBLAN1				  Near	 MAIN:052A
TBLAN2				  Near	 MAIN:0532
TBLAN3				  Near	 MAIN:0535
TBODY				  Near	 MAIN:1078
TBP				  Near	 MAIN:0BDE
TBX				  Near	 MAIN:0BF0
TCH				  Near	 MAIN:0BE7
TCON				  Near	 MAIN:B472
TCX				  Near	 MAIN:0BEA
TDH				  Near	 MAIN:0BE1
TDI				  Near	 MAIN:0BD8
TDROP				  Near	 MAIN:0378
TDRV				  Near	 MAIN:14A7
TDRV1				  Near	 MAIN:14AE
TDS				  Near	 MAIN:0BD5
TDUP				  Near	 MAIN:037E
TDX				  Near	 MAIN:0BE4
TES				  Near	 MAIN:0BD2
TFL				  Near	 MAIN:0BCF
TFLT				  Near	 MAIN:1E0C
TFLT1				  Word	 MAIN:1E21
TFNAM				  Near	 MAIN:16A7
TFROM				  Near	 MAIN:02ED
THEN				  Near	 MAIN:B099
THREE				  Near	 MAIN:0F87
THROW				  Near	 MAIN:1219
THROW1				  Word	 MAIN:1230
THROW2				  Word	 MAIN:1248
THRU				  Near	 MAIN:C09D
TIB				  Number FE7D
TIBSIZ				  Number 0050
TICK				  Near	 MAIN:B7F9
TICKS				  Near	 MAIN:0C19
TLIT				  Near	 MAIN:02AD
TLITE				  Near	 MAIN:BE74
TMPSTK				  Number MAIN:01B0
TNAM				  Near	 MAIN:B58E
TNAM1				  Word	 MAIN:B593
TNAM2				  Word	 MAIN:B5A1
TNAM3				  Word	 MAIN:B5BD
TNAM4				  Word	 MAIN:B5C3
TNAM5				  Word	 MAIN:B5C9
TNEXT				  Near	 MAIN:0F94
TNEXT1				  Word	 MAIN:0F97
TNIP				  Near	 MAIN:03AD
TO				  Near	 MAIN:B49F
TO1				  Word	 MAIN:B4B2
TOD				  Near	 MAIN:020F
TOKEN				  Near	 MAIN:B7E7
TONUM				  Near	 MAIN:0900
TONUM1				  Word	 MAIN:0903
TONUM2				  Word	 MAIN:093B
TONUM3				  Word	 MAIN:093F
TOPNFA				  Number 147A
TOPPRU				  Number MAIN:C48B
TOPXT				  Alias	 CFADR
TOR				  Near	 MAIN:02C9
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 304
Symbol Table



TOVER				  Near	 MAIN:0393
TPA				  Number 0100
TPAD				  Near	 MAIN:1123
TPRUN				  Near	 MAIN:BBC2
TRAT				  Near	 MAIN:02F9
TRIM				  Near	 MAIN:04FD
TRIM1				  Near	 MAIN:0511
TROT				  Near	 MAIN:039E
TRR				  Near	 MAIN:0AE0
TRUE				  Near	 MAIN:0F72
TSI				  Near	 MAIN:0BDB
TSOUR1				  Word	 MAIN:B506
TSOURC				  Near	 MAIN:B503
TST1				  Near	 MAIN:18E4
TST2				  Near	 MAIN:18E6
TST3				  Near	 MAIN:18E8
TSTAR				  Near	 MAIN:0892
TSTOR				  Near	 MAIN:03F7
TSTORL				  Near	 MAIN:043E
TSTR				  Near	 MAIN:18EB
TSTR1				  Near	 MAIN:18F2
TSWAP				  Near	 MAIN:0388
TSYNC				  Near	 MAIN:0220
TSYNC1				  Near	 MAIN:0224
TTOR				  Near	 MAIN:02E1
TUCK				  Near	 MAIN:036A
TURNK				  Near	 MAIN:C3E9
TURNK1				  Word	 MAIN:C3EE
TURNKS				  Near	 MAIN:C3F4
TVAR				  Near	 MAIN:B466
TWO				  Near	 MAIN:0F83
TWODIV				  Near	 MAIN:0899
TWOM				  Near	 MAIN:07AC
TWOP				  Near	 MAIN:079E
TYPEE				  Near	 MAIN:0EE4
TYPEE1				  Word	 MAIN:0EED
TYPEE2				  Word	 MAIN:0EF5
UCASE				  Alias	 YES
UDOT				  Near	 MAIN:0B0C
UDOTR				  Near	 MAIN:0B1A
UGREA				  Near	 MAIN:067A
ULESS				  Near	 MAIN:0670
ULIMIT				  Word	 MAIN:01E6
UMAX				  Near	 MAIN:06AB
UMAX1				  Near	 MAIN:06B3
UMIN				  Near	 MAIN:069F
UMIN1				  Near	 MAIN:06A7
UMSLM				  Near	 MAIN:07CE
UMSTR				  Near	 MAIN:07B4
UNDEF				  Near	 MAIN:0F59
UNLOO				  Near	 MAIN:0AA8
UNNEST				  Near	 MAIN:028C
UNNEST1				  Near	 MAIN:028F
UNTIL				  Near	 MAIN:B0D6
UNTIL1				  Near	 MAIN:B0D9
UNUS				  Near	 MAIN:113F
UNUS1				  Word	 MAIN:1150
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 305
Symbol Table



UNUS2				  Word	 MAIN:1152
UP				  Near	 MAIN:0FBC
UPC				  Near	 MAIN:022F
UPC1				  Near	 MAIN:0239
UPCAS				  Near	 MAIN:0F32
UPDATE				  Near	 MAIN:BF75
UPP				  Word	 MAIN:0FBF
UPPER				  Near	 MAIN:0F39
UPPER1				  Near	 MAIN:0F41
UPPER2				  Near	 MAIN:0F4D
US				  Number 0080
USER				  Near	 MAIN:B481
USING				  Near	 MAIN:C24C
USING1				  Word	 MAIN:C27F
USING2				  Word	 MAIN:C29B
USING3				  Word	 MAIN:C2A3
USING4				  Word	 MAIN:C2AB
UTDIV				  Near	 MAIN:08A0
VALUE				  Near	 MAIN:B446
VALUE1				  Word	 MAIN:B449
VAR				  Near	 MAIN:B43B
VBOLD				  Near	 MAIN:0D29
VBRITE				  Near	 MAIN:0D2E
VCON				  Word	 MAIN:0FA2
VEMIT				  Word	 MAIN:0FA0
VIDEO				  Near	 MAIN:01FD
VIDEOA				  Near	 MAIN:01F9
VIDEOP				  Near	 MAIN:01F3
VINVER				  Near	 MAIN:0D24
VKEY				  Word	 MAIN:0F9E
VKEYQ				  Word	 MAIN:0F9C
VLST				  Word	 MAIN:0FA4
VNORM				  Near	 MAIN:0D1B
VNORM1				  Near	 MAIN:0D1E
VOCAB				  Near	 MAIN:B892
VOCL				  Near	 MAIN:B52A
WARNN				  Near	 MAIN:B516
WARNN1				  Word	 MAIN:B519
WBSIZ				  Number 0024
WFIND				  Near	 MAIN:B248
WFIND1				  Near	 MAIN:B263
WFIND2				  Near	 MAIN:B279
WFIND3				  Near	 MAIN:B27D
WFIND4				  Near	 MAIN:B2A0
WFIND5				  Near	 MAIN:B2A3
WHILEE				  Near	 MAIN:B0E8
WITHIN				  Near	 MAIN:06B7
WLIST				  Near	 MAIN:B866
WMAX				  Byte	 MAIN:0109
WMIN				  Byte	 MAIN:0107
WOPT				  Alias	 YES
WORDD				  Near	 MAIN:B7DC
WPACK				  Near	 MAIN:B7B5
WRITF				  Near	 MAIN:15D9
WRITF1				  Near	 MAIN:15DD
WRITF2				  Near	 MAIN:15E5
WRITF3				  Near	 MAIN:15F3
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 306
Symbol Table



WRITL				  Near	 MAIN:168C
WRITL1				  Word	 MAIN:169F
WSO				  Alias	 ONE
WTICK				  Near	 MAIN:0C1F
WTNAM				  Near	 MAIN:B57A
X				  Number 0000
XDO				  Near	 MAIN:0ABB
XDP				  Near	 MAIN:BBD2
XDP1				  Near	 MAIN:BBDD
XLOOP				  Near	 MAIN:0A9B
XNFA				  Near	 MAIN:B819
XORR				  Near	 MAIN:0733
XPLOO				  Near	 MAIN:0A9F
XQDO				  Near	 MAIN:0AB4
YES				  Number FFFF
YN				  Near	 MAIN:1468
ZB1				  Byte	 MAIN:0110
ZB2				  Byte	 MAIN:0161
ZBRAN				  Near	 MAIN:0A92
ZBRAN1				  Near	 MAIN:0A95
ZBSIZ				  Number 0051
ZBUF				  Near	 MAIN:0FD9
ZBUF1				  Word	 MAIN:0FDC
ZCNT				  Near	 MAIN:05F1
ZCNT1				  Near	 MAIN:05F9
ZCNT2				  Near	 MAIN:05FD
ZCNT3				  Near	 MAIN:05FF
ZCNT4				  Near	 MAIN:0609
ZEQU				  Near	 MAIN:0628
ZEQU1				  Near	 MAIN:0629
ZERO				  Alias	 FALSE
ZGREA				  Near	 MAIN:065A
ZGREA1				  Near	 MAIN:065D
ZGREA2				  Near	 MAIN:0664
ZLESS				  Near	 MAIN:0654
ZMAX				  Near	 MAIN:0690
ZNEQ				  Near	 MAIN:0632
ZNEQ1				  Near	 MAIN:0633
ZPLACE				  Near	 MAIN:060A
ZRO				  Near	 MAIN:1889

Macro Name

ASEG
CSEG
DATE
DCS
GFDB
HDR
IGNORE1
IGNORE2
IODELAY
NEXTT
Turbo Assembler	 Version 4.1	    22/05/10 22:21:49	    Page 307
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  HEADS				  16  1481 Byte	  Public
  MAIN				  16  23F9 Byte	  Public  CODE
